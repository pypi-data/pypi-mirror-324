[build-system]
requires = [
    "pdm-backend",
    "gitpython>=3.1.43",
]
build-backend = "pdm.backend"

[project]
name = "asyncord"
description = "A smart and powerful base for creating discord bots and interaction with the API."
authors = [
    { name = "Vadim Suharnikov", email = "vsuharnikov@gmail.com" },
]
readme = "README.rst"
requires-python = ">=3.12.0"
dependencies = [
    "yarl>=1.8.1",
    "rich>=12.5.1",
    "pydantic>=2.4.2",
    "aiohttp<4",
    "filetype>=1.2.0",
    "fbenum>=1.0.1",
]
dynamic = []
version = "0.13.19"

[project.urls]
homepage = "https://github.com/suharnikov/asyncord"
repository = "https://github.com/suharnikov/asyncord"

[project.license]
text = "MIT"

[dependency-groups]
dev = [
    "python-git>=2018.2.1",
    "pre-commit>=3.3.2",
    "ruff>=0.4.4",
    "gitpython>=3.1.43",
]
testing = [
    "pytest>=7.3.1",
    "pytest-asyncio>=0.19.0,<0.23.0",
    "pytest-pretty>=1.2.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.6.1",
    "pytest-cov>=5.0.0",
]
docs = [
    "mkdocs-material>=9.5.44",
    "mkdocs-minify-plugin>=0.8.0",
]

[tool.uv]
default-groups = [
    "dev",
    "testing",
]

[tool.uv.workspace]
members = [
    "examples/echo",
    "examples/levels",
    "examples/help_desk",
    "examples/gallery",
    "examples/neuro_tags",
]

[tool.pdm.version]
source = "call"
getter = "scritps.version:get_version"

[tool.pytest.ini_options]
minversion = "6.2"
addopts = "-ra --dist=loadscope --color=yes"
asyncio_mode = "auto"
testpaths = [
    "tests",
]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
    "^class .*\\(Protocol\\):$",
    "if reason:",
    "@overload",
    "NotImplementedError",
]

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py312"
extend-exclude = [
    ".git",
    ".vscode",
    ".devcontainer",
    ".github",
    ".venv",
]

[tool.ruff.lint]
preview = true
select = [
    "F",
    "D",
    "E",
    "W",
    "I",
    "N",
    "B",
    "UP",
    "ANN",
    "S",
    "COM",
    "DTZ",
    "FA",
    "ISC",
    "G",
    "INP001",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SIM",
    "TID",
    "PTH",
    "ERA",
    "PL",
    "RUF",
]
ignore = [
    "D104",
    "ISC003",
    "SLF001",
    "N805",
    "SIM108",
    "SIM102",
    "PLC0414",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D100",
    "S101",
    "S311",
    "PLC0208",
    "PLR2004",
    "RUF029",
]
"docs/source/conf.py" = [
    "INP001",
    "D100",
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true

[tool.ruff.lint.pylint]
allow-dunder-method-names = [
    "__get_pydantic_core_schema__",
]
max-args = 7

[tool.ruff.format]
preview = true
quote-style = "single"
