import gast
from tensorflow.python.autograph.pyct import anno as anno, ast_util as ast_util, parser as parser, qual_names as qual_names
from typing import Any

class ContextAdjuster(gast.NodeTransformer):
    def __init__(self, override_value) -> None: ...
    def visit(self, node): ...
    def visit_Attribute(self, node): ...
    def visit_Tuple(self, node): ...
    def visit_List(self, node): ...
    def visit_Name(self, node): ...
    def visit_Call(self, node): ...
    def visit_Dict(self, node): ...
    def visit_Subscript(self, node): ...
    def visit_comprehension(self, node): ...
    def visit_Lambda(self, node): ...

class ReplaceTransformer(gast.NodeTransformer):
    replacements: Any
    in_replacements: bool
    preserved_annos: Any
    def __init__(self, replacements) -> None: ...
    def visit_Expr(self, node): ...
    def visit_keyword(self, node): ...
    def visit_FunctionDef(self, node): ...
    def visit_Attribute(self, node): ...
    def visit_Name(self, node): ...

def replace(template, **replacements): ...
def replace_as_expression(template, **replacements): ...
