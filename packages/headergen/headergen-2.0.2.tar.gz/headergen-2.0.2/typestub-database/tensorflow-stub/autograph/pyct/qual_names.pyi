import gast
from tensorflow.python.autograph.pyct import anno as anno, parser as parser
from typing import Any

class CallerMustSetThis: ...
class Symbol: ...
class Literal: ...

class QN:
    qn: Any
    def __init__(self, base, attr: Any | None = ..., subscript: Any | None = ...) -> None: ...
    def is_symbol(self): ...
    def is_simple(self): ...
    def is_composite(self): ...
    def has_subscript(self): ...
    def has_attr(self): ...
    @property
    def attr(self): ...
    @property
    def parent(self): ...
    @property
    def owner_set(self): ...
    @property
    def support_set(self): ...
    def __hash__(self): ...
    def __eq__(self, other): ...
    def __lt__(self, other): ...
    def __gt__(self, other): ...
    def ssf(self): ...
    def ast(self): ...

class QnResolver(gast.NodeTransformer):
    def visit_Name(self, node): ...
    def visit_Attribute(self, node): ...
    def visit_Subscript(self, node): ...

def resolve(node): ...
def from_str(qn_str): ...
