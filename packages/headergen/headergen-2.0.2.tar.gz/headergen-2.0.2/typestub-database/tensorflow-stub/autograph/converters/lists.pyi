from tensorflow.python.autograph.core import converter as converter
from tensorflow.python.autograph.lang import directives as directives
from tensorflow.python.autograph.pyct import anno as anno, parser as parser, qual_names as qual_names, templates as templates
from tensorflow.python.autograph.pyct.static_analysis import activity as activity
from tensorflow.python.autograph.pyct.static_analysis.annos import NodeAnno as NodeAnno
from typing import Any

class _Statement:
    pop_uses: Any
    def __init__(self) -> None: ...

class ListTransformer(converter.Base):
    def visit_List(self, node): ...
    def visit_Call(self, node): ...
    def visit_FunctionDef(self, node): ...
    def visit_For(self, node): ...
    def visit_While(self, node): ...
    def visit_If(self, node): ...
    def visit_With(self, node): ...

def transform(node, ctx): ...
