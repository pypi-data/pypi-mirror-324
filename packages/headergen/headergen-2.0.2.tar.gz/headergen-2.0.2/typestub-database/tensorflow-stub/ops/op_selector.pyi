from tensorflow.python.framework import ops as ops
from tensorflow.python.util import object_identity as object_identity
from typing import Any

def is_differentiable(op): ...
def is_iterable(obj): ...
def concatenate_unique(la, lb): ...
def get_tensors(graph): ...
def get_unique_graph(tops, check_types: Any | None = ..., none_if_empty: bool = ...): ...
def check_graphs(*args) -> None: ...
def make_list_of_t(ts, check_graph: bool = ..., allow_graph: bool = ..., ignore_ops: bool = ...): ...
def get_generating_ops(ts): ...
def get_consuming_ops(ts): ...
def make_list_of_op(tops, check_graph: bool = ..., allow_graph: bool = ..., ignore_ts: bool = ...): ...
def get_backward_walk_ops(seed_ops, inclusive: bool = ..., within_ops: Any | None = ..., within_ops_fn: Any | None = ..., stop_at_ts=..., control_inputs: bool = ..., only_differentiable: bool = ...): ...

class UnliftableError(Exception):
    ag_pass_through: bool

def graph_inputs(op): ...
def map_subgraph(init_tensor, sources, disallowed_placeholders, visited_ops, op_outputs, add_sources): ...
