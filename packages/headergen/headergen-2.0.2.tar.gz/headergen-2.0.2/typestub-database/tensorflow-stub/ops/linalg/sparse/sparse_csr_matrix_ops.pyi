from tensorflow.python.ops.linalg.sparse.gen_sparse_csr_matrix_ops import *
import abc
from typing import Any

class DenseShapeAndType: ...

def dense_shape_and_type(matrix): ...
def matmul(a, b, transpose_a: bool = ..., transpose_b: bool = ..., adjoint_a: bool = ..., adjoint_b: bool = ..., name: Any | None = ...): ...

class SparseMatrix(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def __init__(self): ...
    @abc.abstractmethod
    def to_dense(self): ...
    @abc.abstractmethod
    def to_sparse_tensor(self): ...
    @property
    def graph(self): ...
    @property
    def shape(self): ...
    @property
    def dtype(self): ...
    @property
    def eager_handle_data(self): ...
    def conj(self): ...
    def hermitian_transpose(self): ...
    def nnz(self): ...
    nonzero: Any
    def sorted_indices(self): ...
    def transpose(self): ...

class CSRSparseMatrix(SparseMatrix):
    def __init__(self, value, indices: Any | None = ..., name: Any | None = ...) -> None: ...
    def to_dense(self): ...
    def to_sparse_tensor(self): ...
