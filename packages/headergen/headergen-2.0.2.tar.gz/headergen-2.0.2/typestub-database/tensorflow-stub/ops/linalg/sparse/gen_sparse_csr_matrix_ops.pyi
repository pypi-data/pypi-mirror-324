from tensorflow.python.util.deprecation import deprecated_endpoints as deprecated_endpoints
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any, NamedTuple

class _CSRSparseMatrixComponentsOutput(NamedTuple):
    row_ptrs: Any
    col_inds: Any
    values: Any

def csr_sparse_matrix_components(csr_sparse_matrix, index, type, name: Any | None = ...): ...

CSRSparseMatrixComponents: Any

def csr_sparse_matrix_components_eager_fallback(csr_sparse_matrix, index, type, name, ctx): ...
def csr_sparse_matrix_to_dense(sparse_input, type, name: Any | None = ...): ...

CSRSparseMatrixToDense: Any

def csr_sparse_matrix_to_dense_eager_fallback(sparse_input, type, name, ctx): ...

class _CSRSparseMatrixToSparseTensorOutput(NamedTuple):
    indices: Any
    values: Any
    dense_shape: Any

def csr_sparse_matrix_to_sparse_tensor(sparse_matrix, type, name: Any | None = ...): ...

CSRSparseMatrixToSparseTensor: Any

def csr_sparse_matrix_to_sparse_tensor_eager_fallback(sparse_matrix, type, name, ctx): ...
def dense_to_csr_sparse_matrix(dense_input, indices, name: Any | None = ...): ...

DenseToCSRSparseMatrix: Any

def dense_to_csr_sparse_matrix_eager_fallback(dense_input, indices, name, ctx): ...
def sparse_matrix_add(a, b, alpha, beta, name: Any | None = ...): ...

SparseMatrixAdd: Any

def sparse_matrix_add_eager_fallback(a, b, alpha, beta, name, ctx): ...
def sparse_matrix_mat_mul(a, b, transpose_a: bool = ..., transpose_b: bool = ..., adjoint_a: bool = ..., adjoint_b: bool = ..., transpose_output: bool = ..., conjugate_output: bool = ..., name: Any | None = ...): ...

SparseMatrixMatMul: Any

def sparse_matrix_mat_mul_eager_fallback(a, b, transpose_a, transpose_b, adjoint_a, adjoint_b, transpose_output, conjugate_output, name, ctx): ...
def sparse_matrix_mul(a, b, name: Any | None = ...): ...

SparseMatrixMul: Any

def sparse_matrix_mul_eager_fallback(a, b, name, ctx): ...
def sparse_matrix_nnz(sparse_matrix, name: Any | None = ...): ...

SparseMatrixNNZ: Any

def sparse_matrix_nnz_eager_fallback(sparse_matrix, name, ctx): ...
def sparse_matrix_ordering_amd(input, name: Any | None = ...): ...

SparseMatrixOrderingAMD: Any

def sparse_matrix_ordering_amd_eager_fallback(input, name, ctx): ...
def sparse_matrix_softmax(logits, type, name: Any | None = ...): ...

SparseMatrixSoftmax: Any

def sparse_matrix_softmax_eager_fallback(logits, type, name, ctx): ...
def sparse_matrix_softmax_grad(softmax, grad_softmax, type, name: Any | None = ...): ...

SparseMatrixSoftmaxGrad: Any

def sparse_matrix_softmax_grad_eager_fallback(softmax, grad_softmax, type, name, ctx): ...
def sparse_matrix_sparse_cholesky(input, permutation, type, name: Any | None = ...): ...

SparseMatrixSparseCholesky: Any

def sparse_matrix_sparse_cholesky_eager_fallback(input, permutation, type, name, ctx): ...
def sparse_matrix_sparse_mat_mul(a, b, type, transpose_a: bool = ..., transpose_b: bool = ..., adjoint_a: bool = ..., adjoint_b: bool = ..., name: Any | None = ...): ...

SparseMatrixSparseMatMul: Any

def sparse_matrix_sparse_mat_mul_eager_fallback(a, b, type, transpose_a, transpose_b, adjoint_a, adjoint_b, name, ctx): ...
def sparse_matrix_transpose(input, type, conjugate: bool = ..., name: Any | None = ...): ...

SparseMatrixTranspose: Any

def sparse_matrix_transpose_eager_fallback(input, type, conjugate, name, ctx): ...
def sparse_matrix_zeros(dense_shape, type, name: Any | None = ...): ...

SparseMatrixZeros: Any

def sparse_matrix_zeros_eager_fallback(dense_shape, type, name, ctx): ...
def sparse_tensor_to_csr_sparse_matrix(indices, values, dense_shape, name: Any | None = ...): ...

SparseTensorToCSRSparseMatrix: Any

def sparse_tensor_to_csr_sparse_matrix_eager_fallback(indices, values, dense_shape, name, ctx): ...
