from typing import Any, NamedTuple

def assert_proper_iterable(values) -> None: ...
def assert_negative(x, data: Any | None = ..., summarize: Any | None = ..., message: Any | None = ..., name: Any | None = ...): ...
def assert_positive(x, data: Any | None = ..., summarize: Any | None = ..., message: Any | None = ..., name: Any | None = ...): ...
def assert_non_negative(x, data: Any | None = ..., summarize: Any | None = ..., message: Any | None = ..., name: Any | None = ...): ...
def assert_non_positive(x, data: Any | None = ..., summarize: Any | None = ..., message: Any | None = ..., name: Any | None = ...): ...
def assert_equal(x, y, data: Any | None = ..., summarize: Any | None = ..., message: Any | None = ..., name: Any | None = ...): ...
def assert_none_equal(x, y, data: Any | None = ..., summarize: Any | None = ..., message: Any | None = ..., name: Any | None = ...): ...
def assert_near(x, y, rtol: Any | None = ..., atol: Any | None = ..., data: Any | None = ..., summarize: Any | None = ..., message: Any | None = ..., name: Any | None = ...): ...
def assert_less(x, y, data: Any | None = ..., summarize: Any | None = ..., message: Any | None = ..., name: Any | None = ...): ...
def assert_less_equal(x, y, data: Any | None = ..., summarize: Any | None = ..., message: Any | None = ..., name: Any | None = ...): ...
def assert_greater(x, y, data: Any | None = ..., summarize: Any | None = ..., message: Any | None = ..., name: Any | None = ...): ...
def assert_greater_equal(x, y, data: Any | None = ..., summarize: Any | None = ..., message: Any | None = ..., name: Any | None = ...): ...
def assert_rank(x, rank, data: Any | None = ..., summarize: Any | None = ..., message: Any | None = ..., name: Any | None = ...): ...
def assert_rank_at_least(x, rank, data: Any | None = ..., summarize: Any | None = ..., message: Any | None = ..., name: Any | None = ...): ...
def assert_rank_in(x, ranks, data: Any | None = ..., summarize: Any | None = ..., message: Any | None = ..., name: Any | None = ...): ...
def assert_integer(x, message: Any | None = ..., name: Any | None = ...): ...
def assert_type(tensor, tf_type, message: Any | None = ..., name: Any | None = ...): ...

class _TensorDimSizes(NamedTuple):
    x: Any
    unspecified_dim: Any
    actual_sizes: Any
    symbolic_sizes: Any

def assert_shapes(shapes, data: Any | None = ..., summarize: Any | None = ..., message: Any | None = ..., name: Any | None = ...): ...
def is_numeric_tensor(tensor): ...
def is_non_decreasing(x, name: Any | None = ...): ...
def is_strictly_increasing(x, name: Any | None = ...): ...
def assert_same_float_dtype(tensors: Any | None = ..., dtype: Any | None = ...): ...
def assert_scalar(tensor, name: Any | None = ..., message: Any | None = ...): ...
