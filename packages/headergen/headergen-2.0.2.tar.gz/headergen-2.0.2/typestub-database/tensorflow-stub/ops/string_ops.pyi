from tensorflow.python.ops.gen_string_ops import *
from tensorflow.python.framework import constant_op as constant_op, dtypes as dtypes, ops as ops, sparse_tensor as sparse_tensor, tensor_util as tensor_util
from tensorflow.python.ops import array_ops as array_ops, gen_parsing_ops as gen_parsing_ops, gen_string_ops as gen_string_ops, math_ops as math_ops
from tensorflow.python.util import deprecation as deprecation, dispatch as dispatch
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any

def regex_full_match(input, pattern, name: Any | None = ...): ...
def regex_replace(input, pattern, rewrite, replace_global: bool = ..., name: Any | None = ...): ...
def string_format(template, inputs, placeholder: str = ..., summarize: int = ..., name: Any | None = ...): ...
def string_split(source, sep: Any | None = ..., skip_empty: bool = ..., delimiter: Any | None = ...): ...
def string_split_v2(source, sep: Any | None = ..., maxsplit: int = ...): ...
def reduce_join(inputs, axis: Any | None = ..., keep_dims: Any | None = ..., separator: str = ..., name: Any | None = ..., reduction_indices: Any | None = ..., keepdims: Any | None = ...): ...
def reduce_join_v2(inputs, axis: Any | None = ..., keepdims: bool = ..., separator: str = ..., name: Any | None = ...): ...
def string_length(input, name: Any | None = ..., unit: str = ...): ...
def string_length_v2(input, unit: str = ..., name: Any | None = ...): ...
def substr_deprecated(input, pos, len, name: Any | None = ..., unit: str = ...): ...
def substr(input, pos, len, name: Any | None = ..., unit: str = ...): ...
def substr_v2(input, pos, len, unit: str = ..., name: Any | None = ...): ...
def string_to_number(input, out_type=..., name: Any | None = ...): ...
def string_to_number_v1(string_tensor: Any | None = ..., out_type=..., name: Any | None = ..., input: Any | None = ...): ...
def string_to_hash_bucket(input, num_buckets, name: Any | None = ...): ...
def string_to_hash_bucket_v1(string_tensor: Any | None = ..., num_buckets: Any | None = ..., name: Any | None = ..., input: Any | None = ...): ...
def string_join(inputs, separator: str = ..., name: Any | None = ...): ...
