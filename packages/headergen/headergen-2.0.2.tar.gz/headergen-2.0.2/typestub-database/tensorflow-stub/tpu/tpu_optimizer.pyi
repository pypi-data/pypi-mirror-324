from tensorflow.python.framework import ops as ops
from tensorflow.python.ops.losses import losses as losses
from tensorflow.python.tpu import tpu_function as tpu_function
from tensorflow.python.tpu.ops import tpu_ops as tpu_ops
from tensorflow.python.training import optimizer as optimizer
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any

class CrossShardOptimizer(optimizer.Optimizer):
    def __init__(self, opt, reduction=..., name: str = ..., group_assignment: Any | None = ...) -> None: ...
    def compute_gradients(self, loss, var_list: Any | None = ..., **kwargs): ...
    def apply_gradients(self, grads_and_vars, global_step: Any | None = ..., name: Any | None = ...): ...
    def get_slot(self, *args, **kwargs): ...
    def get_slot_names(self, *args, **kwargs): ...
    def variables(self): ...
