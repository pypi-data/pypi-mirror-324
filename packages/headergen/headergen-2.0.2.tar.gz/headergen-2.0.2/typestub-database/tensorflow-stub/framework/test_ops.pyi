from tensorflow.python.util.deprecation import deprecated_endpoints as deprecated_endpoints
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any, NamedTuple

def a(name: Any | None = ...): ...

A: Any

def a_eager_fallback(name, ctx): ...
def attr(a, name: Any | None = ...): ...

Attr: Any

def attr_eager_fallback(a, name, ctx): ...
def attr_bool(a, name: Any | None = ...): ...

AttrBool: Any

def attr_bool_eager_fallback(a, name, ctx): ...
def attr_bool_list(a, name: Any | None = ...): ...

AttrBoolList: Any

def attr_bool_list_eager_fallback(a, name, ctx): ...
def attr_default(a: str = ..., name: Any | None = ...): ...

AttrDefault: Any

def attr_default_eager_fallback(a, name, ctx): ...
def attr_empty_list_default(a=..., name: Any | None = ...): ...

AttrEmptyListDefault: Any

def attr_empty_list_default_eager_fallback(a, name, ctx): ...
def attr_enum(a, name: Any | None = ...): ...

AttrEnum: Any

def attr_enum_eager_fallback(a, name, ctx): ...
def attr_enum_list(a, name: Any | None = ...): ...

AttrEnumList: Any

def attr_enum_list_eager_fallback(a, name, ctx): ...
def attr_float(a, name: Any | None = ...): ...

AttrFloat: Any

def attr_float_eager_fallback(a, name, ctx): ...
def attr_list_default(a=..., name: Any | None = ...): ...

AttrListDefault: Any

def attr_list_default_eager_fallback(a, name, ctx): ...
def attr_list_min(a, name: Any | None = ...): ...

AttrListMin: Any

def attr_list_min_eager_fallback(a, name, ctx): ...
def attr_list_type_default(a, b, name: Any | None = ...): ...

AttrListTypeDefault: Any

def attr_list_type_default_eager_fallback(a, b, name, ctx): ...
def attr_min(a, name: Any | None = ...): ...

AttrMin: Any

def attr_min_eager_fallback(a, name, ctx): ...
def attr_partial_shape(a, name: Any | None = ...): ...

AttrPartialShape: Any

def attr_partial_shape_eager_fallback(a, name, ctx): ...
def attr_partial_shape_list(a, name: Any | None = ...): ...

AttrPartialShapeList: Any

def attr_partial_shape_list_eager_fallback(a, name, ctx): ...
def attr_shape(a, name: Any | None = ...): ...

AttrShape: Any

def attr_shape_eager_fallback(a, name, ctx): ...
def attr_shape_list(a, name: Any | None = ...): ...

AttrShapeList: Any

def attr_shape_list_eager_fallback(a, name, ctx): ...
def attr_type_default(a, name: Any | None = ...): ...

AttrTypeDefault: Any

def attr_type_default_eager_fallback(a, name, ctx): ...
def b(name: Any | None = ...): ...

B: Any

def b_eager_fallback(name, ctx): ...
def binary(a, b, name: Any | None = ...): ...

Binary: Any

def binary_eager_fallback(a, b, name, ctx): ...

class _ComplexStructOutput(NamedTuple):
    a: Any
    b: Any
    c: Any

def complex_struct(n_a, n_b, t_c, name: Any | None = ...): ...

ComplexStruct: Any

def complex_struct_eager_fallback(n_a, n_b, t_c, name, ctx): ...
def copy_op(a, name: Any | None = ...): ...

CopyOp: Any

def copy_op_eager_fallback(a, name, ctx): ...
def default_attrs(string_val: str = ..., string_list_val=..., int_val: int = ..., int_list_val=..., float_val: int = ..., float_list_val=..., bool_val: bool = ..., bool_list_val=..., type_val=..., type_list_val=..., shape_val=..., shape_list_val=..., tensor_val=..., tensor_list_val=..., name: Any | None = ...): ...

DefaultAttrs: Any

def default_attrs_eager_fallback(string_val, string_list_val, int_val, int_list_val, float_val, float_list_val, bool_val, bool_list_val, type_val, type_list_val, shape_val, shape_list_val, tensor_val, tensor_list_val, name, ctx): ...
def device_placement_op(name: Any | None = ...): ...

DevicePlacementOp: Any

def device_placement_op_eager_fallback(name, ctx): ...
def dtype_with_default_op(in_, name: Any | None = ...): ...

DtypeWithDefaultOp: Any

def dtype_with_default_op_eager_fallback(in_, name, ctx): ...

class _FiveFloatOutputsOutput(NamedTuple):
    a: Any
    b: Any
    c: Any
    d: Any
    e: Any

def five_float_outputs(name: Any | None = ...): ...

FiveFloatOutputs: Any

def five_float_outputs_eager_fallback(name, ctx): ...
def float_input(a, name: Any | None = ...): ...

FloatInput: Any

def float_input_eager_fallback(a, name, ctx): ...
def float_output(name: Any | None = ...): ...

FloatOutput: Any

def float_output_eager_fallback(name, ctx): ...

class _FloatOutputStringOutputOutput(NamedTuple):
    a: Any
    b: Any

def float_output_string_output(name: Any | None = ...): ...

FloatOutputStringOutput: Any

def float_output_string_output_eager_fallback(name, ctx): ...

class _Foo1Output(NamedTuple):
    d: Any
    e: Any

def foo1(a, b, c, name: Any | None = ...): ...

Foo1: Any

def foo1_eager_fallback(a, b, c, name, ctx): ...

class _Foo2Output(NamedTuple):
    d: Any
    e: Any

def foo2(a, b, c, name: Any | None = ...): ...

Foo2: Any

def foo2_eager_fallback(a, b, c, name, ctx): ...

class _Foo3Output(NamedTuple):
    d: Any
    e: Any

def foo3(a, b, c, name: Any | None = ...): ...

Foo3: Any

def foo3_eager_fallback(a, b, c, name, ctx): ...
def func_attr(f, name: Any | None = ...): ...

FuncAttr: Any

def func_attr_eager_fallback(f, name, ctx): ...
def func_list_attr(f, name: Any | None = ...): ...

FuncListAttr: Any

def func_list_attr_eager_fallback(f, name, ctx): ...
def get_deadline(name: Any | None = ...): ...

GetDeadline: Any

def get_deadline_eager_fallback(name, ctx): ...
def graph_def_version(name: Any | None = ...): ...

GraphDefVersion: Any

def graph_def_version_eager_fallback(name, ctx): ...
def in_polymorphic_twice(a, b, name: Any | None = ...): ...

InPolymorphicTwice: Any

def in_polymorphic_twice_eager_fallback(a, b, name, ctx): ...
def int64_output(name: Any | None = ...): ...

Int64Output: Any

def int64_output_eager_fallback(name, ctx): ...
def int_attr(foo: int = ..., name: Any | None = ...): ...

IntAttr: Any

def int_attr_eager_fallback(foo, name, ctx): ...
def int_input(a, name: Any | None = ...): ...

IntInput: Any

def int_input_eager_fallback(a, name, ctx): ...
def int_input_float_input(a, b, name: Any | None = ...): ...

IntInputFloatInput: Any

def int_input_float_input_eager_fallback(a, b, name, ctx): ...
def int_input_int_output(a, name: Any | None = ...): ...

IntInputIntOutput: Any

def int_input_int_output_eager_fallback(a, name, ctx): ...
def int_output(name: Any | None = ...): ...

IntOutput: Any

def int_output_eager_fallback(name, ctx): ...

class _IntOutputFloatOutputOutput(NamedTuple):
    a: Any
    b: Any

def int_output_float_output(name: Any | None = ...): ...

IntOutputFloatOutput: Any

def int_output_float_output_eager_fallback(name, ctx): ...
def is_tensor_float32_enabled(name: Any | None = ...): ...

IsTensorFloat32Enabled: Any

def is_tensor_float32_enabled_eager_fallback(name, ctx): ...
def kernel_label(name: Any | None = ...): ...

KernelLabel: Any

def kernel_label_eager_fallback(name, ctx): ...
def kernel_label_required(input, name: Any | None = ...): ...

KernelLabelRequired: Any

def kernel_label_required_eager_fallback(input, name, ctx): ...
def list_input(a, name: Any | None = ...): ...

ListInput: Any

def list_input_eager_fallback(a, name, ctx): ...
def list_output(T, name: Any | None = ...): ...

ListOutput: Any

def list_output_eager_fallback(T, name, ctx): ...

class _MixedStructOutput(NamedTuple):
    a: Any
    b: Any

def mixed_struct(n_a, name: Any | None = ...): ...

MixedStruct: Any

def mixed_struct_eager_fallback(n_a, name, ctx): ...
def n_in_polymorphic_twice(a, b, name: Any | None = ...): ...

NInPolymorphicTwice: Any

def n_in_polymorphic_twice_eager_fallback(a, b, name, ctx): ...
def n_in_twice(a, b, name: Any | None = ...): ...

NInTwice: Any

def n_in_twice_eager_fallback(a, b, name, ctx): ...
def n_in_two_type_variables(a, b, name: Any | None = ...): ...

NInTwoTypeVariables: Any

def n_in_two_type_variables_eager_fallback(a, b, name, ctx): ...
def n_ints_in(a, name: Any | None = ...): ...

NIntsIn: Any

def n_ints_in_eager_fallback(a, name, ctx): ...
def n_ints_out(N, name: Any | None = ...): ...

NIntsOut: Any

def n_ints_out_eager_fallback(N, name, ctx): ...
def n_ints_out_default(N: int = ..., name: Any | None = ...): ...

NIntsOutDefault: Any

def n_ints_out_default_eager_fallback(N, name, ctx): ...
def n_polymorphic_in(a, name: Any | None = ...): ...

NPolymorphicIn: Any

def n_polymorphic_in_eager_fallback(a, name, ctx): ...
def n_polymorphic_out(T, N, name: Any | None = ...): ...

NPolymorphicOut: Any

def n_polymorphic_out_eager_fallback(T, N, name, ctx): ...
def n_polymorphic_out_default(T=..., N: int = ..., name: Any | None = ...): ...

NPolymorphicOutDefault: Any

def n_polymorphic_out_default_eager_fallback(T, N, name, ctx): ...
def n_polymorphic_restrict_in(a, name: Any | None = ...): ...

NPolymorphicRestrictIn: Any

def n_polymorphic_restrict_in_eager_fallback(a, name, ctx): ...
def n_polymorphic_restrict_out(T, N, name: Any | None = ...): ...

NPolymorphicRestrictOut: Any

def n_polymorphic_restrict_out_eager_fallback(T, N, name, ctx): ...

class _Namespace_TestStringOutputOutput(NamedTuple):
    output1: Any
    output2: Any

def namespace_test_string_output(input, name: Any | None = ...): ...

Namespace_TestStringOutput: Any

def namespace_test_string_output_eager_fallback(input, name, ctx): ...
def none(name: Any | None = ...): ...

None_: Any

def none_eager_fallback(name, ctx): ...
def old(name: Any | None = ...): ...

Old: Any

def old_eager_fallback(name, ctx): ...
def op_with_default_attr(default_float: int = ..., name: Any | None = ...): ...

OpWithDefaultAttr: Any

def op_with_default_attr_eager_fallback(default_float, name, ctx): ...
def op_with_future_default_attr(name: Any | None = ...): ...

OpWithFutureDefaultAttr: Any

def op_with_future_default_attr_eager_fallback(name, ctx): ...
def out_t(T, name: Any | None = ...): ...

OutT: Any

def out_t_eager_fallback(T, name, ctx): ...
def out_type_list(T, name: Any | None = ...): ...

OutTypeList: Any

def out_type_list_eager_fallback(T, name, ctx): ...
def out_type_list_restrict(t, name: Any | None = ...): ...

OutTypeListRestrict: Any

def out_type_list_restrict_eager_fallback(t, name, ctx): ...
def polymorphic(a, name: Any | None = ...): ...

Polymorphic: Any

def polymorphic_eager_fallback(a, name, ctx): ...
def polymorphic_default_out(T=..., name: Any | None = ...): ...

PolymorphicDefaultOut: Any

def polymorphic_default_out_eager_fallback(T, name, ctx): ...
def polymorphic_out(T, name: Any | None = ...): ...

PolymorphicOut: Any

def polymorphic_out_eager_fallback(T, name, ctx): ...
def ref_in(a, name: Any | None = ...): ...

RefIn: Any

def ref_in_eager_fallback(a, name, ctx) -> None: ...
def ref_input_float_input(a, b, name: Any | None = ...): ...

RefInputFloatInput: Any

def ref_input_float_input_eager_fallback(a, b, name, ctx) -> None: ...
def ref_input_float_input_int_output(a, b, name: Any | None = ...): ...

RefInputFloatInputIntOutput: Any

def ref_input_float_input_int_output_eager_fallback(a, b, name, ctx) -> None: ...
def ref_input_int_input(a, b, name: Any | None = ...): ...

RefInputIntInput: Any

def ref_input_int_input_eager_fallback(a, b, name, ctx) -> None: ...
def ref_out(T, name: Any | None = ...): ...

RefOut: Any

def ref_out_eager_fallback(T, name, ctx) -> None: ...
def ref_output(name: Any | None = ...): ...

RefOutput: Any

def ref_output_eager_fallback(name, ctx) -> None: ...

class _RefOutputFloatOutputOutput(NamedTuple):
    a: Any
    b: Any

def ref_output_float_output(name: Any | None = ...): ...

RefOutputFloatOutput: Any

def ref_output_float_output_eager_fallback(name, ctx) -> None: ...
def requires_older_graph_version(name: Any | None = ...): ...

RequiresOlderGraphVersion: Any

def requires_older_graph_version_eager_fallback(name, ctx): ...
def reserved_attr(range, name: Any | None = ...): ...

ReservedAttr: Any

def reserved_attr_eager_fallback(range, name, ctx): ...
def reserved_input(input, name: Any | None = ...): ...

ReservedInput: Any

def reserved_input_eager_fallback(input, name, ctx): ...
def resource_create_op(resource, name: Any | None = ...): ...

ResourceCreateOp: Any

def resource_create_op_eager_fallback(resource, name, ctx): ...
def resource_initialized_op(resource, name: Any | None = ...): ...

ResourceInitializedOp: Any

def resource_initialized_op_eager_fallback(resource, name, ctx): ...
def resource_using_op(resource, name: Any | None = ...): ...

ResourceUsingOp: Any

def resource_using_op_eager_fallback(resource, name, ctx): ...
def restrict(a, name: Any | None = ...): ...

Restrict: Any

def restrict_eager_fallback(a, name, ctx): ...
def simple(a, name: Any | None = ...): ...

Simple: Any

def simple_eager_fallback(a, name, ctx): ...
def simple_struct(n_a, name: Any | None = ...): ...

SimpleStruct: Any

def simple_struct_eager_fallback(n_a, name, ctx): ...
def sleep_op(sleep_seconds, name: Any | None = ...): ...

SleepOp: Any

def sleep_op_eager_fallback(sleep_seconds, name, ctx): ...
def string_list_attr(a, b, name: Any | None = ...): ...

StringListAttr: Any

def string_list_attr_eager_fallback(a, b, name, ctx): ...
def stub_resource_handle_op(container: str = ..., shared_name: str = ..., name: Any | None = ...): ...

StubResourceHandleOp: Any

def stub_resource_handle_op_eager_fallback(container, shared_name, name, ctx): ...
def test_attr(T, name: Any | None = ...): ...

TestAttr: Any

def test_attr_eager_fallback(T, name, ctx): ...

class _TestStringOutputOutput(NamedTuple):
    output1: Any
    output2: Any

def test_string_output(input, name: Any | None = ...): ...

TestStringOutput: Any

def test_string_output_eager_fallback(input, name, ctx): ...
def two_float_inputs(a, b, name: Any | None = ...): ...

TwoFloatInputs: Any

def two_float_inputs_eager_fallback(a, b, name, ctx): ...
def two_float_inputs_float_output(a, b, name: Any | None = ...): ...

TwoFloatInputsFloatOutput: Any

def two_float_inputs_float_output_eager_fallback(a, b, name, ctx): ...
def two_float_inputs_int_output(a, b, name: Any | None = ...): ...

TwoFloatInputsIntOutput: Any

def two_float_inputs_int_output_eager_fallback(a, b, name, ctx): ...

class _TwoFloatOutputsOutput(NamedTuple):
    a: Any
    b: Any

def two_float_outputs(name: Any | None = ...): ...

TwoFloatOutputs: Any

def two_float_outputs_eager_fallback(name, ctx): ...
def two_int_inputs(a, b, name: Any | None = ...): ...

TwoIntInputs: Any

def two_int_inputs_eager_fallback(a, b, name, ctx): ...

class _TwoIntOutputsOutput(NamedTuple):
    a: Any
    b: Any

def two_int_outputs(name: Any | None = ...): ...

TwoIntOutputs: Any

def two_int_outputs_eager_fallback(name, ctx): ...
def two_refs_in(a, b, name: Any | None = ...): ...

TwoRefsIn: Any

def two_refs_in_eager_fallback(a, b, name, ctx) -> None: ...
def type_list(a, name: Any | None = ...): ...

TypeList: Any

def type_list_eager_fallback(a, name, ctx): ...
def type_list_restrict(a, name: Any | None = ...): ...

TypeListRestrict: Any

def type_list_restrict_eager_fallback(a, name, ctx): ...
def type_list_twice(a, b, name: Any | None = ...): ...

TypeListTwice: Any

def type_list_twice_eager_fallback(a, b, name, ctx): ...
def unary(a, name: Any | None = ...): ...

Unary: Any

def unary_eager_fallback(a, name, ctx): ...
