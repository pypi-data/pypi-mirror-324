from tensorflow.core.framework import tensor_pb2 as tensor_pb2, tensor_shape_pb2 as tensor_shape_pb2
from tensorflow.python.eager import context as context
from tensorflow.python.framework import dtypes as dtypes, errors_impl as errors_impl, fast_tensor_util as fast_tensor_util, ops as ops, tensor_shape as tensor_shape
from tensorflow.python.types import core as core, internal as internal
from tensorflow.python.util import compat as compat, nest as nest
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any

def ExtractBitsFromFloat16(x): ...
def SlowAppendFloat16ArrayToTensorProto(tensor_proto, proto_values) -> None: ...
def ExtractBitsFromBFloat16(x): ...
def SlowAppendBFloat16ArrayToTensorProto(tensor_proto, proto_values) -> None: ...
def FastAppendBFloat16ArrayToTensorProto(tensor_proto, proto_values) -> None: ...
def SlowAppendFloat32ArrayToTensorProto(tensor_proto, proto_values) -> None: ...
def SlowAppendFloat64ArrayToTensorProto(tensor_proto, proto_values) -> None: ...
def SlowAppendIntArrayToTensorProto(tensor_proto, proto_values) -> None: ...
def SlowAppendInt64ArrayToTensorProto(tensor_proto, proto_values) -> None: ...
def SlowAppendQIntArrayToTensorProto(tensor_proto, proto_values) -> None: ...
def SlowAppendUInt32ArrayToTensorProto(tensor_proto, proto_values) -> None: ...
def SlowAppendUInt64ArrayToTensorProto(tensor_proto, proto_values) -> None: ...
def SlowAppendComplex64ArrayToTensorProto(tensor_proto, proto_values) -> None: ...
def SlowAppendComplex128ArrayToTensorProto(tensor_proto, proto_values) -> None: ...
def SlowAppendObjectArrayToTensorProto(tensor_proto, proto_values) -> None: ...
def SlowAppendBoolArrayToTensorProto(tensor_proto, proto_values) -> None: ...
def GetFromNumpyDTypeDict(dtype_dict, dtype): ...
def GetNumpyAppendFn(dtype): ...
def TensorShapeProtoToList(shape): ...
def make_tensor_proto(values, dtype: Any | None = ..., shape: Any | None = ..., verify_shape: bool = ..., allow_broadcast: bool = ...): ...
def MakeNdarray(tensor): ...
def ShapeEquals(tensor_proto, shape): ...
def constant_value(tensor, partial: bool = ...): ...
def constant_value_as_shape(tensor): ...
def is_tf_type(x): ...
is_tensor = is_tf_type

def shape_tensor(shape): ...
def maybe_set_static_shape(tensor, shape) -> None: ...
