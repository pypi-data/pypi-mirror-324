from tensorflow.python.debug.cli import cli_shared as cli_shared, command_parser as command_parser, debugger_cli_common as debugger_cli_common, ui_factory as ui_factory
from tensorflow.python.debug.lib import profiling as profiling, source_utils as source_utils
from typing import Any

RL: Any
SORT_OPS_BY_OP_NAME: str
SORT_OPS_BY_OP_TYPE: str
SORT_OPS_BY_OP_TIME: str
SORT_OPS_BY_EXEC_TIME: str
SORT_OPS_BY_START_TIME: str
SORT_OPS_BY_LINE: str

class ProfileDataTableView:
    formatted_start_time: Any
    formatted_op_time: Any
    formatted_exec_time: Any
    def __init__(self, profile_datum_list, time_unit=...) -> None: ...
    def value(self, row, col, device_name_filter: Any | None = ..., node_name_filter: Any | None = ..., op_type_filter: Any | None = ...): ...
    def row_count(self): ...
    def column_count(self): ...
    def column_names(self): ...
    def column_sort_id(self, col): ...

class ProfileAnalyzer:
    def __init__(self, graph, run_metadata) -> None: ...
    def list_profile(self, args, screen_info: Any | None = ...): ...
    def print_source(self, args, screen_info: Any | None = ...): ...
    def get_help(self, handler_name): ...

def create_profiler_ui(graph, run_metadata, ui_type: str = ..., on_ui_exit: Any | None = ..., config: Any | None = ...): ...
