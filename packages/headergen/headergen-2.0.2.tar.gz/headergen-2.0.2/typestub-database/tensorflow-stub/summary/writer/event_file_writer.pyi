import threading
from tensorflow.python.platform import gfile as gfile
from tensorflow.python.util import compat as compat
from typing import Any

class EventFileWriter:
    def __init__(self, logdir, max_queue: int = ..., flush_secs: int = ..., filename_suffix: Any | None = ...) -> None: ...
    def get_logdir(self): ...
    def reopen(self) -> None: ...
    def add_event(self, event) -> None: ...
    def flush(self) -> None: ...
    def close(self) -> None: ...

class _EventLoggerThread(threading.Thread):
    daemon: bool
    failure_exc_info: Any
    def __init__(self, queue, ev_writer, flush_secs, flush_complete, flush_sentinel, close_sentinel) -> None: ...
    def run(self) -> None: ...

class CloseableQueue:
    def __init__(self, maxsize: int = ...) -> None: ...
    def get(self): ...
    def put(self, item) -> None: ...
    def close(self) -> None: ...

class QueueClosedError(Exception): ...
