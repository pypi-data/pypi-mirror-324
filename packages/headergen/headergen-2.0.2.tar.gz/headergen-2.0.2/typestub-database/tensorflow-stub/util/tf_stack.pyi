from typing import Any

class StackTraceTransform:
    parent: Any
    def __enter__(self): ...
    def __exit__(self, unused_type, unused_value, unused_traceback) -> None: ...
    def update(self) -> None: ...

class StackTraceMapper(StackTraceTransform):
    internal_map: Any
    def __init__(self) -> None: ...
    def update(self) -> None: ...
    def get_effective_source_map(self) -> None: ...

EMPTY_DICT: Any

class SentinelMapper(StackTraceMapper):
    def get_effective_source_map(self): ...

class StackTraceFilter(StackTraceTransform):
    internal_set: Any
    def __init__(self) -> None: ...
    def update(self) -> None: ...
    def get_filtered_filenames(self) -> None: ...

EMPTY_SET: Any

class SentinelFilter(StackTraceFilter):
    def get_filtered_filenames(self): ...

class CurrentModuleFilter(StackTraceFilter):
    def __init__(self) -> None: ...
    def get_filtered_filenames(self): ...

def extract_stack(): ...
def extract_stack_for_node(node): ...

StackSummary: Any
FrameSummary: Any
