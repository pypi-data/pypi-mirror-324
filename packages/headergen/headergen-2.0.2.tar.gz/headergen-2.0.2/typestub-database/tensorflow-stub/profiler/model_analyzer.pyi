from tensorflow.core.profiler import tfprof_options_pb2 as tfprof_options_pb2, tfprof_output_pb2 as tfprof_output_pb2
from tensorflow.python.eager import context as context
from tensorflow.python.framework import errors as errors, ops as ops
from tensorflow.python.profiler import option_builder as option_builder, tfprof_logger as tfprof_logger
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any

ALL_ADVICE: Any

class Profiler:
    def __init__(self, graph: Any | None = ..., op_log: Any | None = ...) -> None: ...
    def __del__(self) -> None: ...
    def add_step(self, step, run_meta) -> None: ...
    def profile_python(self, options): ...
    def profile_operations(self, options): ...
    def profile_name_scope(self, options): ...
    def profile_graph(self, options): ...
    def advise(self, options): ...
    def serialize_to_string(self): ...

def profile(graph: Any | None = ..., run_meta: Any | None = ..., op_log: Any | None = ..., cmd: str = ..., options=...): ...
def advise(graph: Any | None = ..., run_meta: Any | None = ..., options=...): ...
