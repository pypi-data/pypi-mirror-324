from tensorflow.python.eager import context as context
from tensorflow.python.framework import constant_op as constant_op, dtypes as dtypes, ops as ops, sparse_tensor as sparse_tensor, tensor_shape as tensor_shape
from tensorflow.python.layers import utils as utils
from tensorflow.python.ops import array_ops as array_ops, control_flow_ops as control_flow_ops, data_flow_ops as data_flow_ops, io_ops as io_ops, math_ops as math_ops, random_ops as random_ops, sparse_ops as sparse_ops
from tensorflow.python.summary import summary as summary
from tensorflow.python.training import queue_runner as queue_runner
from tensorflow.python.util import deprecation as deprecation
from tensorflow.python.util.compat import collections_abc as collections_abc
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any

def match_filenames_once(pattern, name: Any | None = ...): ...
def limit_epochs(tensor, num_epochs: Any | None = ..., name: Any | None = ...): ...
def input_producer(input_tensor, element_shape: Any | None = ..., num_epochs: Any | None = ..., shuffle: bool = ..., seed: Any | None = ..., capacity: int = ..., shared_name: Any | None = ..., summary_name: Any | None = ..., name: Any | None = ..., cancel_op: Any | None = ...): ...
def string_input_producer(string_tensor, num_epochs: Any | None = ..., shuffle: bool = ..., seed: Any | None = ..., capacity: int = ..., shared_name: Any | None = ..., name: Any | None = ..., cancel_op: Any | None = ...): ...
def range_input_producer(limit, num_epochs: Any | None = ..., shuffle: bool = ..., seed: Any | None = ..., capacity: int = ..., shared_name: Any | None = ..., name: Any | None = ...): ...
def slice_input_producer(tensor_list, num_epochs: Any | None = ..., shuffle: bool = ..., seed: Any | None = ..., capacity: int = ..., shared_name: Any | None = ..., name: Any | None = ...): ...

class _SparseMetaData:
    def __init__(self, sparse, map_op, rank) -> None: ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def merge_with(self, other): ...
    @property
    def map_op(self): ...
    @property
    def sparse(self): ...
    @property
    def rank(self): ...

def batch(tensors, batch_size, num_threads: int = ..., capacity: int = ..., enqueue_many: bool = ..., shapes: Any | None = ..., dynamic_pad: bool = ..., allow_smaller_final_batch: bool = ..., shared_name: Any | None = ..., name: Any | None = ...): ...
def maybe_batch(tensors, keep_input, batch_size, num_threads: int = ..., capacity: int = ..., enqueue_many: bool = ..., shapes: Any | None = ..., dynamic_pad: bool = ..., allow_smaller_final_batch: bool = ..., shared_name: Any | None = ..., name: Any | None = ...): ...
def batch_join(tensors_list, batch_size, capacity: int = ..., enqueue_many: bool = ..., shapes: Any | None = ..., dynamic_pad: bool = ..., allow_smaller_final_batch: bool = ..., shared_name: Any | None = ..., name: Any | None = ...): ...
def maybe_batch_join(tensors_list, keep_input, batch_size, capacity: int = ..., enqueue_many: bool = ..., shapes: Any | None = ..., dynamic_pad: bool = ..., allow_smaller_final_batch: bool = ..., shared_name: Any | None = ..., name: Any | None = ...): ...
def shuffle_batch(tensors, batch_size, capacity, min_after_dequeue, num_threads: int = ..., seed: Any | None = ..., enqueue_many: bool = ..., shapes: Any | None = ..., allow_smaller_final_batch: bool = ..., shared_name: Any | None = ..., name: Any | None = ...): ...
def maybe_shuffle_batch(tensors, batch_size, capacity, min_after_dequeue, keep_input, num_threads: int = ..., seed: Any | None = ..., enqueue_many: bool = ..., shapes: Any | None = ..., allow_smaller_final_batch: bool = ..., shared_name: Any | None = ..., name: Any | None = ...): ...
def shuffle_batch_join(tensors_list, batch_size, capacity, min_after_dequeue, seed: Any | None = ..., enqueue_many: bool = ..., shapes: Any | None = ..., allow_smaller_final_batch: bool = ..., shared_name: Any | None = ..., name: Any | None = ...): ...
def maybe_shuffle_batch_join(tensors_list, batch_size, capacity, min_after_dequeue, keep_input, seed: Any | None = ..., enqueue_many: bool = ..., shapes: Any | None = ..., allow_smaller_final_batch: bool = ..., shared_name: Any | None = ..., name: Any | None = ...): ...
