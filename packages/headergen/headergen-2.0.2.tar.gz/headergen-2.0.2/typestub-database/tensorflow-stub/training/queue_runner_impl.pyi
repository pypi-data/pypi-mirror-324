from tensorflow.core.protobuf import queue_runner_pb2 as queue_runner_pb2
from tensorflow.python.client import session as session
from tensorflow.python.eager import context as context
from tensorflow.python.framework import errors as errors, ops as ops
from tensorflow.python.util import deprecation as deprecation
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any

class QueueRunner:
    def __init__(self, queue: Any | None = ..., enqueue_ops: Any | None = ..., close_op: Any | None = ..., cancel_op: Any | None = ..., queue_closed_exception_types: Any | None = ..., queue_runner_def: Any | None = ..., import_scope: Any | None = ...) -> None: ...
    @property
    def queue(self): ...
    @property
    def enqueue_ops(self): ...
    @property
    def close_op(self): ...
    @property
    def cancel_op(self): ...
    @property
    def queue_closed_exception_types(self): ...
    @property
    def exceptions_raised(self): ...
    @property
    def name(self): ...
    def create_threads(self, sess, coord: Any | None = ..., daemon: bool = ..., start: bool = ...): ...
    def to_proto(self, export_scope: Any | None = ...): ...
    @staticmethod
    def from_proto(queue_runner_def, import_scope: Any | None = ...): ...

def add_queue_runner(qr, collection=...) -> None: ...
def start_queue_runners(sess: Any | None = ..., coord: Any | None = ..., daemon: bool = ..., start: bool = ..., collection=...): ...
