from ..base import BaseEstimator, TransformerMixin
from typing import Any

class _BaseEncoder(TransformerMixin, BaseEstimator): ...

class OneHotEncoder(_BaseEncoder):
    categories: Any
    sparse: Any
    dtype: Any
    handle_unknown: Any
    drop: Any
    def __init__(self, *, categories: str = ..., drop: Any | None = ..., sparse: bool = ..., dtype=..., handle_unknown: str = ...) -> None: ...
    drop_idx_: Any
    def fit(self, X, y: Any | None = ...): ...
    def fit_transform(self, X, y: Any | None = ...): ...
    def transform(self, X): ...
    def inverse_transform(self, X): ...
    def get_feature_names(self, input_features: Any | None = ...): ...
    def get_feature_names_out(self, input_features: Any | None = ...): ...

class OrdinalEncoder(_BaseEncoder):
    categories: Any
    dtype: Any
    handle_unknown: Any
    unknown_value: Any
    def __init__(self, *, categories: str = ..., dtype=..., handle_unknown: str = ..., unknown_value: Any | None = ...) -> None: ...
    def fit(self, X, y: Any | None = ...): ...
    def transform(self, X): ...
    def inverse_transform(self, X): ...
