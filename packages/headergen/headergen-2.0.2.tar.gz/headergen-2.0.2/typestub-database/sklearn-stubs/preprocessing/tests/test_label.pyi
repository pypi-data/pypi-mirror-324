from sklearn import datasets as datasets
from sklearn.preprocessing._label import LabelBinarizer as LabelBinarizer, LabelEncoder as LabelEncoder, MultiLabelBinarizer as MultiLabelBinarizer, label_binarize as label_binarize
from sklearn.utils._testing import assert_array_equal as assert_array_equal, ignore_warnings as ignore_warnings
from sklearn.utils.multiclass import type_of_target as type_of_target
from typing import Any

iris: Any

def toarray(a): ...
def test_label_binarizer() -> None: ...
def test_label_binarizer_unseen_labels() -> None: ...
def test_label_binarizer_set_label_encoding() -> None: ...
def test_label_binarizer_errors() -> None: ...
def test_label_encoder(values, classes, unknown) -> None: ...
def test_label_encoder_negative_ints() -> None: ...
def test_label_encoder_str_bad_shape(dtype) -> None: ...
def test_label_encoder_errors() -> None: ...
def test_label_encoder_empty_array(values) -> None: ...
def test_sparse_output_multilabel_binarizer(): ...
def test_multilabel_binarizer(): ...
def test_multilabel_binarizer_empty_sample() -> None: ...
def test_multilabel_binarizer_unknown_class() -> None: ...
def test_multilabel_binarizer_given_classes() -> None: ...
def test_multilabel_binarizer_multiple_calls() -> None: ...
def test_multilabel_binarizer_same_length_sequence() -> None: ...
def test_multilabel_binarizer_non_integer_labels() -> None: ...
def test_multilabel_binarizer_non_unique() -> None: ...
def test_multilabel_binarizer_inverse_validation() -> None: ...
def test_label_binarize_with_class_order() -> None: ...
def check_binarized_results(y, classes, pos_label, neg_label, expected) -> None: ...
def test_label_binarize_binary() -> None: ...
def test_label_binarize_multiclass() -> None: ...
def test_label_binarize_multilabel() -> None: ...
def test_invalid_input_label_binarize() -> None: ...
def test_inverse_binarize_multiclass() -> None: ...
