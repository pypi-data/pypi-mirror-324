from sklearn import metrics as metrics, neighbors as neighbors
from sklearn.datasets import load_iris as load_iris
from sklearn.metrics import roc_auc_score as roc_auc_score
from sklearn.utils import check_random_state as check_random_state
from sklearn.utils._testing import assert_array_almost_equal as assert_array_almost_equal
from sklearn.utils.estimator_checks import check_outlier_corruption as check_outlier_corruption, parametrize_with_checks as parametrize_with_checks
from typing import Any

rng: Any
iris: Any
perm: Any

def test_lof() -> None: ...
def test_lof_performance() -> None: ...
def test_lof_values() -> None: ...
def test_lof_precomputed(random_state: int = ...) -> None: ...
def test_n_neighbors_attribute() -> None: ...
def test_score_samples() -> None: ...
def test_contamination() -> None: ...
def test_novelty_errors() -> None: ...
def test_novelty_training_scores() -> None: ...
def test_hasattr_prediction() -> None: ...
def test_novelty_true_common_tests(estimator, check) -> None: ...
def test_predicted_outlier_number(expected_outliers) -> None: ...
