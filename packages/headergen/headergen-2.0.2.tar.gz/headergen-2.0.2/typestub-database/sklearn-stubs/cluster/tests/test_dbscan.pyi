from sklearn.cluster import DBSCAN as DBSCAN, dbscan as dbscan
from sklearn.cluster.tests.common import generate_clustered_data as generate_clustered_data
from sklearn.metrics.pairwise import pairwise_distances as pairwise_distances
from sklearn.neighbors import NearestNeighbors as NearestNeighbors
from sklearn.utils._testing import assert_array_equal as assert_array_equal
from typing import Any

n_clusters: int
X: Any

def test_dbscan_similarity() -> None: ...
def test_dbscan_feature() -> None: ...
def test_dbscan_sparse() -> None: ...
def test_dbscan_sparse_precomputed(include_self) -> None: ...
def test_dbscan_sparse_precomputed_different_eps() -> None: ...
def test_dbscan_input_not_modified(use_sparse, metric) -> None: ...
def test_dbscan_no_core_samples() -> None: ...
def test_dbscan_callable() -> None: ...
def test_dbscan_metric_params() -> None: ...
def test_dbscan_balltree() -> None: ...
def test_input_validation() -> None: ...
def test_dbscan_badargs(args) -> None: ...
def test_pickle() -> None: ...
def test_boundaries() -> None: ...
def test_weighted_dbscan() -> None: ...
def test_dbscan_core_samples_toy(algorithm) -> None: ...
def test_dbscan_precomputed_metric_with_degenerate_input_arrays() -> None: ...
def test_dbscan_precomputed_metric_with_initial_rows_zero() -> None: ...
