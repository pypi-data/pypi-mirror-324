from sklearn.ensemble._hist_gradient_boosting.common import ALMOST_INF as ALMOST_INF, X_BINNED_DTYPE as X_BINNED_DTYPE, X_DTYPE as X_DTYPE
from typing import Any

n_threads: Any
DATA: Any

def test_find_binning_thresholds_regular_data() -> None: ...
def test_find_binning_thresholds_small_regular_data() -> None: ...
def test_find_binning_thresholds_random_data() -> None: ...
def test_find_binning_thresholds_low_n_bins() -> None: ...
def test_invalid_n_bins(n_bins) -> None: ...
def test_bin_mapper_n_features_transform() -> None: ...
def test_map_to_bins(max_bins) -> None: ...
def test_bin_mapper_random_data(max_bins) -> None: ...
def test_bin_mapper_small_random_data(n_samples, max_bins) -> None: ...
def test_bin_mapper_identity_repeated_values(max_bins, n_distinct, multiplier) -> None: ...
def test_bin_mapper_repeated_values_invariance(n_distinct) -> None: ...
def test_bin_mapper_identity_small(max_bins, scale, offset) -> None: ...
def test_bin_mapper_idempotence(max_bins_small, max_bins_large) -> None: ...
def test_n_bins_non_missing(n_bins, diff) -> None: ...
def test_subsample() -> None: ...
def test_missing_values_support(n_bins, n_bins_non_missing, X_trans_expected) -> None: ...
def test_infinite_values() -> None: ...
def test_categorical_feature(n_bins) -> None: ...
def test_categorical_with_numerical_features(n_bins) -> None: ...
def test_make_known_categories_bitsets() -> None: ...
def test_categorical_parameters(is_categorical, known_categories, match) -> None: ...
