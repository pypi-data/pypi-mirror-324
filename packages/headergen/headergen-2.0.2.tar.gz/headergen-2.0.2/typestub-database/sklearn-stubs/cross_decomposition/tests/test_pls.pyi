from sklearn.cross_decomposition import CCA as CCA, PLSCanonical as PLSCanonical, PLSRegression as PLSRegression, PLSSVD as PLSSVD
from sklearn.datasets import load_linnerud as load_linnerud, make_regression as make_regression
from sklearn.exceptions import ConvergenceWarning as ConvergenceWarning
from sklearn.utils import check_random_state as check_random_state
from sklearn.utils._testing import ignore_warnings as ignore_warnings
from sklearn.utils.extmath import svd_flip as svd_flip

def assert_matrix_orthogonal(M) -> None: ...
def test_pls_canonical_basics() -> None: ...
def test_sanity_check_pls_regression() -> None: ...
def test_sanity_check_pls_regression_constant_column_Y() -> None: ...
def test_sanity_check_pls_canonical() -> None: ...
def test_sanity_check_pls_canonical_random() -> None: ...
def test_convergence_fail() -> None: ...
def test_attibutes_shapes(Est) -> None: ...
def test_univariate_equivalence(Est) -> None: ...
def test_copy(Est) -> None: ...
def test_scale_and_stability(Est, X, Y) -> None: ...
def test_n_components_bounds(Est, n_components) -> None: ...
def test_n_components_bounds_pls_regression(n_components) -> None: ...
def test_scores_deprecations(Est) -> None: ...
def test_norm_y_weights_deprecation(Est) -> None: ...
def test_mean_and_std_deprecation(Estimator, attribute) -> None: ...
def test_singular_value_helpers(n_samples, n_features, seed) -> None: ...
def test_one_component_equivalence() -> None: ...
def test_svd_flip_1d() -> None: ...
def test_loadings_converges() -> None: ...
def test_pls_constant_y() -> None: ...
