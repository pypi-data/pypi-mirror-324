from sklearn.base import BaseEstimator as BaseEstimator
from sklearn.datasets import make_blobs as make_blobs
from sklearn.ensemble import RandomForestRegressor as RandomForestRegressor
from sklearn.exceptions import NotFittedError as NotFittedError, PositiveSpectrumWarning as PositiveSpectrumWarning
from sklearn.linear_model import ARDRegression as ARDRegression
from sklearn.neighbors import KNeighborsClassifier as KNeighborsClassifier
from sklearn.svm import SVR as SVR
from sklearn.utils import as_float_array as as_float_array, check_X_y as check_X_y, check_array as check_array, check_symmetric as check_symmetric, deprecated as deprecated
from sklearn.utils._mocking import MockDataFrame as MockDataFrame
from sklearn.utils._testing import SkipTest as SkipTest, TempMemmap as TempMemmap, assert_allclose as assert_allclose, assert_allclose_dense_sparse as assert_allclose_dense_sparse, assert_array_equal as assert_array_equal, assert_no_warnings as assert_no_warnings, ignore_warnings as ignore_warnings
from sklearn.utils.fixes import parse_version as parse_version
from sklearn.utils.validation import FLOAT_DTYPES as FLOAT_DTYPES, assert_all_finite as assert_all_finite, check_consistent_length as check_consistent_length, check_is_fitted as check_is_fitted, check_memory as check_memory, check_non_negative as check_non_negative, check_scalar as check_scalar, has_fit_parameter as has_fit_parameter
from typing import Any

def test_as_float_array() -> None: ...
def test_as_float_array_nan(X) -> None: ...
def test_np_matrix() -> None: ...
def test_memmap(): ...
def test_ordering() -> None: ...
def test_check_array_force_all_finite_valid(value, force_all_finite, retype) -> None: ...
def test_check_array_force_all_finiteinvalid(value, force_all_finite, match_msg, retype) -> None: ...
def test_check_array_force_all_finite_object() -> None: ...
def test_check_array_force_all_finite_object_unsafe_casting(X, err_msg, force_all_finite) -> None: ...
def test_check_array() -> None: ...
def test_check_array_numeric_warns(X) -> None: ...
def test_check_array_dtype_numeric_errors(X) -> None: ...
def test_check_array_pandas_na_support(pd_dtype, dtype, expected_dtype) -> None: ...
def test_check_array_pandas_dtype_object_conversion() -> None: ...
def test_check_array_pandas_dtype_casting() -> None: ...
def test_check_array_on_mock_dataframe() -> None: ...
def test_check_array_dtype_stability() -> None: ...
def test_check_array_dtype_warning() -> None: ...
def test_check_array_accept_sparse_type_exception() -> None: ...
def test_check_array_accept_sparse_no_exception() -> None: ...
def X_64bit(request) -> None: ...
def test_check_array_accept_large_sparse_no_exception(X_64bit) -> None: ...
def test_check_array_accept_large_sparse_raise_exception(X_64bit) -> None: ...
def test_check_array_min_samples_and_features_messages() -> None: ...
def test_check_array_complex_data_error() -> None: ...
def test_has_fit_parameter() -> None: ...
def test_check_symmetric() -> None: ...
def test_check_is_fitted_with_is_fitted(): ...
def test_check_is_fitted() -> None: ...
def test_check_is_fitted_attributes(): ...
def test_check_is_fitted_with_attributes(wrap) -> None: ...
def test_check_consistent_length() -> None: ...
def test_check_dataframe_fit_attribute() -> None: ...
def test_suppress_validation() -> None: ...
def test_check_array_series() -> None: ...
def test_check_dataframe_mixed_float_dtypes() -> None: ...

class DummyMemory:
    def cache(self, func): ...

class WrongDummyMemory: ...

def test_check_memory() -> None: ...
def test_check_array_memmap(copy) -> None: ...
def test_check_non_negative(retype) -> None: ...
def test_check_X_y_informative_error() -> None: ...
def test_retrieve_samples_from_non_standard_shape(): ...
def test_check_scalar_valid(x) -> None: ...
def test_check_scalar_invalid(x, target_name, target_type, min_val, max_val, include_boundaries, err_msg) -> None: ...
def test_check_psd_eigenvalues_valid(lambdas, expected_lambdas, w_type, w_msg, enable_warnings) -> None: ...
def test_check_psd_eigenvalues_invalid(lambdas, err_type, err_msg) -> None: ...
def test_check_sample_weight() -> None: ...
def test_allclose_dense_sparse_equals(toarray) -> None: ...
def test_allclose_dense_sparse_not_equals(toarray) -> None: ...
def test_allclose_dense_sparse_raise(toarray) -> None: ...
def test_deprecate_positional_args_warns_for_function() -> None: ...
def test_deprecate_positional_args_warns_for_function_version() -> None: ...
def test_deprecate_positional_args_warns_for_class() -> None: ...
def test_check_fit_params(indices) -> None: ...
def test_check_sparse_pandas_sp_format(sp_format) -> None: ...
def test_check_pandas_sparse_invalid(ntype1, ntype2) -> None: ...
def test_check_pandas_sparse_valid(ntype1, ntype2, expected_subtype) -> None: ...
def test_num_features(constructor_name) -> None: ...
def test_num_features_errors_1d_containers(X, constructor_name) -> None: ...
def test_num_features_errors_scalars(X) -> None: ...
def test_check_array_deprecated_matrix() -> None: ...
def test_get_feature_names_pandas_with_ints_no_warning(names) -> None: ...
def test_get_feature_names_pandas() -> None: ...
def test_get_feature_names_numpy() -> None: ...
def test_get_feature_names_invalid_dtypes_warns(names, dtypes) -> None: ...

class PassthroughTransformer(BaseEstimator):
    def fit(self, X, y: Any | None = ...): ...
    def transform(self, X): ...
    def get_feature_names_out(self, input_features: Any | None = ...): ...

def test_check_feature_names_in() -> None: ...
def test_check_feature_names_in_pandas() -> None: ...
