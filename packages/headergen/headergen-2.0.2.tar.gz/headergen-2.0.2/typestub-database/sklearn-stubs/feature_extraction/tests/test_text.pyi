from sklearn.base import clone as clone
from sklearn.feature_extraction.text import CountVectorizer as CountVectorizer, ENGLISH_STOP_WORDS as ENGLISH_STOP_WORDS, HashingVectorizer as HashingVectorizer, TfidfTransformer as TfidfTransformer, TfidfVectorizer as TfidfVectorizer, strip_accents_ascii as strip_accents_ascii, strip_accents_unicode as strip_accents_unicode, strip_tags as strip_tags
from sklearn.model_selection import GridSearchCV as GridSearchCV, cross_val_score as cross_val_score, train_test_split as train_test_split
from sklearn.pipeline import Pipeline as Pipeline
from sklearn.svm import LinearSVC as LinearSVC
from sklearn.utils import IS_PYPY as IS_PYPY
from sklearn.utils._testing import assert_allclose_dense_sparse as assert_allclose_dense_sparse, assert_almost_equal as assert_almost_equal, fails_if_pypy as fails_if_pypy, skip_if_32bit as skip_if_32bit
from typing import Any

JUNK_FOOD_DOCS: Any
NOTJUNK_FOOD_DOCS: Any
ALL_FOOD_DOCS: Any

def uppercase(s): ...
def strip_eacute(s): ...
def split_tokenize(s): ...
def lazy_analyze(s): ...
def test_strip_accents() -> None: ...
def test_to_ascii() -> None: ...
def test_word_analyzer_unigrams(Vectorizer) -> None: ...
def test_word_analyzer_unigrams_and_bigrams() -> None: ...
def test_unicode_decode_error() -> None: ...
def test_char_ngram_analyzer() -> None: ...
def test_char_wb_ngram_analyzer() -> None: ...
def test_word_ngram_analyzer() -> None: ...
def test_countvectorizer_custom_vocabulary() -> None: ...
def test_countvectorizer_custom_vocabulary_pipeline() -> None: ...
def test_countvectorizer_custom_vocabulary_repeated_indices() -> None: ...
def test_countvectorizer_custom_vocabulary_gap_index() -> None: ...
def test_countvectorizer_stop_words() -> None: ...
def test_countvectorizer_empty_vocabulary() -> None: ...
def test_fit_countvectorizer_twice() -> None: ...
def test_countvectorizer_custom_token_pattern(get_names) -> None: ...
def test_countvectorizer_custom_token_pattern_with_several_group() -> None: ...
def test_countvectorizer_uppercase_in_vocab() -> None: ...
def test_tf_transformer_feature_names_out() -> None: ...
def test_tf_idf_smoothing() -> None: ...
def test_tfidf_no_smoothing() -> None: ...
def test_sublinear_tf() -> None: ...
def test_vectorizer() -> None: ...
def test_tfidf_vectorizer_setters() -> None: ...
def test_hashing_vectorizer() -> None: ...
def test_feature_names(get_names) -> None: ...
def test_vectorizer_max_features(Vectorizer) -> None: ...
def test_count_vectorizer_max_features(get_names) -> None: ...
def test_vectorizer_max_df() -> None: ...
def test_vectorizer_min_df() -> None: ...
def test_vectorizer_params_validation(params, err_type, message) -> None: ...
def test_count_binary_occurrences(get_names) -> None: ...
def test_hashed_binary_occurrences() -> None: ...
def test_vectorizer_inverse_transform(Vectorizer) -> None: ...
def test_count_vectorizer_pipeline_grid_selection() -> None: ...
def test_vectorizer_pipeline_grid_selection() -> None: ...
def test_vectorizer_pipeline_cross_validation() -> None: ...
def test_vectorizer_unicode() -> None: ...
def test_tfidf_vectorizer_with_fixed_vocabulary() -> None: ...
def test_pickling_vectorizer() -> None: ...
def test_pickling_built_processors(factory) -> None: ...
def test_countvectorizer_vocab_sets_when_pickling(get_names) -> None: ...
def test_countvectorizer_vocab_dicts_when_pickling(get_names) -> None: ...
def test_stop_words_removal() -> None: ...
def test_pickling_transformer() -> None: ...
def test_transformer_idf_setter() -> None: ...
def test_tfidf_vectorizer_setter() -> None: ...
def test_tfidfvectorizer_invalid_idf_attr() -> None: ...
def test_non_unique_vocab() -> None: ...
def test_hashingvectorizer_nan_in_docs() -> None: ...
def test_tfidfvectorizer_binary() -> None: ...
def test_tfidfvectorizer_export_idf() -> None: ...
def test_vectorizer_vocab_clone() -> None: ...
def test_vectorizer_string_object_as_input(Vectorizer) -> None: ...
def test_tfidf_transformer_type(X_dtype) -> None: ...
def test_tfidf_transformer_sparse() -> None: ...
def test_tfidf_vectorizer_type(vectorizer_dtype, output_dtype, warning_expected) -> None: ...
def test_vectorizers_invalid_ngram_range(vec) -> None: ...
def test_vectorizer_stop_words_inconsistent() -> None: ...
def test_countvectorizer_sort_features_64bit_sparse_indices() -> None: ...
def test_stop_word_validation_custom_preprocessor(Estimator): ...
def test_callable_analyzer_error(Estimator, input_type, err_type, err_msg): ...
def test_callable_analyzer_change_behavior(Estimator, analyzer, input_type) -> None: ...
def test_callable_analyzer_reraise_error(tmpdir, Estimator) -> None: ...
def test_unused_parameters_warn(Vectorizer, stop_words, tokenizer, preprocessor, ngram_range, token_pattern, analyzer, unused_name, ovrd_name, ovrd_msg) -> None: ...
def test_n_features_in(Vectorizer, X) -> None: ...
def test_tie_breaking_sample_order_invariance() -> None: ...
def test_get_feature_names_deprecated() -> None: ...
def test_nonnegative_hashing_vectorizer_result_indices() -> None: ...
