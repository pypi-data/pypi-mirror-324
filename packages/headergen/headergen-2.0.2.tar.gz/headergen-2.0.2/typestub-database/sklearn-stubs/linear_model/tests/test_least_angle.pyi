from sklearn import datasets as datasets, linear_model as linear_model
from sklearn.base import clone as clone
from sklearn.exceptions import ConvergenceWarning as ConvergenceWarning
from sklearn.linear_model import Lars as Lars, LarsCV as LarsCV, LassoLars as LassoLars, LassoLarsCV as LassoLarsCV, LassoLarsIC as LassoLarsIC, lars_path as lars_path
from sklearn.model_selection import train_test_split as train_test_split
from sklearn.pipeline import make_pipeline as make_pipeline
from sklearn.preprocessing import StandardScaler as StandardScaler
from sklearn.utils import check_random_state as check_random_state
from sklearn.utils._testing import TempMemmap as TempMemmap, assert_allclose as assert_allclose, assert_array_almost_equal as assert_array_almost_equal, ignore_warnings as ignore_warnings
from sklearn.utils.fixes import np_version as np_version, parse_version as parse_version
from typing import Any

diabetes: Any
X: Any
y: Any
G: Any
Xy: Any
n_samples: Any
filterwarnings_normalize: Any

def test_assure_warning_when_normalize(LeastAngleModel, normalize, n_warnings) -> None: ...
def test_simple() -> None: ...
def test_simple_precomputed() -> None: ...
def test_lars_path_gram_equivalent(method, return_path) -> None: ...
def test_x_none_gram_none_raises_value_error() -> None: ...
def test_all_precomputed() -> None: ...
def test_lars_lstsq() -> None: ...
def test_lasso_gives_lstsq_solution() -> None: ...
def test_collinearity() -> None: ...
def test_no_path() -> None: ...
def test_no_path_precomputed() -> None: ...
def test_no_path_all_precomputed() -> None: ...
def test_lars_precompute(classifier) -> None: ...
def test_singular_matrix() -> None: ...
def test_rank_deficient_design() -> None: ...
def test_lasso_lars_vs_lasso_cd() -> None: ...
def test_lasso_lars_vs_lasso_cd_early_stopping() -> None: ...
def test_lasso_lars_path_length() -> None: ...
def test_lasso_lars_vs_lasso_cd_ill_conditioned() -> None: ...
def test_lasso_lars_vs_lasso_cd_ill_conditioned2(): ...
def test_lars_add_features() -> None: ...
def test_lars_n_nonzero_coefs(verbose: bool = ...) -> None: ...
def test_multitarget() -> None: ...
def test_lars_cv() -> None: ...
def test_lars_cv_max_iter(recwarn) -> None: ...
def test_lasso_lars_ic() -> None: ...
def test_lars_path_readonly_data() -> None: ...
def test_lars_path_positive_constraint() -> None: ...

default_parameter: Any
estimator_parameter_map: Any

def test_estimatorclasses_positive_constraint() -> None: ...
def test_lasso_lars_vs_lasso_cd_positive() -> None: ...
def test_lasso_lars_vs_R_implementation() -> None: ...
def test_lasso_lars_copyX_behaviour(copy_X) -> None: ...
def test_lasso_lars_fit_copyX_behaviour(copy_X) -> None: ...
def test_lars_with_jitter(est) -> None: ...
def test_X_none_gram_not_none() -> None: ...
def test_copy_X_with_auto_gram() -> None: ...
def test_lars_dtype_match(LARS, has_coef_path, args, dtype) -> None: ...
def test_lars_numeric_consistency(LARS, has_coef_path, args) -> None: ...
def test_lassolarsic_alpha_selection(criterion) -> None: ...
def test_lassolarsic_noise_variance(fit_intercept) -> None: ...
