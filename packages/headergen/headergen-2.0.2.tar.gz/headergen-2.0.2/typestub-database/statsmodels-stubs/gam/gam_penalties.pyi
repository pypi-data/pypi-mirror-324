from statsmodels.base._penalties import Penalty as Penalty
from typing import Any

class UnivariateGamPenalty(Penalty):
    weights: Any
    alpha: Any
    univariate_smoother: Any
    nobs: Any
    n_columns: Any
    def __init__(self, univariate_smoother, alpha: int = ..., weights: int = ...) -> None: ...
    def func(self, params, alpha: Any | None = ...): ...
    def deriv(self, params, alpha: Any | None = ...): ...
    def deriv2(self, params, alpha: Any | None = ...): ...
    def penalty_matrix(self, alpha: Any | None = ...): ...

class MultivariateGamPenalty(Penalty):
    multivariate_smoother: Any
    dim_basis: Any
    k_variables: Any
    nobs: Any
    alpha: Any
    start_idx: Any
    k_params: Any
    weights: Any
    mask: Any
    gp: Any
    def __init__(self, multivariate_smoother, alpha, weights: Any | None = ..., start_idx: int = ...) -> None: ...
    def func(self, params, alpha: Any | None = ...): ...
    def deriv(self, params, alpha: Any | None = ...): ...
    def deriv2(self, params, alpha: Any | None = ...): ...
    def penalty_matrix(self, alpha: Any | None = ...): ...
