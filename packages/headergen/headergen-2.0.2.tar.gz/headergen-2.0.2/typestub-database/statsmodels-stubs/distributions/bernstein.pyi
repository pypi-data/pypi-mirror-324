from statsmodels.distributions.tools import cdf2prob_grid as cdf2prob_grid, prob2cdf_grid as prob2cdf_grid
from statsmodels.tools.decorators import cache_readonly as cache_readonly
from typing import Any

class BernsteinDistribution:
    cdf_grid: Any
    k_dim: Any
    k_grid: Any
    k_grid_product: Any
    def __init__(self, cdf_grid) -> None: ...
    @classmethod
    def from_data(cls, data, k_bins): ...
    def prob_grid(self): ...
    def cdf(self, x): ...
    def pdf(self, x): ...
    def get_marginal(self, idx): ...
    def rvs(self, nobs): ...

class BernsteinDistributionBV(BernsteinDistribution):
    def cdf(self, x): ...
    def pdf(self, x): ...

class BernsteinDistributionUV(BernsteinDistribution):
    def cdf(self, x, method: str = ...): ...
    def pdf(self, x, method: str = ...): ...
