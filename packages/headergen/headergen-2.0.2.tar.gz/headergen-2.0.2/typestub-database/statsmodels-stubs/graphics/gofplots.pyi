from typing import Any

class ProbPlot:
    data: Any
    a: Any
    nobs: Any
    distargs: Any
    fit: Any
    dist: Any
    loc: Any
    scale: Any
    fit_params: Any
    def __init__(self, data, dist=..., fit: bool = ..., distargs=..., a: int = ..., loc: int = ..., scale: int = ...) -> None: ...
    def theoretical_percentiles(self): ...
    def theoretical_quantiles(self): ...
    def sorted_data(self): ...
    def sample_quantiles(self): ...
    def sample_percentiles(self): ...
    def ppplot(self, xlabel: Any | None = ..., ylabel: Any | None = ..., line: Any | None = ..., other: Any | None = ..., ax: Any | None = ..., **plotkwargs): ...
    def qqplot(self, xlabel: Any | None = ..., ylabel: Any | None = ..., line: Any | None = ..., other: Any | None = ..., ax: Any | None = ..., swap: bool = ..., **plotkwargs): ...
    def probplot(self, xlabel: Any | None = ..., ylabel: Any | None = ..., line: Any | None = ..., exceed: bool = ..., ax: Any | None = ..., **plotkwargs): ...

def qqplot(data, dist=..., distargs=..., a: int = ..., loc: int = ..., scale: int = ..., fit: bool = ..., line: Any | None = ..., ax: Any | None = ..., **plotkwargs): ...
def qqplot_2samples(data1, data2, xlabel: Any | None = ..., ylabel: Any | None = ..., line: Any | None = ..., ax: Any | None = ...): ...
def qqline(ax, line, x: Any | None = ..., y: Any | None = ..., dist: Any | None = ..., fmt: str = ..., **lineoptions) -> None: ...
