from statsmodels.regression.linear_model import OLS as OLS
from statsmodels.tools.decorators import cache_readonly as cache_readonly
from typing import Any

class ResultsGeneric:
    def __init__(self, **kwds) -> None: ...

class TestResults(ResultsGeneric):
    def summary(self): ...

def lm_test_glm(result, exog_extra, mean_deriv: Any | None = ...): ...
def cm_test_robust(resid, resid_deriv, instruments, weights: int = ...): ...
def lm_robust(score, constraint_matrix, score_deriv_inv, cov_score, cov_params: Any | None = ...): ...
def lm_robust_subset(score, k_constraints, score_deriv_inv, cov_score): ...
def lm_robust_subset_parts(score, k_constraints, score_deriv_uu, score_deriv_cu, cov_score_cc, cov_score_cu, cov_score_uu): ...
def lm_robust_reparameterized(score, params_deriv, score_deriv, cov_score): ...
def dispersion_poisson(results): ...
def dispersion_poisson_generic(results, exog_new_test, exog_new_control: Any | None = ..., include_score: bool = ..., use_endog: bool = ..., cov_type: str = ..., cov_kwds: Any | None = ..., use_t: bool = ...): ...
def conditional_moment_test_generic(mom_test, mom_test_deriv, mom_incl, mom_incl_deriv, var_mom_all: Any | None = ..., cov_type: str = ..., cov_kwds: Any | None = ...): ...
def conditional_moment_test_regression(mom_test, mom_test_deriv: Any | None = ..., mom_incl: Any | None = ..., mom_incl_deriv: Any | None = ..., var_mom_all: Any | None = ..., demean: bool = ..., cov_type: str = ..., cov_kwds: Any | None = ...): ...

class CMTNewey:
    moments: Any
    cov_moments: Any
    moments_deriv: Any
    weights: Any
    transf_mt: Any
    moments_constraint: Any
    htw: Any
    k_moments: Any
    k_constraints: Any
    def __init__(self, moments, cov_moments, moments_deriv, weights, transf_mt) -> None: ...
    def asy_transf_params(self): ...
    def project_w(self): ...
    def asy_transform_mom_constraints(self): ...
    def asy_cov_moments(self): ...
    def cov_mom_constraints(self): ...
    def rank_cov_mom_constraints(self): ...
    def ztest(self): ...
    def chisquare(self): ...

class CMTTauchen:
    score: Any
    score_deriv: Any
    moments: Any
    moments_deriv: Any
    cov_moments_all: Any
    k_moments_test: Any
    k_params: Any
    k_moments_all: Any
    def __init__(self, score, score_deriv, moments, moments_deriv, cov_moments) -> None: ...
    def cov_params_all(self): ...
    def cov_mom_constraints(self): ...
    def rank_cov_mom_constraints(self): ...
    def ztest(self): ...
    def chisquare(self): ...
