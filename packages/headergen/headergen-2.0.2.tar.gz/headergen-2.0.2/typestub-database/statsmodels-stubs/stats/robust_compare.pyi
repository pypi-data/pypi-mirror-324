from typing import Any

def trimboth(a, proportiontocut, axis: int = ...): ...
def trim_mean(a, proportiontocut, axis: int = ...): ...

class TrimmedMean:
    data: Any
    axis: Any
    fraction: Any
    nobs: Any
    lowercut: Any
    uppercut: Any
    nobs_reduced: Any
    sl: Any
    data_sorted: Any
    lowerbound: Any
    upperbound: Any
    def __init__(self, data, fraction, is_sorted: bool = ..., axis: int = ...) -> None: ...
    @property
    def data_trimmed(self): ...
    @property
    def data_winsorized(self): ...
    @property
    def mean_trimmed(self): ...
    @property
    def mean_winsorized(self): ...
    @property
    def var_winsorized(self): ...
    @property
    def std_mean_trimmed(self): ...
    @property
    def std_mean_winsorized(self): ...
    def ttest_mean(self, value: int = ..., transform: str = ..., alternative: str = ...): ...
    def reset_fraction(self, frac): ...

def scale_transform(data, center: str = ..., transform: str = ..., trim_frac: float = ..., axis: int = ...): ...
