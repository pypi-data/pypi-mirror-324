from statsmodels.base.model import GenericLikelihoodModel as GenericLikelihoodModel
from typing import Any

def maxabs(arr1, arr2): ...
def maxabsrel(arr1, arr2): ...

class NonlinearDeltaCov:
    fun: Any
    params: Any
    cov_params: Any
    def __init__(self, fun, params, cov_params) -> None: ...
    def grad(self, params: Any | None = ..., **kwds): ...
    def cov(self): ...
    def expected(self): ...
    def wald(self, value): ...

class PoissonGMLE(GenericLikelihoodModel):
    def nloglikeobs(self, params): ...
    def predict_distribution(self, exog): ...

class PoissonOffsetGMLE(GenericLikelihoodModel):
    offset: Any
    def __init__(self, endog, exog: Any | None = ..., offset: Any | None = ..., missing: str = ..., **kwds) -> None: ...
    def nloglikeobs(self, params): ...

class PoissonZiGMLE(GenericLikelihoodModel):
    offset: Any
    exog: Any
    nparams: Any
    start_params: Any
    cloneattr: Any
    def __init__(self, endog, exog: Any | None = ..., offset: Any | None = ..., missing: str = ..., **kwds) -> None: ...
    def nloglikeobs(self, params): ...
