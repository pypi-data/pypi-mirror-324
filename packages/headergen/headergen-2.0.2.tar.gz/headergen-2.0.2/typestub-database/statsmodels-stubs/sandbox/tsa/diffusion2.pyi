class JumpDiffusionMerton:
    def __init__(self) -> None: ...
    def simulate(self, m, s, lambd, a, D, ts, nrepl): ...

class JumpDiffusionKou:
    def __init__(self) -> None: ...
    def simulate(self, m, s, lambd, p, e1, e2, ts, nrepl): ...

class VG:
    def __init__(self) -> None: ...
    def simulate(self, m, s, kappa, ts, nrepl): ...

class IG:
    def __init__(self) -> None: ...
    def simulate(self, l, m, nrepl): ...

class NIG:
    def __init__(self) -> None: ...
    def simulate(self, th, k, s, ts, nrepl): ...

class Heston:
    def __init__(self) -> None: ...
    def simulate(self, m, kappa, eta, lambd, r, ts, nrepl, tratio: float = ...): ...

class CIRSubordinatedBrownian:
    def __init__(self) -> None: ...
    def simulate(self, m, kappa, T_dot, lambd, sigma, ts, nrepl): ...

def schout2contank(a, b, d): ...
