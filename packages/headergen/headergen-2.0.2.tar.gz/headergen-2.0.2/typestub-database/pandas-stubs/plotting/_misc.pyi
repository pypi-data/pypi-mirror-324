from typing import Union, Any

def table(ax, data, rowLabels: Any | None = ..., colLabels: Any | None = ..., **kwargs): ...
def register() -> None: ...
def deregister() -> None: ...
def scatter_matrix(frame, alpha: float = ..., figsize: Any | None = ..., ax: Any | None = ..., grid: bool = ..., diagonal: str = ..., marker: str = ..., density_kwds: Any | None = ..., hist_kwds: Any | None = ..., range_padding: float = ..., **kwargs): ...
def radviz(frame, class_column, ax: Any | None = ..., color: Any | None = ..., colormap: Any | None = ..., **kwds): ...
def andrews_curves(frame, class_column, ax: Any | None = ..., samples: int = ..., color: Any | None = ..., colormap: Any | None = ..., **kwargs): ...
def bootstrap_plot(series, fig: Any | None = ..., size: int = ..., samples: int = ..., **kwds): ...
def parallel_coordinates(frame, class_column, cols: Any | None = ..., ax: Any | None = ..., color: Any | None = ..., use_columns: bool = ..., xticks: Any | None = ..., colormap: Any | None = ..., axvlines: bool = ..., axvlines_kwds: Any | None = ..., sort_labels: bool = ..., **kwargs): ...
def lag_plot(series, lag: int = ..., ax: Any | None = ..., **kwds): ...
def autocorrelation_plot(series, ax: Any | None = ..., **kwargs): ...

class _Options(dict):
    def __init__(self, deprecated: bool = ...) -> None: ...
    def __getitem__(self, key): ...
    def __setitem__(self, key, value): ...
    def __delitem__(self, key): ...
    def __contains__(self, key) -> bool: ...
    def reset(self) -> None: ...
    def use(self, key, value) -> None: ...

plot_params: Any
