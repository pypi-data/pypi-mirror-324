from _typeshed import Incomplete

class BatteryRunner:
    def __init__(self, checks) -> None: ...
    def check_only(self, obj): ...
    def check_fix(self, obj): ...
    def __len__(self) -> int: ...

class Report:
    error: Incomplete
    problem_level: Incomplete
    problem_msg: Incomplete
    fix_msg: Incomplete
    def __init__(
        self,
        error=...,
        problem_level: int = 0,
        problem_msg: str = "",
        fix_msg: str = "",
    ) -> None: ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    @property
    def message(self): ...
    def log_raise(self, logger, error_level: int = 40) -> None: ...
    def write_raise(
        self, stream, error_level: int = 40, log_level: int = 30
    ) -> None: ...
