from _typeshed import Incomplete

from ... import imageglobals as imageglobals
from ...fileholders import FileHolder as FileHolder
from ...openers import ImageOpener as ImageOpener
from ...spatialimages import HeaderDataError as HeaderDataError
from ...testing import data_path as data_path
from ...tests import test_spatialimages as tsi
from ...tests import test_wrapstruct as tws
from ...tmpdirs import InTemporaryDirectory as InTemporaryDirectory
from ...volumeutils import sys_is_le as sys_is_le
from ...wrapstruct import WrapStructError as WrapStructError
from .. import load as load
from .. import save as save
from ..mghformat import MGHError as MGHError
from ..mghformat import MGHHeader as MGHHeader
from ..mghformat import MGHImage as MGHImage

MGZ_FNAME: Incomplete
v2r: Incomplete
v2rtkr: Incomplete
BIG_CODES: Incomplete
LITTLE_CODES: Incomplete

def test_read_mgh() -> None: ...
def test_write_mgh() -> None: ...
def test_write_noaffine_mgh() -> None: ...
def test_set_zooms() -> None: ...
def bad_dtype_mgh() -> None: ...
def test_bad_dtype_mgh() -> None: ...
def test_filename_exts() -> None: ...
def test_header_updating() -> None: ...
def test_cosine_order() -> None: ...
def test_eq() -> None: ...
def test_header_slope_inter() -> None: ...
def test_mgh_load_fileobj() -> None: ...
def test_mgh_affine_default() -> None: ...
def test_mgh_set_data_shape() -> None: ...
def test_mghheader_default_structarr() -> None: ...

class TestMGHImage(tsi.TestSpatialImage, tsi.MmapImageMixin):
    image_class = MGHImage
    can_save: bool
    def check_dtypes(self, expected, actual) -> None: ...

class TestMGHHeader(tws._TestLabeledWrapStruct):
    header_class = MGHHeader
    def get_bad_bb(self): ...
    def test_general_init(self) -> None: ...
    def test__eq__(self) -> None: ...
    def test_to_from_fileobj(self) -> None: ...
    def test_endian_guess(self) -> None: ...
    def test_bytes(self) -> None: ...
    def test_as_byteswapped(self) -> None: ...
    def test_checks(self) -> None: ...
