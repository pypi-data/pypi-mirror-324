from _typeshed import Incomplete

from .. import imageglobals as imageglobals
from ..analyze import AnalyzeHeader as AnalyzeHeader
from ..analyze import AnalyzeImage as AnalyzeImage
from ..arraywriters import WriterError as WriterError
from ..casting import sctypes_aliases as sctypes_aliases
from ..nifti1 import Nifti1Header as Nifti1Header
from ..optpkg import optional_package as optional_package
from ..spatialimages import HeaderDataError as HeaderDataError
from ..spatialimages import HeaderTypeError as HeaderTypeError
from ..spatialimages import supported_np_types as supported_np_types
from ..testing import assert_dt_equal as assert_dt_equal
from ..testing import bytesio_filemap as bytesio_filemap
from ..testing import bytesio_round_trip as bytesio_round_trip
from ..testing import data_path as data_path
from ..testing import suppress_warnings as suppress_warnings
from ..tmpdirs import InTemporaryDirectory as InTemporaryDirectory
from . import test_spatialimages as tsi
from . import test_wrapstruct as tws

HAVE_ZSTD: Incomplete
header_file: Incomplete
PIXDIM0_MSG: str

def add_duplicate_types(supported_np_types) -> None: ...

class TestAnalyzeHeader(tws._TestLabeledWrapStruct):
    header_class = AnalyzeHeader
    example_file = header_file
    sizeof_hdr: Incomplete
    supported_np_types: Incomplete
    def test_supported_types(self) -> None: ...
    def get_bad_bb(self): ...
    def test_general_init(self) -> None: ...
    def test_header_size(self) -> None: ...
    def test_empty(self) -> None: ...
    def test_checks(self) -> None: ...
    def test_pixdim_checks(self) -> None: ...
    def test_log_checks(self) -> None: ...
    def test_pixdim_log_checks(self) -> None: ...
    def test_no_scaling_fixes(self) -> None: ...
    def test_logger_error(self) -> None: ...
    def test_data_dtype(self) -> None: ...
    def test_shapes(self) -> None: ...
    def test_read_write_data(self) -> None: ...
    def test_datatype(self) -> None: ...
    def test_offset(self) -> None: ...
    def test_data_shape_zooms_affine(self) -> None: ...
    def test_default_x_flip(self) -> None: ...
    def test_from_eg_file(self) -> None: ...
    def test_orientation(self) -> None: ...
    def test_str(self) -> None: ...
    def test_from_header(self): ...
    def test_base_affine(self) -> None: ...
    def test_scaling(self) -> None: ...
    def test_slope_inter(self) -> None: ...
    def test_from_analyze_map(self): ...

def test_best_affine() -> None: ...
def test_data_code_error() -> None: ...

class TestAnalyzeImage(tsi.TestSpatialImage, tsi.MmapImageMixin):
    image_class = AnalyzeImage
    can_save: bool
    supported_np_types: Incomplete
    def test_supported_types(self) -> None: ...
    def test_default_header(self) -> None: ...
    def test_data_hdr_cache(self) -> None: ...
    def test_affine_44(self) -> None: ...
    def test_dtype_init_arg(self) -> None: ...
    def test_offset_to_zero(self) -> None: ...
    def test_big_offset_exts(self) -> None: ...
    def test_header_updating(self) -> None: ...
    def test_pickle(self) -> None: ...
    def test_no_finite_values(self) -> None: ...
    def test_dtype_to_filename_arg(self) -> None: ...

def test_unsupported() -> None: ...
