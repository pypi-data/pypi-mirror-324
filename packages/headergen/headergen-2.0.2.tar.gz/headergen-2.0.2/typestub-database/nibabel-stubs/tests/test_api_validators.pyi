from collections.abc import Generator

from _typeshed import Incomplete

class validator2test(type):
    def __new__(mcs, name, bases, dict): ...

class ValidateAPI(metaclass=validator2test): ...

class TestValidateSomething(ValidateAPI):
    var: Incomplete
    def obj_params(self) -> Generator[Incomplete, None, Incomplete]: ...
    def validate_something(self, obj, params) -> None: ...

class TestRunAllTests(ValidateAPI):
    run_tests: Incomplete
    def obj_params(self) -> Generator[Incomplete, None, None]: ...
    def validate_first(self, obj, param) -> None: ...
    def validate_second(self, obj, param) -> None: ...
    @classmethod
    def teardown_class(cls) -> None: ...
