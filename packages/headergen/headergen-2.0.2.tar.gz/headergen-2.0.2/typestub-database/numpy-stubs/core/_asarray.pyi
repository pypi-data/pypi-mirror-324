from numpy import _OrderKACF, ndarray as ndarray
from numpy.typing import ArrayLike as ArrayLike, DTypeLike as DTypeLike
from typing import Iterable, Union, overload

def asarray(a: object, dtype: DTypeLike = ..., order: _OrderKACF = ..., *, like: ArrayLike = ...) -> ndarray: ...
@overload
def asanyarray(a: _ArrayType, dtype: None = ..., order: _OrderKACF = ..., *, like: ArrayLike = ...) -> _ArrayType: ...
@overload
def asanyarray(a: object, dtype: DTypeLike = ..., order: _OrderKACF = ..., *, like: ArrayLike = ...) -> ndarray: ...
def ascontiguousarray(a: object, dtype: DTypeLike = ..., *, like: ArrayLike = ...) -> ndarray: ...
def asfortranarray(a: object, dtype: DTypeLike = ..., *, like: ArrayLike = ...) -> ndarray: ...
@overload
def require(a: _ArrayType, dtype: None = ..., requirements: Union[None, _Requirements, Iterable[_Requirements]] = ..., *, like: ArrayLike = ...) -> _ArrayType: ...
@overload
def require(a: object, dtype: DTypeLike = ..., requirements: Union[_E, Iterable[_RequirementsWithE]] = ..., *, like: ArrayLike = ...) -> ndarray: ...
@overload
def require(a: object, dtype: DTypeLike = ..., requirements: Union[None, _Requirements, Iterable[_Requirements]] = ..., *, like: ArrayLike = ...) -> ndarray: ...
