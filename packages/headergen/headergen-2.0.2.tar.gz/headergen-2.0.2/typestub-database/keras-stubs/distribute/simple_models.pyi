import keras
import tensorflow.compat.v2 as tf
from keras.distribute import model_collection_base as model_collection_base
from keras.optimizer_v2 import gradient_descent as gradient_descent
from typing import Any

class SimpleFunctionalModel(model_collection_base.ModelAndInput):
    def get_model(self, **kwargs): ...
    def get_data(self): ...
    def get_batch_size(self): ...

class SimpleSequentialModel(model_collection_base.ModelAndInput):
    def get_model(self, **kwargs): ...
    def get_data(self): ...
    def get_batch_size(self): ...

class _SimpleModel(keras.Model):
    def __init__(self) -> None: ...
    def call(self, inputs): ...

class SimpleSubclassModel(model_collection_base.ModelAndInput):
    def get_model(self, **kwargs): ...
    def get_data(self): ...
    def get_batch_size(self): ...

class _SimpleModule(tf.Module):
    v: Any
    def __init__(self) -> None: ...
    def __call__(self, x): ...

class SimpleTFModuleModel(model_collection_base.ModelAndInput):
    def get_model(self, **kwargs): ...
    def get_data(self): ...
    def get_batch_size(self): ...
