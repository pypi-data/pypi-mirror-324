from typing import Any

class _LinearPlotter:
    data: Any
    def establish_variables(self, data, **kws) -> None: ...
    def dropna(self, *vars) -> None: ...
    def plot(self, ax) -> None: ...

class _RegressionPlotter(_LinearPlotter):
    x_estimator: Any
    ci: Any
    x_ci: Any
    n_boot: Any
    seed: Any
    scatter: Any
    fit_reg: Any
    order: Any
    logistic: Any
    lowess: Any
    robust: Any
    logx: Any
    truncate: Any
    x_jitter: Any
    y_jitter: Any
    color: Any
    label: Any
    x: Any
    y: Any
    x_discrete: Any
    x_range: Any
    def __init__(self, x, y, data: Any | None = ..., x_estimator: Any | None = ..., x_bins: Any | None = ..., x_ci: str = ..., scatter: bool = ..., fit_reg: bool = ..., ci: int = ..., n_boot: int = ..., units: Any | None = ..., seed: Any | None = ..., order: int = ..., logistic: bool = ..., lowess: bool = ..., robust: bool = ..., logx: bool = ..., x_partial: Any | None = ..., y_partial: Any | None = ..., truncate: bool = ..., dropna: bool = ..., x_jitter: Any | None = ..., y_jitter: Any | None = ..., color: Any | None = ..., label: Any | None = ...) -> None: ...
    @property
    def scatter_data(self): ...
    @property
    def estimate_data(self): ...
    def fit_regression(self, ax: Any | None = ..., x_range: Any | None = ..., grid: Any | None = ...): ...
    def fit_fast(self, grid): ...
    def fit_poly(self, grid, order): ...
    def fit_statsmodels(self, grid, model, **kwargs): ...
    def fit_lowess(self): ...
    def fit_logx(self, grid): ...
    def bin_predictor(self, bins): ...
    def regress_out(self, a, b): ...
    def plot(self, ax, scatter_kws, line_kws) -> None: ...
    def scatterplot(self, ax, kws) -> None: ...
    def lineplot(self, ax, kws) -> None: ...

def lmplot(*, x: Any | None = ..., y: Any | None = ..., data: Any | None = ..., hue: Any | None = ..., col: Any | None = ..., row: Any | None = ..., palette: Any | None = ..., col_wrap: Any | None = ..., height: int = ..., aspect: int = ..., markers: str = ..., sharex: Any | None = ..., sharey: Any | None = ..., hue_order: Any | None = ..., col_order: Any | None = ..., row_order: Any | None = ..., legend: bool = ..., legend_out: Any | None = ..., x_estimator: Any | None = ..., x_bins: Any | None = ..., x_ci: str = ..., scatter: bool = ..., fit_reg: bool = ..., ci: int = ..., n_boot: int = ..., units: Any | None = ..., seed: Any | None = ..., order: int = ..., logistic: bool = ..., lowess: bool = ..., robust: bool = ..., logx: bool = ..., x_partial: Any | None = ..., y_partial: Any | None = ..., truncate: bool = ..., x_jitter: Any | None = ..., y_jitter: Any | None = ..., scatter_kws: Any | None = ..., line_kws: Any | None = ..., facet_kws: Any | None = ..., size: Any | None = ...): ...
def regplot(*, x: Any | None = ..., y: Any | None = ..., data: Any | None = ..., x_estimator: Any | None = ..., x_bins: Any | None = ..., x_ci: str = ..., scatter: bool = ..., fit_reg: bool = ..., ci: int = ..., n_boot: int = ..., units: Any | None = ..., seed: Any | None = ..., order: int = ..., logistic: bool = ..., lowess: bool = ..., robust: bool = ..., logx: bool = ..., x_partial: Any | None = ..., y_partial: Any | None = ..., truncate: bool = ..., dropna: bool = ..., x_jitter: Any | None = ..., y_jitter: Any | None = ..., label: Any | None = ..., color: Any | None = ..., marker: str = ..., scatter_kws: Any | None = ..., line_kws: Any | None = ..., ax: Any | None = ...): ...
def residplot(*, x: Any | None = ..., y: Any | None = ..., data: Any | None = ..., lowess: bool = ..., x_partial: Any | None = ..., y_partial: Any | None = ..., order: int = ..., robust: bool = ..., dropna: bool = ..., label: Any | None = ..., color: Any | None = ..., scatter_kws: Any | None = ..., line_kws: Any | None = ..., ax: Any | None = ...): ...
