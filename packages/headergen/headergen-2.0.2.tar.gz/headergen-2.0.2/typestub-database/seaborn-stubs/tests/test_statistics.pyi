from .._statistics import ECDF as ECDF, Histogram as Histogram, KDE as KDE

class DistributionFixtures:
    def x(self, rng): ...
    def y(self, rng): ...
    def weights(self, rng): ...

class TestKDE:
    def test_gridsize(self, rng) -> None: ...
    def test_cut(self, rng) -> None: ...
    def test_clip(self, rng) -> None: ...
    def test_density_normalization(self, rng) -> None: ...
    def test_cumulative(self, rng) -> None: ...
    def test_cached_support(self, rng) -> None: ...
    def test_bw_method(self, rng) -> None: ...
    def test_bw_adjust(self, rng) -> None: ...
    def test_bivariate_grid(self, rng) -> None: ...
    def test_bivariate_normalization(self, rng) -> None: ...
    def test_bivariate_cumulative(self, rng) -> None: ...

class TestHistogram(DistributionFixtures):
    def test_string_bins(self, x) -> None: ...
    def test_int_bins(self, x) -> None: ...
    def test_array_bins(self, x) -> None: ...
    def test_bivariate_string_bins(self, x, y) -> None: ...
    def test_bivariate_int_bins(self, x, y) -> None: ...
    def test_bivariate_array_bins(self, x, y) -> None: ...
    def test_binwidth(self, x) -> None: ...
    def test_bivariate_binwidth(self, x, y) -> None: ...
    def test_binrange(self, x) -> None: ...
    def test_bivariate_binrange(self, x, y) -> None: ...
    def test_discrete_bins(self, rng) -> None: ...
    def test_histogram(self, x) -> None: ...
    def test_count_stat(self, x) -> None: ...
    def test_density_stat(self, x) -> None: ...
    def test_probability_stat(self, x) -> None: ...
    def test_frequency_stat(self, x) -> None: ...
    def test_cumulative_count(self, x) -> None: ...
    def test_cumulative_density(self, x) -> None: ...
    def test_cumulative_probability(self, x) -> None: ...
    def test_cumulative_frequency(self, x) -> None: ...
    def test_bivariate_histogram(self, x, y) -> None: ...
    def test_bivariate_count_stat(self, x, y) -> None: ...
    def test_bivariate_density_stat(self, x, y) -> None: ...
    def test_bivariate_probability_stat(self, x, y) -> None: ...
    def test_bivariate_frequency_stat(self, x, y) -> None: ...
    def test_bivariate_cumulative_count(self, x, y) -> None: ...
    def test_bivariate_cumulative_density(self, x, y) -> None: ...
    def test_bivariate_cumulative_frequency(self, x, y) -> None: ...
    def test_bivariate_cumulative_probability(self, x, y) -> None: ...
    def test_bad_stat(self) -> None: ...

class TestECDF(DistributionFixtures):
    def test_univariate_proportion(self, x) -> None: ...
    def test_univariate_count(self, x) -> None: ...
    def test_univariate_proportion_weights(self, x, weights) -> None: ...
    def test_univariate_count_weights(self, x, weights) -> None: ...
    def test_against_statsmodels(self, x) -> None: ...
    def test_invalid_stat(self, x) -> None: ...
    def test_bivariate_error(self, x, y) -> None: ...
