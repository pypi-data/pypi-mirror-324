{
    "tensorflow.python.distribute.tpu_strategy.maybe_init_scope": [],
    "tensorflow.python.distribute.tpu_strategy.validate_run_function": [],
    "tensorflow.python.distribute.tpu_strategy._maybe_partial_apply_variables": [],
    "tensorflow.python.distribute.tpu_strategy._make_axis_nonnegative": [],
    "tensorflow.python.distribute.tpu_strategy._set_last_step_outputs": [],
    "tensorflow.python.distribute.tpu_strategy.TPUStrategyV2.__init__": [],
    "tensorflow.python.distribute.tpu_strategy.TPUStrategyV2.run": [],
    "tensorflow.python.distribute.tpu_strategy.TPUStrategyV2.experimental_assign_to_logical_device": [],
    "tensorflow.python.distribute.tpu_strategy.TPUStrategyV2.experimental_split_to_logical_devices": [],
    "tensorflow.python.distribute.tpu_strategy.TPUStrategyV2.experimental_replicate_to_logical_devices": [],
    "tensorflow.python.distribute.tpu_strategy.TPUStrategy.__init__": [],
    "tensorflow.python.distribute.tpu_strategy.TPUStrategy.run": [],
    "tensorflow.python.distribute.tpu_strategy.TPUStrategy.cluster_resolver": [],
    "tensorflow.python.distribute.tpu_strategy.TPUStrategyV1.__init__": [],
    "tensorflow.python.distribute.tpu_strategy.TPUStrategyV1.steps_per_run": [],
    "tensorflow.python.distribute.tpu_strategy.TPUStrategyV1.run": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended.__init__": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._validate_colocate_with_variable": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._make_dataset_iterator": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._make_input_fn_iterator": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._experimental_make_numpy_dataset": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._get_input_workers": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._check_spec": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._experimental_distribute_dataset": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._distribute_datasets_from_function": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._experimental_distribute_values_from_function": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._experimental_run_steps_on_iterator": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._call_for_each_replica": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended.experimental_logical_device": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._experimental_initialize_system": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._create_variable": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._resource_creator_scope": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._gather_to_implementation": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._broadcast_output": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._reduce_to": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._update": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended.read_var": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended.value_container": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._broadcast_to": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended.num_hosts": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended.num_replicas_per_host": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._num_replicas_in_sync": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended.experimental_between_graph": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended.experimental_should_init": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended.should_checkpoint": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended.should_save_summary": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended.worker_devices": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended.parameter_devices": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended.non_slot_devices": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._update_non_slot": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._configure": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._update_config_proto": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._global_batch_size": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended.tpu_run": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._tpu_function_creator": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._in_multi_worker_mode": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended._get_local_replica_id": [],
    "tensorflow.python.distribute.tpu_strategy._TPUReplicaContext.__init__": [],
    "tensorflow.python.distribute.tpu_strategy._TPUReplicaContext.devices": [],
    "tensorflow.python.distribute.tpu_strategy._TPUReplicaContext.experimental_logical_device": [],
    "tensorflow.python.distribute.tpu_strategy._TPUReplicaContext._compute_all_gather_output_shape": [],
    "tensorflow.python.distribute.tpu_strategy._TPUReplicaContext.all_gather": [],
    "tensorflow.python.distribute.tpu_strategy.TPUStrategyV2": [],
    "tensorflow.python.distribute.tpu_strategy.TPUStrategy": [],
    "tensorflow.python.distribute.tpu_strategy.TPUStrategyV1": [],
    "tensorflow.python.distribute.tpu_strategy.TPUExtended": [],
    "tensorflow.python.distribute.tpu_strategy._TPUReplicaContext": []
}