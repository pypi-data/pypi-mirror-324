from numpy import dtype as dtype
from numpy.ma import MaskedArray as MaskedArray

class MaskedRecords(MaskedArray[_ShapeType, _DType_co]):
    def __new__(cls, shape, dtype=..., buf=..., offset=..., strides=..., formats=..., names=..., titles=..., byteorder=..., aligned=..., mask=..., hard_mask=..., fill_value=..., keep_mask=..., copy=..., **options) -> None: ...
    def __array_finalize__(self, obj) -> None: ...
    def __len__(self) -> None: ...
    def __getattribute__(self, attr) -> None: ...
    def __setattr__(self, attr, val) -> None: ...
    def __getitem__(self, indx) -> None: ...
    def __setitem__(self, indx, value) -> None: ...
    def view(self, dtype=..., type=...) -> None: ...
    def harden_mask(self) -> None: ...
    def soften_mask(self) -> None: ...
    def copy(self) -> None: ...
    def tolist(self, fill_value=...) -> None: ...
    def __reduce__(self) -> None: ...
mrecarray = MaskedRecords

def fromarrays(arraylist, dtype=..., shape=..., formats=..., names=..., titles=..., aligned=..., byteorder=..., fill_value=...) -> None: ...
def fromrecords(reclist, dtype=..., shape=..., formats=..., names=..., titles=..., aligned=..., byteorder=..., fill_value=..., mask=...) -> None: ...
def fromtextfile(fname, delimitor=..., commentchar=..., missingchar=..., varnames=..., vartypes=...) -> None: ...
def addfield(mrecord, newfield, newfieldname=...) -> None: ...
