from typing import Any

class _ColorPalette(list):
    def __enter__(self): ...
    def __exit__(self, *args) -> None: ...
    def as_hex(self): ...

def color_palette(palette: Any | None = ..., n_colors: Any | None = ..., desat: Any | None = ..., as_cmap: bool = ...): ...
def hls_palette(n_colors: int = ..., h: float = ..., l: float = ..., s: float = ..., as_cmap: bool = ...): ...
def husl_palette(n_colors: int = ..., h: float = ..., s: float = ..., l: float = ..., as_cmap: bool = ...): ...
def mpl_palette(name, n_colors: int = ..., as_cmap: bool = ...): ...
def dark_palette(color, n_colors: int = ..., reverse: bool = ..., as_cmap: bool = ..., input: str = ...): ...
def light_palette(color, n_colors: int = ..., reverse: bool = ..., as_cmap: bool = ..., input: str = ...): ...
def diverging_palette(h_neg, h_pos, s: int = ..., l: int = ..., sep: int = ..., n: int = ..., center: str = ..., as_cmap: bool = ...): ...
def blend_palette(colors, n_colors: int = ..., as_cmap: bool = ..., input: str = ...): ...
def xkcd_palette(colors): ...
def crayon_palette(colors): ...
def cubehelix_palette(n_colors: int = ..., start: int = ..., rot: float = ..., gamma: float = ..., hue: float = ..., light: float = ..., dark: float = ..., reverse: bool = ..., as_cmap: bool = ...): ...
def set_color_codes(palette: str = ...) -> None: ...
