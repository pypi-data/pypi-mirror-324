from typing import Any

from keras.src.engine import base_layer as base_layer
from keras.src.engine import functional as functional
from keras.src.engine import input_layer as input_layer
from keras.src.engine import training_utils as training_utils
from keras.src.saving.saved_model import model_serialization as model_serialization
from keras.utils import generic_utils as generic_utils
from keras.utils import layer_utils as layer_utils
from keras.utils import tf_inspect as tf_inspect
from keras.utils import tf_utils as tf_utils
from keras.utils import traceback_utils as traceback_utils

SINGLE_LAYER_OUTPUT_ERROR_MSG: str

class Sequential(functional.Functional):
    supports_masking: bool
    def __init__(self, layers: Any | None = ..., name: Any | None = ...) -> None: ...
    @property
    def layers(self): ...
    built: bool
    outputs: Any
    inputs: Any
    def add(self, layer) -> None: ...
    def pop(self) -> None: ...
    def build(self, input_shape: Any | None = ...) -> None: ...
    def call(self, inputs, training: Any | None = ..., mask: Any | None = ...): ...
    def compute_output_shape(self, input_shape): ...
    def compute_mask(self, inputs, mask): ...
    def get_config(self): ...
    @classmethod
    def from_config(cls, config, custom_objects: Any | None = ...): ...
    @property
    def input_spec(self): ...
    @input_spec.setter
    def input_spec(self, value) -> None: ...

def relax_input_shape(shape_1, shape_2): ...
def clear_previously_created_nodes(layer, created_nodes) -> None: ...
def track_nodes_created_by_last_call(layer, created_nodes) -> None: ...
