from keras.layers import recurrent as recurrent
from keras.layers.legacy_rnn import rnn_cell_wrapper_impl as rnn_cell_wrapper_impl
from keras.utils import tf_inspect as tf_inspect
from typing import Any

class _RNNCellWrapperV2(recurrent.AbstractRNNCell):
    cell: Any
    def __init__(self, cell, *args, **kwargs) -> None: ...
    def call(self, inputs, state, **kwargs): ...
    built: bool
    def build(self, inputs_shape) -> None: ...
    def get_config(self): ...
    @classmethod
    def from_config(cls, config, custom_objects: Any | None = ...): ...

class DropoutWrapper(rnn_cell_wrapper_impl.DropoutWrapperBase, _RNNCellWrapperV2):
    def __init__(self, *args, **kwargs) -> None: ...

class ResidualWrapper(rnn_cell_wrapper_impl.ResidualWrapperBase, _RNNCellWrapperV2):
    def __init__(self, *args, **kwargs) -> None: ...

class DeviceWrapper(rnn_cell_wrapper_impl.DeviceWrapperBase, _RNNCellWrapperV2):
    def __init__(self, *args, **kwargs) -> None: ...
