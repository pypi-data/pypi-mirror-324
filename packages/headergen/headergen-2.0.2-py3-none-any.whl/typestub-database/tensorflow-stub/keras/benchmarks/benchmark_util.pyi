import tensorflow as tf
from tensorflow.python.keras.benchmarks import distribution_util as distribution_util
from typing import Any

def get_benchmark_name(name): ...
def generate_benchmark_params_cpu_gpu(*params_list): ...
def get_keras_examples_metadata(keras_model, batch_size, impl: str = ...): ...

class TimerCallBack(tf.keras.callbacks.Callback):
    times: Any
    timer: Any
    startup_time: Any
    recorded_startup: bool
    def __init__(self) -> None: ...
    epoch_start_time: Any
    def on_epoch_begin(self, e, logs) -> None: ...
    def on_epoch_end(self, e, logs) -> None: ...
    def on_batch_end(self, e, logs) -> None: ...

def measure_performance(model_fn, x: Any | None = ..., y: Any | None = ..., epochs: int = ..., batch_size: int = ..., run_iters: int = ..., optimizer: Any | None = ..., loss: Any | None = ..., metrics: Any | None = ..., verbose: int = ..., num_gpus: int = ..., distribution_strategy: str = ...): ...
