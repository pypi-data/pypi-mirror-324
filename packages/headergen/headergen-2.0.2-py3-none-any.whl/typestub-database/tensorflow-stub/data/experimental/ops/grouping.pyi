from tensorflow.python.data.ops import dataset_ops as dataset_ops
from tensorflow.python.data.util import nest as nest, structure as structure
from tensorflow.python.framework import dtypes as dtypes, ops as ops, tensor_spec as tensor_spec
from tensorflow.python.util import deprecation as deprecation
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any

def group_by_reducer(key_func, reducer): ...
def group_by_window(key_func, reduce_func, window_size: Any | None = ..., window_size_func: Any | None = ...): ...
def bucket_by_sequence_length(element_length_func, bucket_boundaries, bucket_batch_sizes, padded_shapes: Any | None = ..., padding_values: Any | None = ..., pad_to_bucket_boundary: bool = ..., no_padding: bool = ..., drop_remainder: bool = ...): ...

class _GroupByReducerDataset(dataset_ops.UnaryDataset):
    def __init__(self, input_dataset, key_func, reducer) -> None: ...
    @property
    def element_spec(self): ...

class Reducer:
    def __init__(self, init_func, reduce_func, finalize_func) -> None: ...
    @property
    def init_func(self): ...
    @property
    def reduce_func(self): ...
    @property
    def finalize_func(self): ...
