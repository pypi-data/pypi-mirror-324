from tensorflow.python.eager import context as context
from tensorflow.python.framework import ops as ops
from tensorflow.python.platform import tf_logging as tf_logging
from tensorflow.python.util import tf_decorator as tf_decorator
from typing import Any

class _TFShouldUseHelper:
    def __init__(self, type_, repr_, stack_frame, error_in_function, warn_in_eager): ...
    def sate(self) -> None: ...
    def __del__(self) -> None: ...

def _new__init__(self, wrapped_value, tf_should_use_helper) -> None: ...
def _new__setattr__(self, key, value): ...
def _new__getattribute__(self, key): ...
def should_use_result(fn: Any | None = ..., warn_in_eager: bool = ..., error_in_function: bool = ...): ...
