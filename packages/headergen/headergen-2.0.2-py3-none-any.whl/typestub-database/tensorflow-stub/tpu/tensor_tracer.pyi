from tensorflow.core.framework import summary_pb2 as summary_pb2
from tensorflow.python.framework import constant_op as constant_op, dtypes as dtypes, func_graph as func_graph, function as function, graph_io as graph_io, ops as ops, tensor_util as tensor_util
from tensorflow.python.lib.io import file_io as file_io
from tensorflow.python.ops import array_ops as array_ops, control_flow_ops as control_flow_ops, control_flow_util as control_flow_util, gen_math_ops as gen_math_ops, init_ops as init_ops, linalg_ops as linalg_ops, logging_ops as logging_ops, math_ops as math_ops, nn_impl as nn_impl, state_ops as state_ops, string_ops as string_ops, variable_scope as variable_scope
from tensorflow.python.platform import analytics as analytics, gfile as gfile, remote_utils as remote_utils
from tensorflow.python.summary import summary_iterator as summary_iterator
from tensorflow.python.tpu import tensor_tracer_flags as tensor_tracer_flags, tensor_tracer_report as tensor_tracer_report, tpu as tpu
from tensorflow.python.tpu.ops import tpu_ops as tpu_ops
from tensorflow.python.training import training_util as training_util
from typing import Any

TENSOR_TRACER_SUMMARY_COLLECTION: str

def set_parameters(tensor_tracer_params: Any | None = ...) -> None: ...
def op_priority(op_type): ...
def read_tensor_tracer_event_file(event_file): ...
def trace_tensor(tensor, tracepoint_name: Any | None = ...): ...
def keras_layer_tracepoint(layer, checkpoint_name): ...

class TensorTracer:
    @staticmethod
    def is_enabled(): ...
    @staticmethod
    def check_device_type(device_type) -> None: ...
    @staticmethod
    def check_trace_mode(device_type, trace_mode) -> None: ...
    @staticmethod
    def loop_cond_op(op): ...
    @staticmethod
    def while_loop_op(op): ...
    @staticmethod
    def control_flow_op(op): ...
    @staticmethod
    def unsafe_op(op): ...
    @staticmethod
    def device_mismatch(device_type, op): ...
    @staticmethod
    def unsafe_scalar_trace(op): ...
    @staticmethod
    def reason(op_idx, details): ...
    def __init__(self) -> None: ...
    def report_proto(self): ...
    def report_proto_path(self): ...
    def merge_caches_on_tpu(self, local_tpu_cache_tensor): ...
    def aggregate_global_cache(self, global_tt_summary_cache): ...
    def host_call_deps_and_fn(self): ...
    def get_traced_op_names(self): ...
    def trace_tpu(self, graph, tensor_fetches, op_fetches: Any | None = ..., num_replicas: Any | None = ..., num_replicas_per_host: Any | None = ..., num_hosts: Any | None = ...): ...
    def trace_cpu(self, graph, tensor_fetches, op_fetches: Any | None = ...): ...
