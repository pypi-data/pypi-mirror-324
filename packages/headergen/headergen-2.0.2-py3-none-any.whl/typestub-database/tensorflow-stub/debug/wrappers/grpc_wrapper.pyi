from tensorflow.python.debug.lib import common as common
from tensorflow.python.debug.wrappers import framework as framework
from typing import Any

def publish_traceback(debug_server_urls, graph, feed_dict, fetches, old_graph_version): ...

class GrpcDebugWrapperSession(framework.NonInteractiveDebugWrapperSession):
    def __init__(self, sess, grpc_debug_server_addresses, watch_fn: Any | None = ..., thread_name_filter: Any | None = ..., log_usage: bool = ...) -> None: ...
    def prepare_run_debug_urls(self, fetches, feed_dict): ...

def register_signal_handler() -> None: ...

class TensorBoardDebugWrapperSession(GrpcDebugWrapperSession):
    def __init__(self, sess, grpc_debug_server_addresses, thread_name_filter: Any | None = ..., send_traceback_and_source_code: bool = ..., log_usage: bool = ...): ...
    def run(self, fetches, feed_dict: Any | None = ..., options: Any | None = ..., run_metadata: Any | None = ..., callable_runner: Any | None = ..., callable_runner_args: Any | None = ..., callable_options: Any | None = ...): ...
