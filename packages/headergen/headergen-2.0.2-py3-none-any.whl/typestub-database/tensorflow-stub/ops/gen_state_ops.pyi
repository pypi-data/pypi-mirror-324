from tensorflow.python.util.deprecation import deprecated_endpoints as deprecated_endpoints
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any

def assign(ref, value, validate_shape: bool = ..., use_locking: bool = ..., name: Any | None = ...): ...

Assign: Any

def assign_eager_fallback(ref, value, validate_shape, use_locking, name, ctx) -> None: ...
def assign_add(ref, value, use_locking: bool = ..., name: Any | None = ...): ...

AssignAdd: Any

def assign_add_eager_fallback(ref, value, use_locking, name, ctx) -> None: ...
def assign_sub(ref, value, use_locking: bool = ..., name: Any | None = ...): ...

AssignSub: Any

def assign_sub_eager_fallback(ref, value, use_locking, name, ctx) -> None: ...
def count_up_to(ref, limit, name: Any | None = ...): ...

CountUpTo: Any

def count_up_to_eager_fallback(ref, limit, name, ctx) -> None: ...
def destroy_temporary_variable(ref, var_name, name: Any | None = ...): ...

DestroyTemporaryVariable: Any

def destroy_temporary_variable_eager_fallback(ref, var_name, name, ctx) -> None: ...
def is_variable_initialized(ref, name: Any | None = ...): ...

IsVariableInitialized: Any

def is_variable_initialized_eager_fallback(ref, name, ctx) -> None: ...
def resource_count_up_to(resource, limit, T, name: Any | None = ...): ...

ResourceCountUpTo: Any

def resource_count_up_to_eager_fallback(resource, limit, T, name, ctx): ...
def resource_scatter_nd_add(ref, indices, updates, use_locking: bool = ..., name: Any | None = ...): ...

ResourceScatterNdAdd: Any

def resource_scatter_nd_add_eager_fallback(ref, indices, updates, use_locking, name, ctx): ...
def resource_scatter_nd_max(ref, indices, updates, use_locking: bool = ..., name: Any | None = ...): ...

ResourceScatterNdMax: Any

def resource_scatter_nd_max_eager_fallback(ref, indices, updates, use_locking, name, ctx): ...
def resource_scatter_nd_min(ref, indices, updates, use_locking: bool = ..., name: Any | None = ...): ...

ResourceScatterNdMin: Any

def resource_scatter_nd_min_eager_fallback(ref, indices, updates, use_locking, name, ctx): ...
def resource_scatter_nd_sub(ref, indices, updates, use_locking: bool = ..., name: Any | None = ...): ...

ResourceScatterNdSub: Any

def resource_scatter_nd_sub_eager_fallback(ref, indices, updates, use_locking, name, ctx): ...
def resource_scatter_nd_update(ref, indices, updates, use_locking: bool = ..., name: Any | None = ...): ...

ResourceScatterNdUpdate: Any

def resource_scatter_nd_update_eager_fallback(ref, indices, updates, use_locking, name, ctx): ...
def scatter_add(ref, indices, updates, use_locking: bool = ..., name: Any | None = ...): ...

ScatterAdd: Any

def scatter_add_eager_fallback(ref, indices, updates, use_locking, name, ctx) -> None: ...
def scatter_div(ref, indices, updates, use_locking: bool = ..., name: Any | None = ...): ...

ScatterDiv: Any

def scatter_div_eager_fallback(ref, indices, updates, use_locking, name, ctx) -> None: ...
def scatter_max(ref, indices, updates, use_locking: bool = ..., name: Any | None = ...): ...

ScatterMax: Any

def scatter_max_eager_fallback(ref, indices, updates, use_locking, name, ctx) -> None: ...
def scatter_min(ref, indices, updates, use_locking: bool = ..., name: Any | None = ...): ...

ScatterMin: Any

def scatter_min_eager_fallback(ref, indices, updates, use_locking, name, ctx) -> None: ...
def scatter_mul(ref, indices, updates, use_locking: bool = ..., name: Any | None = ...): ...

ScatterMul: Any

def scatter_mul_eager_fallback(ref, indices, updates, use_locking, name, ctx) -> None: ...
def scatter_nd_add(ref, indices, updates, use_locking: bool = ..., name: Any | None = ...): ...

ScatterNdAdd: Any

def scatter_nd_add_eager_fallback(ref, indices, updates, use_locking, name, ctx) -> None: ...
def scatter_nd_max(ref, indices, updates, use_locking: bool = ..., name: Any | None = ...): ...

ScatterNdMax: Any

def scatter_nd_max_eager_fallback(ref, indices, updates, use_locking, name, ctx) -> None: ...
def scatter_nd_min(ref, indices, updates, use_locking: bool = ..., name: Any | None = ...): ...

ScatterNdMin: Any

def scatter_nd_min_eager_fallback(ref, indices, updates, use_locking, name, ctx) -> None: ...
def scatter_nd_sub(ref, indices, updates, use_locking: bool = ..., name: Any | None = ...): ...

ScatterNdSub: Any

def scatter_nd_sub_eager_fallback(ref, indices, updates, use_locking, name, ctx) -> None: ...
def scatter_nd_update(ref, indices, updates, use_locking: bool = ..., name: Any | None = ...): ...

ScatterNdUpdate: Any

def scatter_nd_update_eager_fallback(ref, indices, updates, use_locking, name, ctx) -> None: ...
def scatter_sub(ref, indices, updates, use_locking: bool = ..., name: Any | None = ...): ...

ScatterSub: Any

def scatter_sub_eager_fallback(ref, indices, updates, use_locking, name, ctx) -> None: ...
def scatter_update(ref, indices, updates, use_locking: bool = ..., name: Any | None = ...): ...

ScatterUpdate: Any

def scatter_update_eager_fallback(ref, indices, updates, use_locking, name, ctx) -> None: ...
def temporary_variable(shape, dtype, var_name: str = ..., name: Any | None = ...): ...

TemporaryVariable: Any

def temporary_variable_eager_fallback(shape, dtype, var_name, name, ctx) -> None: ...
def variable(shape, dtype, container: str = ..., shared_name: str = ..., name: Any | None = ...): ...

Variable: Any

def variable_eager_fallback(shape, dtype, container, shared_name, name, ctx) -> None: ...
def variable_v2(shape, dtype, container: str = ..., shared_name: str = ..., name: Any | None = ...): ...

VariableV2: Any

def variable_v2_eager_fallback(shape, dtype, container, shared_name, name, ctx) -> None: ...
