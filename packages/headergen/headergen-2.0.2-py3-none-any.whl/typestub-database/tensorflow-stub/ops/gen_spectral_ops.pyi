from tensorflow.python.util.deprecation import deprecated_endpoints as deprecated_endpoints
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any

def batch_fft(input, name: Any | None = ...): ...

BatchFFT: Any

def batch_fft_eager_fallback(input, name, ctx): ...
def batch_fft2d(input, name: Any | None = ...): ...

BatchFFT2D: Any

def batch_fft2d_eager_fallback(input, name, ctx): ...
def batch_fft3d(input, name: Any | None = ...): ...

BatchFFT3D: Any

def batch_fft3d_eager_fallback(input, name, ctx): ...
def batch_ifft(input, name: Any | None = ...): ...

BatchIFFT: Any

def batch_ifft_eager_fallback(input, name, ctx): ...
def batch_ifft2d(input, name: Any | None = ...): ...

BatchIFFT2D: Any

def batch_ifft2d_eager_fallback(input, name, ctx): ...
def batch_ifft3d(input, name: Any | None = ...): ...

BatchIFFT3D: Any

def batch_ifft3d_eager_fallback(input, name, ctx): ...
def fft(input, name: Any | None = ...): ...

FFT: Any

def fft_eager_fallback(input, name, ctx): ...
def fft2d(input, name: Any | None = ...): ...

FFT2D: Any

def fft2d_eager_fallback(input, name, ctx): ...
def fft3d(input, name: Any | None = ...): ...

FFT3D: Any

def fft3d_eager_fallback(input, name, ctx): ...
def ifft(input, name: Any | None = ...): ...

IFFT: Any

def ifft_eager_fallback(input, name, ctx): ...
def ifft2d(input, name: Any | None = ...): ...

IFFT2D: Any

def ifft2d_eager_fallback(input, name, ctx): ...
def ifft3d(input, name: Any | None = ...): ...

IFFT3D: Any

def ifft3d_eager_fallback(input, name, ctx): ...
def irfft(input, fft_length, Treal=..., name: Any | None = ...): ...

IRFFT: Any

def irfft_eager_fallback(input, fft_length, Treal, name, ctx): ...
def irfft2d(input, fft_length, Treal=..., name: Any | None = ...): ...

IRFFT2D: Any

def irfft2d_eager_fallback(input, fft_length, Treal, name, ctx): ...
def irfft3d(input, fft_length, Treal=..., name: Any | None = ...): ...

IRFFT3D: Any

def irfft3d_eager_fallback(input, fft_length, Treal, name, ctx): ...
def rfft(input, fft_length, Tcomplex=..., name: Any | None = ...): ...

RFFT: Any

def rfft_eager_fallback(input, fft_length, Tcomplex, name, ctx): ...
def rfft2d(input, fft_length, Tcomplex=..., name: Any | None = ...): ...

RFFT2D: Any

def rfft2d_eager_fallback(input, fft_length, Tcomplex, name, ctx): ...
def rfft3d(input, fft_length, Tcomplex=..., name: Any | None = ...): ...

RFFT3D: Any

def rfft3d_eager_fallback(input, fft_length, Tcomplex, name, ctx): ...
