from tensorflow.python.eager import backprop as backprop, backprop_util as backprop_util, context as context
from tensorflow.python.framework import composite_tensor as composite_tensor, constant_op as constant_op, dtypes as dtypes, func_graph as func_graph, function as function, ops as ops, tensor_spec as tensor_spec, type_spec as type_spec
from tensorflow.python.ops import gen_script_ops as gen_script_ops, resource_variable_ops as resource_variable_ops
from tensorflow.python.util import compat as compat, deprecation as deprecation, dispatch as dispatch, lazy_loader as lazy_loader, nest as nest, tf_inspect as tf_inspect
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any

autograph: Any
tape_cache: Any

class EagerFunc:
    def __init__(self, func, Tout, is_grad_func) -> None: ...
    def set_support_graph_mode_gradient(self) -> None: ...
    def __call__(self, device, token, args): ...

class FuncRegistry:
    def __init__(self) -> None: ...
    def insert(self, func): ...
    def remove(self, token) -> None: ...
    def get(self, token, default: Any | None = ...): ...
    def __call__(self, token, device, args): ...
    def size(self): ...

def eager_py_func(func, inp, Tout, name: Any | None = ...): ...
def py_func_common(func, inp, Tout, stateful: bool = ..., name: Any | None = ...): ...
def py_func(func, inp, Tout, stateful: bool = ..., name: Any | None = ...): ...
def numpy_function(func, inp, Tout, name: Any | None = ...): ...
