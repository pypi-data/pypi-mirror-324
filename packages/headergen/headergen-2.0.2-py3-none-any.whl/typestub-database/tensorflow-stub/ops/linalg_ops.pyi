from tensorflow.python.ops.gen_linalg_ops import *
from tensorflow.python.framework import dtypes as dtypes, ops as ops
from tensorflow.python.ops import array_ops as array_ops, control_flow_ops as control_flow_ops, gen_array_ops as gen_array_ops, gen_linalg_ops as gen_linalg_ops, linalg_ops_impl as linalg_ops_impl, map_fn as map_fn, math_ops as math_ops
from tensorflow.python.util import deprecation as deprecation, dispatch as dispatch
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any

def matrix_triangular_solve(matrix, rhs, lower: bool = ..., adjoint: bool = ..., name: Any | None = ...): ...
def cholesky_solve(chol, rhs, name: Any | None = ...): ...
def eye(num_rows, num_columns: Any | None = ..., batch_shape: Any | None = ..., dtype=..., name: Any | None = ...): ...
def matrix_solve_ls(matrix, rhs, l2_regularizer: float = ..., fast: bool = ..., name: Any | None = ...): ...
def eig(tensor, name: Any | None = ...): ...
def eigvals(tensor, name: Any | None = ...): ...
def self_adjoint_eig(tensor, name: Any | None = ...): ...
def self_adjoint_eigvals(tensor, name: Any | None = ...): ...
def svd(tensor, full_matrices: bool = ..., compute_uv: bool = ..., name: Any | None = ...): ...
def norm_v2(tensor, ord: str = ..., axis: Any | None = ..., keepdims: Any | None = ..., name: Any | None = ...): ...
def norm(tensor, ord: str = ..., axis: Any | None = ..., keepdims: Any | None = ..., name: Any | None = ..., keep_dims: Any | None = ...): ...
