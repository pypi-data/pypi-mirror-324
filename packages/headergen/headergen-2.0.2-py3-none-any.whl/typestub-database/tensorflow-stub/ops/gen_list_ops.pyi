from tensorflow.python.util.deprecation import deprecated_endpoints as deprecated_endpoints
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any, NamedTuple

def empty_tensor_list(element_shape, max_num_elements, element_dtype, name: Any | None = ...): ...

EmptyTensorList: Any

def empty_tensor_list_eager_fallback(element_shape, max_num_elements, element_dtype, name, ctx): ...

class _TensorListConcatOutput(NamedTuple):
    tensor: Any
    lengths: Any

def tensor_list_concat(input_handle, element_dtype, element_shape: Any | None = ..., name: Any | None = ...): ...

TensorListConcat: Any

def tensor_list_concat_eager_fallback(input_handle, element_dtype, element_shape, name, ctx): ...
def tensor_list_concat_lists(input_a, input_b, element_dtype, name: Any | None = ...): ...

TensorListConcatLists: Any

def tensor_list_concat_lists_eager_fallback(input_a, input_b, element_dtype, name, ctx): ...

class _TensorListConcatV2Output(NamedTuple):
    tensor: Any
    lengths: Any

def tensor_list_concat_v2(input_handle, element_shape, leading_dims, element_dtype, name: Any | None = ...): ...

TensorListConcatV2: Any

def tensor_list_concat_v2_eager_fallback(input_handle, element_shape, leading_dims, element_dtype, name, ctx): ...
def tensor_list_element_shape(input_handle, shape_type, name: Any | None = ...): ...

TensorListElementShape: Any

def tensor_list_element_shape_eager_fallback(input_handle, shape_type, name, ctx): ...
def tensor_list_from_tensor(tensor, element_shape, name: Any | None = ...): ...

TensorListFromTensor: Any

def tensor_list_from_tensor_eager_fallback(tensor, element_shape, name, ctx): ...
def tensor_list_gather(input_handle, indices, element_shape, element_dtype, name: Any | None = ...): ...

TensorListGather: Any

def tensor_list_gather_eager_fallback(input_handle, indices, element_shape, element_dtype, name, ctx): ...
def tensor_list_get_item(input_handle, index, element_shape, element_dtype, name: Any | None = ...): ...

TensorListGetItem: Any

def tensor_list_get_item_eager_fallback(input_handle, index, element_shape, element_dtype, name, ctx): ...
def tensor_list_length(input_handle, name: Any | None = ...): ...

TensorListLength: Any

def tensor_list_length_eager_fallback(input_handle, name, ctx): ...

class _TensorListPopBackOutput(NamedTuple):
    output_handle: Any
    tensor: Any

def tensor_list_pop_back(input_handle, element_shape, element_dtype, name: Any | None = ...): ...

TensorListPopBack: Any

def tensor_list_pop_back_eager_fallback(input_handle, element_shape, element_dtype, name, ctx): ...
def tensor_list_push_back(input_handle, tensor, name: Any | None = ...): ...

TensorListPushBack: Any

def tensor_list_push_back_eager_fallback(input_handle, tensor, name, ctx): ...
def tensor_list_push_back_batch(input_handles, tensor, name: Any | None = ...): ...

TensorListPushBackBatch: Any

def tensor_list_push_back_batch_eager_fallback(input_handles, tensor, name, ctx): ...
def tensor_list_reserve(element_shape, num_elements, element_dtype, name: Any | None = ...): ...

TensorListReserve: Any

def tensor_list_reserve_eager_fallback(element_shape, num_elements, element_dtype, name, ctx): ...
def tensor_list_resize(input_handle, size, name: Any | None = ...): ...

TensorListResize: Any

def tensor_list_resize_eager_fallback(input_handle, size, name, ctx): ...
def tensor_list_scatter(tensor, indices, element_shape, name: Any | None = ...): ...

TensorListScatter: Any

def tensor_list_scatter_eager_fallback(tensor, indices, element_shape, name, ctx): ...
def tensor_list_scatter_into_existing_list(input_handle, tensor, indices, name: Any | None = ...): ...

TensorListScatterIntoExistingList: Any

def tensor_list_scatter_into_existing_list_eager_fallback(input_handle, tensor, indices, name, ctx): ...
def tensor_list_scatter_v2(tensor, indices, element_shape, num_elements, name: Any | None = ...): ...

TensorListScatterV2: Any

def tensor_list_scatter_v2_eager_fallback(tensor, indices, element_shape, num_elements, name, ctx): ...
def tensor_list_set_item(input_handle, index, item, name: Any | None = ...): ...

TensorListSetItem: Any

def tensor_list_set_item_eager_fallback(input_handle, index, item, name, ctx): ...
def tensor_list_split(tensor, element_shape, lengths, name: Any | None = ...): ...

TensorListSplit: Any

def tensor_list_split_eager_fallback(tensor, element_shape, lengths, name, ctx): ...
def tensor_list_stack(input_handle, element_shape, element_dtype, num_elements: int = ..., name: Any | None = ...): ...

TensorListStack: Any

def tensor_list_stack_eager_fallback(input_handle, element_shape, element_dtype, num_elements, name, ctx): ...
