from tensorflow.python.util.deprecation import deprecated_endpoints as deprecated_endpoints
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any, NamedTuple

def anonymous_hash_table(key_dtype, value_dtype, name: Any | None = ...): ...

AnonymousHashTable: Any

def anonymous_hash_table_eager_fallback(key_dtype, value_dtype, name, ctx): ...
def hash_table(key_dtype, value_dtype, container: str = ..., shared_name: str = ..., use_node_name_sharing: bool = ..., name: Any | None = ...): ...

HashTable: Any

def hash_table_eager_fallback(key_dtype, value_dtype, container, shared_name, use_node_name_sharing, name, ctx) -> None: ...
def hash_table_v2(key_dtype, value_dtype, container: str = ..., shared_name: str = ..., use_node_name_sharing: bool = ..., name: Any | None = ...): ...

HashTableV2: Any

def hash_table_v2_eager_fallback(key_dtype, value_dtype, container, shared_name, use_node_name_sharing, name, ctx): ...
def initialize_table(table_handle, keys, values, name: Any | None = ...): ...

InitializeTable: Any

def initialize_table_eager_fallback(table_handle, keys, values, name, ctx) -> None: ...
def initialize_table_from_text_file(table_handle, filename, key_index, value_index, vocab_size: int = ..., delimiter: str = ..., offset: int = ..., name: Any | None = ...): ...

InitializeTableFromTextFile: Any

def initialize_table_from_text_file_eager_fallback(table_handle, filename, key_index, value_index, vocab_size, delimiter, offset, name, ctx) -> None: ...
def initialize_table_from_text_file_v2(table_handle, filename, key_index, value_index, vocab_size: int = ..., delimiter: str = ..., offset: int = ..., name: Any | None = ...): ...

InitializeTableFromTextFileV2: Any

def initialize_table_from_text_file_v2_eager_fallback(table_handle, filename, key_index, value_index, vocab_size, delimiter, offset, name, ctx): ...
def initialize_table_v2(table_handle, keys, values, name: Any | None = ...): ...

InitializeTableV2: Any

def initialize_table_v2_eager_fallback(table_handle, keys, values, name, ctx): ...

class _LookupTableExportOutput(NamedTuple):
    keys: Any
    values: Any

def lookup_table_export(table_handle, Tkeys, Tvalues, name: Any | None = ...): ...

LookupTableExport: Any

def lookup_table_export_eager_fallback(table_handle, Tkeys, Tvalues, name, ctx) -> None: ...

class _LookupTableExportV2Output(NamedTuple):
    keys: Any
    values: Any

def lookup_table_export_v2(table_handle, Tkeys, Tvalues, name: Any | None = ...): ...

LookupTableExportV2: Any

def lookup_table_export_v2_eager_fallback(table_handle, Tkeys, Tvalues, name, ctx): ...
def lookup_table_find(table_handle, keys, default_value, name: Any | None = ...): ...

LookupTableFind: Any

def lookup_table_find_eager_fallback(table_handle, keys, default_value, name, ctx) -> None: ...
def lookup_table_find_v2(table_handle, keys, default_value, name: Any | None = ...): ...

LookupTableFindV2: Any

def lookup_table_find_v2_eager_fallback(table_handle, keys, default_value, name, ctx): ...
def lookup_table_import(table_handle, keys, values, name: Any | None = ...): ...

LookupTableImport: Any

def lookup_table_import_eager_fallback(table_handle, keys, values, name, ctx) -> None: ...
def lookup_table_import_v2(table_handle, keys, values, name: Any | None = ...): ...

LookupTableImportV2: Any

def lookup_table_import_v2_eager_fallback(table_handle, keys, values, name, ctx): ...
def lookup_table_insert(table_handle, keys, values, name: Any | None = ...): ...

LookupTableInsert: Any

def lookup_table_insert_eager_fallback(table_handle, keys, values, name, ctx) -> None: ...
def lookup_table_insert_v2(table_handle, keys, values, name: Any | None = ...): ...

LookupTableInsertV2: Any

def lookup_table_insert_v2_eager_fallback(table_handle, keys, values, name, ctx): ...
def lookup_table_remove_v2(table_handle, keys, name: Any | None = ...): ...

LookupTableRemoveV2: Any

def lookup_table_remove_v2_eager_fallback(table_handle, keys, name, ctx): ...
def lookup_table_size(table_handle, name: Any | None = ...): ...

LookupTableSize: Any

def lookup_table_size_eager_fallback(table_handle, name, ctx) -> None: ...
def lookup_table_size_v2(table_handle, name: Any | None = ...): ...

LookupTableSizeV2: Any

def lookup_table_size_v2_eager_fallback(table_handle, name, ctx): ...
def mutable_dense_hash_table(empty_key, value_dtype, container: str = ..., shared_name: str = ..., use_node_name_sharing: bool = ..., value_shape=..., initial_num_buckets: int = ..., max_load_factor: float = ..., name: Any | None = ...): ...

MutableDenseHashTable: Any

def mutable_dense_hash_table_eager_fallback(empty_key, value_dtype, container, shared_name, use_node_name_sharing, value_shape, initial_num_buckets, max_load_factor, name, ctx) -> None: ...
def mutable_dense_hash_table_v2(empty_key, deleted_key, value_dtype, container: str = ..., shared_name: str = ..., use_node_name_sharing: bool = ..., value_shape=..., initial_num_buckets: int = ..., max_load_factor: float = ..., name: Any | None = ...): ...

MutableDenseHashTableV2: Any

def mutable_dense_hash_table_v2_eager_fallback(empty_key, deleted_key, value_dtype, container, shared_name, use_node_name_sharing, value_shape, initial_num_buckets, max_load_factor, name, ctx): ...
def mutable_hash_table(key_dtype, value_dtype, container: str = ..., shared_name: str = ..., use_node_name_sharing: bool = ..., name: Any | None = ...): ...

MutableHashTable: Any

def mutable_hash_table_eager_fallback(key_dtype, value_dtype, container, shared_name, use_node_name_sharing, name, ctx) -> None: ...
def mutable_hash_table_of_tensors(key_dtype, value_dtype, container: str = ..., shared_name: str = ..., use_node_name_sharing: bool = ..., value_shape=..., name: Any | None = ...): ...

MutableHashTableOfTensors: Any

def mutable_hash_table_of_tensors_eager_fallback(key_dtype, value_dtype, container, shared_name, use_node_name_sharing, value_shape, name, ctx) -> None: ...
def mutable_hash_table_of_tensors_v2(key_dtype, value_dtype, container: str = ..., shared_name: str = ..., use_node_name_sharing: bool = ..., value_shape=..., name: Any | None = ...): ...

MutableHashTableOfTensorsV2: Any

def mutable_hash_table_of_tensors_v2_eager_fallback(key_dtype, value_dtype, container, shared_name, use_node_name_sharing, value_shape, name, ctx): ...
def mutable_hash_table_v2(key_dtype, value_dtype, container: str = ..., shared_name: str = ..., use_node_name_sharing: bool = ..., name: Any | None = ...): ...

MutableHashTableV2: Any

def mutable_hash_table_v2_eager_fallback(key_dtype, value_dtype, container, shared_name, use_node_name_sharing, name, ctx): ...
