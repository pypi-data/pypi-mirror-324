from tensorflow.python.framework import constant_op as constant_op, dtypes as dtypes, ops as ops
from tensorflow.python.ops import array_ops as array_ops, math_ops as math_ops, random_ops as random_ops
from tensorflow.python.ops.ragged import ragged_tensor as ragged_tensor
from tensorflow.python.ops.ragged.row_partition import RowPartition as RowPartition
from tensorflow.python.ops.structured.structured_tensor import StructuredTensor as StructuredTensor
from tensorflow.python.util import deprecation as deprecation, dispatch as dispatch
from typing import Any

def expand_dims(input, axis: Any | None = ..., name: Any | None = ..., dim: Any | None = ...): ...
def expand_dims_v2(input, axis, name: Any | None = ...): ...
def gather(params, indices, validate_indices: Any | None = ..., name: Any | None = ..., axis: Any | None = ..., batch_dims: int = ...): ...
def concat(values, axis, name: str = ...): ...
def random_shuffle(value, seed: Any | None = ..., name: Any | None = ...): ...
def size_v2(input, out_type=..., name: Any | None = ...): ...
def size(input, name: Any | None = ..., out_type=...): ...
def zeros_like(tensor, dtype: Any | None = ..., name: Any | None = ..., optimize: bool = ...): ...
def zeros_like_v2(input, dtype: Any | None = ..., name: Any | None = ...): ...
def ones_like(tensor, dtype: Any | None = ..., name: Any | None = ..., optimize: bool = ...): ...
def ones_like_v2(input, dtype: Any | None = ..., name: Any | None = ...): ...
def rank(input, name: Any | None = ...): ...
def empty_st_op_like_zeros(leaf_op): ...
