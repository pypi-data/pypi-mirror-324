from tensorflow.python.eager import backprop as backprop, context as context
from tensorflow.python.framework import dtypes as dtypes, ops as ops
from tensorflow.python.ops import array_ops as array_ops, gen_array_ops as gen_array_ops, handle_data_util as handle_data_util, math_ops as math_ops, op_selector as op_selector, resource_variable_ops as resource_variable_ops, variable_scope as variable_scope
from tensorflow.python.ops.unconnected_gradients import UnconnectedGradients as UnconnectedGradients
from tensorflow.python.util import nest as nest, tf_decorator as tf_decorator, tf_inspect as tf_inspect
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any

VAR_OP_TYPES: Any

def custom_gradient(f: Any | None = ...): ...

class Bind:
    @classmethod
    def decorator(cls, d): ...
    def __init__(self, f, d) -> None: ...
    def __get__(self, instance, owner): ...
    def __call__(self, *a, **k): ...

def get_variable_by_name(var_name): ...
def generate_name(): ...
def recompute_grad(f): ...
def grad_pass_through(f): ...
