from tensorflow.python.util import tf_inspect as tf_inspect
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any

class TestCombination:
    def should_execute_combination(self, kwargs): ...
    def parameter_modifiers(self): ...
    def context_managers(self, kwargs): ...

class ParameterModifier:
    DO_NOT_PASS_TO_THE_TEST: Any
    def __init__(self, parameter_name: Any | None = ...) -> None: ...
    def modified_arguments(self, kwargs, requested_parameters): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def __hash__(self): ...

class OptionalParameter(ParameterModifier):
    def modified_arguments(self, kwargs, requested_parameters): ...

def generate(combinations, test_combinations=...): ...
def combine(**kwargs): ...
def times(*combined): ...

class NamedObject:
    def __init__(self, name, obj) -> None: ...
    def __getattr__(self, name): ...
    def __call__(self, *args, **kwargs): ...
    def __iter__(self): ...
