from tensorflow.python import pywrap_tfe as pywrap_tfe
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any

class DeviceSpecV2:
    def __init__(self, job: Any | None = ..., replica: Any | None = ..., task: Any | None = ..., device_type: Any | None = ..., device_index: Any | None = ...) -> None: ...
    def to_string(self): ...
    @classmethod
    def from_string(cls, spec): ...
    def parse_from_string(self, spec): ...
    def make_merged_spec(self, dev): ...
    def replace(self, **kwargs): ...
    @property
    def job(self): ...
    @property
    def replica(self): ...
    @property
    def task(self): ...
    @property
    def device_type(self): ...
    @property
    def device_index(self): ...
    def __eq__(self, other): ...
    def __hash__(self): ...

class DeviceSpecV1(DeviceSpecV2):
    __doc__: Any
    def job(self, job) -> None: ...
    def replica(self, replica) -> None: ...
    def task(self, task) -> None: ...
    def device_type(self, device_type) -> None: ...
    def device_index(self, device_index) -> None: ...
    def __hash__(self): ...
    def to_string(self): ...
    def parse_from_string(self, spec): ...
    def merge_from(self, dev) -> None: ...
