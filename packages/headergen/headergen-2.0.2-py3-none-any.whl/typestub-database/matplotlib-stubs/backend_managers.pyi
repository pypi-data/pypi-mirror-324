from matplotlib import cbook as cbook, widgets as widgets
from typing import Any

class ToolEvent:
    name: Any
    sender: Any
    tool: Any
    data: Any
    def __init__(self, name, sender, tool, data: Any | None = ...) -> None: ...

class ToolTriggerEvent(ToolEvent):
    canvasevent: Any
    def __init__(self, name, sender, tool, canvasevent: Any | None = ..., data: Any | None = ...) -> None: ...

class ToolManagerMessageEvent:
    name: Any
    sender: Any
    message: Any
    def __init__(self, name, sender, message) -> None: ...

class ToolManager:
    keypresslock: Any
    messagelock: Any
    def __init__(self, figure: Any | None = ...) -> None: ...
    @property
    def canvas(self): ...
    @property
    def figure(self): ...
    @figure.setter
    def figure(self, figure) -> None: ...
    def set_figure(self, figure, update_tools: bool = ...) -> None: ...
    def toolmanager_connect(self, s, func): ...
    def toolmanager_disconnect(self, cid): ...
    def message_event(self, message, sender: Any | None = ...) -> None: ...
    @property
    def active_toggle(self): ...
    def get_tool_keymap(self, name): ...
    def update_keymap(self, name, key) -> None: ...
    def remove_tool(self, name) -> None: ...
    def add_tool(self, name, tool, *args, **kwargs): ...
    def trigger_tool(self, name, sender: Any | None = ..., canvasevent: Any | None = ..., data: Any | None = ...) -> None: ...
    @property
    def tools(self): ...
    def get_tool(self, name, warn: bool = ...): ...
