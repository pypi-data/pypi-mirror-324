from matplotlib import is_interactive as is_interactive
from matplotlib._pylab_helpers import Gcf as Gcf
from matplotlib.backend_bases import NavigationToolbar2 as NavigationToolbar2, _Backend
from matplotlib.backends.backend_webagg_core import FigureCanvasWebAggCore as FigureCanvasWebAggCore, FigureManagerWebAgg as FigureManagerWebAgg, NavigationToolbar2WebAgg as NavigationToolbar2WebAgg, TimerAsyncio as TimerAsyncio, TimerTornado as TimerTornado
from typing import Any

def connection_info(): ...

class NavigationIPy(NavigationToolbar2WebAgg):
    toolitems: Any

class FigureManagerNbAgg(FigureManagerWebAgg):
    ToolbarCls: Any
    def __init__(self, canvas, num) -> None: ...
    def display_js(self) -> None: ...
    def show(self) -> None: ...
    def reshow(self) -> None: ...
    @property
    def connected(self): ...
    @classmethod
    def get_javascript(cls, stream: Any | None = ...): ...
    def destroy(self) -> None: ...
    web_sockets: Any
    def clearup_closed(self) -> None: ...
    def remove_comm(self, comm_id) -> None: ...

class FigureCanvasNbAgg(FigureCanvasWebAggCore): ...

class CommSocket:
    supports_binary: Any
    manager: Any
    uuid: Any
    comm: Any
    def __init__(self, manager) -> None: ...
    def is_open(self): ...
    def on_close(self) -> None: ...
    def send_json(self, content) -> None: ...
    def send_binary(self, blob) -> None: ...
    def on_message(self, message) -> None: ...

class _BackendNbAgg(_Backend):
    FigureCanvas: Any
    FigureManager: Any
    @staticmethod
    def new_figure_manager_given_figure(num, figure): ...
    @staticmethod
    def show(block: Any | None = ...) -> None: ...
