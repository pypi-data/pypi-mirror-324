from sklearn.base import clone as clone
from sklearn.gaussian_process.kernels import CompoundKernel as CompoundKernel, ConstantKernel as ConstantKernel, DotProduct as DotProduct, ExpSineSquared as ExpSineSquared, Exponentiation as Exponentiation, KernelOperator as KernelOperator, Matern as Matern, PairwiseKernel as PairwiseKernel, RBF as RBF, RationalQuadratic as RationalQuadratic, WhiteKernel as WhiteKernel
from sklearn.metrics.pairwise import PAIRWISE_KERNEL_FUNCTIONS as PAIRWISE_KERNEL_FUNCTIONS, euclidean_distances as euclidean_distances, pairwise_kernels as pairwise_kernels
from sklearn.utils._testing import assert_allclose as assert_allclose, assert_almost_equal as assert_almost_equal, assert_array_almost_equal as assert_array_almost_equal, assert_array_equal as assert_array_equal, fails_if_pypy as fails_if_pypy
from typing import Any

X: Any
Y: Any
kernel_rbf_plus_white: Any
kernels: Any

def test_kernel_gradient(kernel): ...
def test_kernel_theta(kernel): ...
def test_auto_vs_cross(kernel) -> None: ...
def test_kernel_diag(kernel) -> None: ...
def test_kernel_operator_commutative() -> None: ...
def test_kernel_anisotropic() -> None: ...
def test_kernel_stationary(kernel) -> None: ...
def test_kernel_input_type(kernel) -> None: ...
def test_compound_kernel_input_type() -> None: ...
def check_hyperparameters_equal(kernel1, kernel2) -> None: ...
def test_kernel_clone(kernel) -> None: ...
def test_kernel_clone_after_set_params(kernel) -> None: ...
def test_matern_kernel() -> None: ...
def test_kernel_versus_pairwise(kernel) -> None: ...
def test_set_get_params(kernel) -> None: ...
def test_repr_kernels(kernel) -> None: ...
def test_rational_quadratic_kernel() -> None: ...
