from sklearn.datasets import make_sparse_coded_signal as make_sparse_coded_signal
from sklearn.linear_model import LinearRegression as LinearRegression, OrthogonalMatchingPursuit as OrthogonalMatchingPursuit, OrthogonalMatchingPursuitCV as OrthogonalMatchingPursuitCV, orthogonal_mp as orthogonal_mp, orthogonal_mp_gram as orthogonal_mp_gram
from sklearn.utils import check_random_state as check_random_state
from sklearn.utils._testing import assert_array_almost_equal as assert_array_almost_equal, assert_array_equal as assert_array_equal, ignore_warnings as ignore_warnings
from typing import Any

n_samples: Any
n_features: Any
n_nonzero_coefs: Any
n_targets: Any
y: Any
X: Any
gamma: Any
G: Any
Xy: Any

def test_assure_warning_when_normalize(OmpModel, normalize, n_warnings) -> None: ...
def test_correct_shapes() -> None: ...
def test_correct_shapes_gram() -> None: ...
def test_n_nonzero_coefs() -> None: ...
def test_tol() -> None: ...
def test_with_without_gram() -> None: ...
def test_with_without_gram_tol() -> None: ...
def test_unreachable_accuracy() -> None: ...
def test_bad_input(positional_params, keyword_params) -> None: ...
def test_perfect_signal_recovery() -> None: ...
def test_orthogonal_mp_gram_readonly() -> None: ...
def test_estimator() -> None: ...
def test_identical_regressors() -> None: ...
def test_swapped_regressors() -> None: ...
def test_no_atoms() -> None: ...
def test_omp_path() -> None: ...
def test_omp_return_path_prop_with_gram() -> None: ...
def test_omp_cv() -> None: ...
def test_omp_reaches_least_squares() -> None: ...
