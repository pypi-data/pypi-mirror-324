from sklearn.datasets import make_regression as make_regression
from sklearn.exceptions import ConvergenceWarning as ConvergenceWarning
from sklearn.linear_model import HuberRegressor as HuberRegressor, QuantileRegressor as QuantileRegressor
from sklearn.metrics import mean_pinball_loss as mean_pinball_loss
from sklearn.utils._testing import assert_allclose as assert_allclose
from sklearn.utils.fixes import parse_version as parse_version, sp_version as sp_version

def X_y_data(): ...
def test_init_parameters_validation(X_y_data, params, err_msg) -> None: ...
def test_too_new_solver_methods_raise_error(X_y_data, solver) -> None: ...
def test_quantile_toy_example(quantile, alpha, intercept, coef) -> None: ...
def test_quantile_equals_huber_for_low_epsilon(fit_intercept) -> None: ...
def test_quantile_estimates_calibration(q) -> None: ...
def test_quantile_sample_weight() -> None: ...
def test_asymmetric_error(quantile): ...
def test_equivariance(quantile) -> None: ...
def test_linprog_failure() -> None: ...
