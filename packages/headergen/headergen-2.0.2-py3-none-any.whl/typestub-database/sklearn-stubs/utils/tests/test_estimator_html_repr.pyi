from sklearn import config_context as config_context
from sklearn.cluster import AgglomerativeClustering as AgglomerativeClustering, Birch as Birch
from sklearn.compose import ColumnTransformer as ColumnTransformer
from sklearn.decomposition import PCA as PCA, TruncatedSVD as TruncatedSVD
from sklearn.ensemble import StackingClassifier as StackingClassifier, StackingRegressor as StackingRegressor, VotingClassifier as VotingClassifier
from sklearn.feature_selection import SelectPercentile as SelectPercentile
from sklearn.gaussian_process import GaussianProcessRegressor as GaussianProcessRegressor
from sklearn.gaussian_process.kernels import RationalQuadratic as RationalQuadratic
from sklearn.impute import SimpleImputer as SimpleImputer
from sklearn.linear_model import LogisticRegression as LogisticRegression
from sklearn.multiclass import OneVsOneClassifier as OneVsOneClassifier
from sklearn.neural_network import MLPClassifier as MLPClassifier
from sklearn.pipeline import FeatureUnion as FeatureUnion, Pipeline as Pipeline
from sklearn.preprocessing import OneHotEncoder as OneHotEncoder, StandardScaler as StandardScaler
from sklearn.svm import LinearSVC as LinearSVC, LinearSVR as LinearSVR
from sklearn.tree import DecisionTreeClassifier as DecisionTreeClassifier
from sklearn.utils._estimator_html_repr import estimator_html_repr as estimator_html_repr

def test_write_label_html(checked) -> None: ...
def test_get_visual_block_single_str_none(est) -> None: ...
def test_get_visual_block_single_estimator() -> None: ...
def test_get_visual_block_pipeline() -> None: ...
def test_get_visual_block_feature_union() -> None: ...
def test_get_visual_block_voting() -> None: ...
def test_get_visual_block_column_transformer() -> None: ...
def test_estimator_html_repr_pipeline() -> None: ...
def test_stacking_classsifer(final_estimator) -> None: ...
def test_stacking_regressor(final_estimator) -> None: ...
def test_birch_duck_typing_meta() -> None: ...
def test_ovo_classifier_duck_typing_meta() -> None: ...
def test_duck_typing_nested_estimator() -> None: ...
def test_one_estimator_print_change_only(print_changed_only) -> None: ...
def test_fallback_exists() -> None: ...
def test_show_arrow_pipeline() -> None: ...
