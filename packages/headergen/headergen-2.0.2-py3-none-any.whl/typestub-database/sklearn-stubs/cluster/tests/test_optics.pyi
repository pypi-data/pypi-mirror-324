from sklearn.cluster import DBSCAN as DBSCAN, OPTICS as OPTICS
from sklearn.cluster.tests.common import generate_clustered_data as generate_clustered_data
from sklearn.datasets import make_blobs as make_blobs
from sklearn.exceptions import DataConversionWarning as DataConversionWarning
from sklearn.metrics.cluster import contingency_matrix as contingency_matrix
from sklearn.metrics.pairwise import pairwise_distances as pairwise_distances
from sklearn.utils import shuffle as shuffle
from sklearn.utils._testing import assert_allclose as assert_allclose, assert_array_equal as assert_array_equal
from typing import Any

rng: Any
n_points_per_cluster: int
C1: Any
C2: Any
C3: Any
C4: Any
C5: Any
C6: Any
X: Any

def test_extend_downward(r_plot, end) -> None: ...
def test_extend_upward(r_plot, end) -> None: ...
def test_the_extract_xi_labels(ordering, clusters, expected) -> None: ...
def test_extract_xi() -> None: ...
def test_cluster_hierarchy_() -> None: ...
def test_correct_number_of_clusters() -> None: ...
def test_minimum_number_of_sample_check() -> None: ...
def test_bad_extract() -> None: ...
def test_bad_reachability() -> None: ...
def test_nowarn_if_metric_bool_data_bool() -> None: ...
def test_warn_if_metric_bool_data_no_bool() -> None: ...
def test_nowarn_if_metric_no_bool() -> None: ...
def test_close_extract() -> None: ...
def test_dbscan_optics_parity(eps, min_samples) -> None: ...
def test_min_samples_edge_case() -> None: ...
def test_min_cluster_size(min_cluster_size) -> None: ...
def test_min_cluster_size_invalid(min_cluster_size) -> None: ...
def test_min_cluster_size_invalid2() -> None: ...
def test_processing_order() -> None: ...
def test_compare_to_ELKI() -> None: ...
def test_wrong_cluster_method() -> None: ...
def test_extract_dbscan() -> None: ...
def test_precomputed_dists() -> None: ...
