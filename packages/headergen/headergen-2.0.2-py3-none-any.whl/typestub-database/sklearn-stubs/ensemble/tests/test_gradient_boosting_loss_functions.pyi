from sklearn.ensemble._gb_losses import BinomialDeviance as BinomialDeviance, ExponentialLoss as ExponentialLoss, HuberLossFunction as HuberLossFunction, LOSS_FUNCTIONS as LOSS_FUNCTIONS, LeastAbsoluteError as LeastAbsoluteError, LeastSquaresError as LeastSquaresError, MultinomialDeviance as MultinomialDeviance, QuantileLossFunction as QuantileLossFunction, RegressionLossFunction as RegressionLossFunction
from sklearn.metrics import mean_pinball_loss as mean_pinball_loss
from sklearn.utils import check_random_state as check_random_state

def test_binomial_deviance(): ...
def test_sample_weight_smoke() -> None: ...
def test_sample_weight_init_estimators() -> None: ...
def test_quantile_loss_function() -> None: ...
def test_sample_weight_deviance() -> None: ...
def test_multinomial_deviance(n_classes, n_samples) -> None: ...
def test_mdl_computation_weighted() -> None: ...
def test_mdl_exception(n) -> None: ...
def test_init_raw_predictions_shapes() -> None: ...
def test_init_raw_predictions_values() -> None: ...
def test_lad_equals_quantiles(seed, alpha) -> None: ...
def test_exponential_loss() -> None: ...
