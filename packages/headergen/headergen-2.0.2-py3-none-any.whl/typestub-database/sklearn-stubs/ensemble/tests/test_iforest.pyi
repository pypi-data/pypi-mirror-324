from sklearn.datasets import load_diabetes as load_diabetes, load_iris as load_iris
from sklearn.ensemble import IsolationForest as IsolationForest
from sklearn.metrics import roc_auc_score as roc_auc_score
from sklearn.model_selection import ParameterGrid as ParameterGrid, train_test_split as train_test_split
from sklearn.utils import check_random_state as check_random_state
from sklearn.utils._testing import assert_allclose as assert_allclose, assert_array_almost_equal as assert_array_almost_equal, assert_array_equal as assert_array_equal, ignore_warnings as ignore_warnings
from typing import Any

rng: Any
iris: Any
perm: Any
diabetes: Any

def test_iforest() -> None: ...
def test_iforest_sparse() -> None: ...
def test_iforest_error() -> None: ...
def test_recalculate_max_depth() -> None: ...
def test_max_samples_attribute() -> None: ...
def test_iforest_parallel_regression() -> None: ...
def test_iforest_performance() -> None: ...
def test_iforest_works(contamination) -> None: ...
def test_max_samples_consistency() -> None: ...
def test_iforest_subsampled_features() -> None: ...
def test_iforest_average_path_length() -> None: ...
def test_score_samples() -> None: ...
def test_iforest_warm_start() -> None: ...
def test_iforest_chunks_works1(mocked_get_chunk, contamination, n_predict_calls) -> None: ...
def test_iforest_chunks_works2(mocked_get_chunk, contamination, n_predict_calls) -> None: ...
def test_iforest_with_uniform_data() -> None: ...
def test_n_features_deprecation() -> None: ...
