from sklearn.ensemble._hist_gradient_boosting.common import G_H_DTYPE as G_H_DTYPE, X_BINNED_DTYPE as X_BINNED_DTYPE, X_BITSET_INNER_DTYPE as X_BITSET_INNER_DTYPE, X_DTYPE as X_DTYPE, Y_DTYPE as Y_DTYPE
from sklearn.ensemble._hist_gradient_boosting.grower import TreeGrower as TreeGrower
from sklearn.preprocessing import OneHotEncoder as OneHotEncoder
from typing import Any

n_threads: Any

def test_grow_tree(n_bins, constant_hessian, stopping_param, shrinkage) -> None: ...
def test_predictor_from_grower() -> None: ...
def test_min_samples_leaf(n_samples, min_samples_leaf, n_bins, constant_hessian, noise) -> None: ...
def test_min_samples_leaf_root(n_samples, min_samples_leaf) -> None: ...
def assert_is_stump(grower) -> None: ...
def test_max_depth(max_depth) -> None: ...
def test_input_validation() -> None: ...
def test_init_parameters_validation() -> None: ...
def test_missing_value_predict_only() -> None: ...
def test_split_on_nan_with_infinite_values() -> None: ...
def test_grow_tree_categories() -> None: ...
def test_ohe_equivalence(min_samples_leaf, n_unique_categories, target) -> None: ...
