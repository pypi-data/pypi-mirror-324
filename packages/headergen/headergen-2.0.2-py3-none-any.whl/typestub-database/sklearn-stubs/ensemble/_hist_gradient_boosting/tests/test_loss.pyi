from sklearn.ensemble._hist_gradient_boosting.common import G_H_DTYPE as G_H_DTYPE, Y_DTYPE as Y_DTYPE
from sklearn.utils import assert_all_finite as assert_all_finite
from sklearn.utils._testing import skip_if_32bit as skip_if_32bit
from sklearn.utils.fixes import parse_version as parse_version, sp_version as sp_version
from typing import Any

n_threads: Any

def get_derivatives_helper(loss): ...
def test_derivatives(loss, x0, y_true): ...
def test_numerical_gradients(loss, n_classes, prediction_dim, seed: int = ...) -> None: ...
def test_baseline_least_squares() -> None: ...
def test_baseline_absolute_error() -> None: ...
def test_baseline_poisson() -> None: ...
def test_baseline_binary_crossentropy() -> None: ...
def test_baseline_categorical_crossentropy() -> None: ...
def test_sample_weight_multiplies_gradients(loss, problem, sample_weight) -> None: ...
def test_init_gradient_and_hessians_sample_weight() -> None: ...
