from sklearn.decomposition import PCA as PCA, TruncatedSVD as TruncatedSVD
from sklearn.utils import check_random_state as check_random_state
from sklearn.utils._testing import assert_allclose as assert_allclose, assert_array_less as assert_array_less
from typing import Any

SVD_SOLVERS: Any

def X_sparse(): ...
def test_solvers(X_sparse, solver, kind) -> None: ...
def test_attributes(n_components, X_sparse) -> None: ...
def test_too_many_components(algorithm, X_sparse) -> None: ...
def test_sparse_formats(fmt, X_sparse) -> None: ...
def test_inverse_transform(algo, X_sparse) -> None: ...
def test_integers(X_sparse) -> None: ...
def test_explained_variance(X_sparse, kind, n_components, solver) -> None: ...
def test_explained_variance_components_10_20(X_sparse, kind, solver) -> None: ...
def test_singular_values_consistency(solver) -> None: ...
def test_singular_values_expected(solver) -> None: ...
def test_truncated_svd_eq_pca(X_sparse) -> None: ...
def test_fit_transform(X_sparse, algorithm, tol, kind) -> None: ...
