from sklearn.decomposition import MiniBatchSparsePCA as MiniBatchSparsePCA, PCA as PCA, SparsePCA as SparsePCA
from sklearn.utils import check_random_state as check_random_state
from sklearn.utils._testing import assert_allclose as assert_allclose, assert_array_almost_equal as assert_array_almost_equal, if_safe_multiprocessing_with_blas as if_safe_multiprocessing_with_blas
from typing import Any

def generate_toy_data(n_components, n_samples, image_size, random_state: Any | None = ...): ...
def test_correct_shapes() -> None: ...
def test_fit_transform() -> None: ...
def test_fit_transform_parallel() -> None: ...
def test_transform_nan() -> None: ...
def test_fit_transform_tall() -> None: ...
def test_initialization() -> None: ...
def test_mini_batch_correct_shapes() -> None: ...
def test_mini_batch_fit_transform() -> None: ...
def test_scaling_fit_transform() -> None: ...
def test_pca_vs_spca() -> None: ...
def test_spca_n_components_(SPCA, n_components) -> None: ...
