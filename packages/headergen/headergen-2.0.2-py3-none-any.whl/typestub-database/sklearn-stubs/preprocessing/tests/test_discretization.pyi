from sklearn.preprocessing import KBinsDiscretizer as KBinsDiscretizer, OneHotEncoder as OneHotEncoder
from sklearn.utils._testing import assert_allclose_dense_sparse as assert_allclose_dense_sparse, assert_array_almost_equal as assert_array_almost_equal, assert_array_equal as assert_array_equal
from typing import Any

X: Any

def test_fit_transform(strategy, expected) -> None: ...
def test_valid_n_bins() -> None: ...
def test_invalid_n_bins() -> None: ...
def test_invalid_n_bins_array() -> None: ...
def test_fit_transform_n_bins_array(strategy, expected) -> None: ...
def test_same_min_max(strategy) -> None: ...
def test_transform_1d_behavior() -> None: ...
def test_numeric_stability(i) -> None: ...
def test_invalid_encode_option() -> None: ...
def test_encode_options() -> None: ...
def test_invalid_strategy_option() -> None: ...
def test_nonuniform_strategies(strategy, expected_2bins, expected_3bins, expected_5bins) -> None: ...
def test_inverse_transform(strategy, encode, expected_inv) -> None: ...
def test_transform_outside_fit_range(strategy) -> None: ...
def test_overwrite() -> None: ...
def test_redundant_bins(strategy, expected_bin_edges) -> None: ...
def test_percentile_numeric_stability() -> None: ...
def test_consistent_dtype(in_dtype, out_dtype, encode) -> None: ...
def test_32_equal_64(input_dtype, encode) -> None: ...
