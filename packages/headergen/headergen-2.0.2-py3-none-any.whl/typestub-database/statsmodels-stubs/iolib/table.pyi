from statsmodels.compat.python import lmap as lmap, lrange as lrange
from typing import Any

def csv2st(csvfile, headers: bool = ..., stubs: bool = ..., title: Any | None = ...): ...

class SimpleTable(list):
    title: Any
    output_formats: Any
    def __init__(self, data, headers: Any | None = ..., stubs: Any | None = ..., title: str = ..., datatypes: Any | None = ..., csv_fmt: Any | None = ..., txt_fmt: Any | None = ..., ltx_fmt: Any | None = ..., html_fmt: Any | None = ..., celltype: Any | None = ..., rowtype: Any | None = ..., **fmt_dict) -> None: ...
    def insert(self, idx, row, datatype: Any | None = ...) -> None: ...
    def insert_header_row(self, rownum, headers, dec_below: str = ...) -> None: ...
    def insert_stubs(self, loc, stubs) -> None: ...
    def pad(self, s, width, align): ...
    def get_colwidths(self, output_format, **fmt_dict): ...
    def as_csv(self, **fmt_dict): ...
    def as_text(self, **fmt_dict): ...
    def as_html(self, **fmt_dict): ...
    def as_latex_tabular(self, center: bool = ..., **fmt_dict): ...
    def extend_right(self, table) -> None: ...
    def label_cells(self, func) -> None: ...
    @property
    def data(self): ...

def pad(s, width, align): ...

class Row(list):
    datatype: Any
    table: Any
    special_fmts: Any
    dec_below: Any
    def __init__(self, seq, datatype: str = ..., table: Any | None = ..., celltype: Any | None = ..., dec_below: str = ..., **fmt_dict) -> None: ...
    def add_format(self, output_format, **fmt_dict) -> None: ...
    def insert_stub(self, loc, stub) -> None: ...
    def get_aligns(self, output_format, **fmt_dict): ...
    def as_string(self, output_format: str = ..., **fmt_dict): ...
    @property
    def data(self): ...

class Cell:
    data: Any
    row: Any
    def __init__(self, data: str = ..., datatype: Any | None = ..., row: Any | None = ..., **fmt_dict) -> None: ...
    def alignment(self, output_format, **fmt_dict): ...
    def format(self, width, output_format: str = ..., **fmt_dict): ...
    def get_datatype(self): ...
    def set_datatype(self, val) -> None: ...
    datatype: Any

default_txt_fmt: Any
default_csv_fmt: Any
default_html_fmt: Any
default_latex_fmt: Any
default_fmts: Any
output_format_translations: Any

def get_output_format(output_format): ...
