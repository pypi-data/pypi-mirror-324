from collections.abc import Mapping
from statsmodels.tools.sm_exceptions import ParseError as ParseError
from typing import Any, NamedTuple

def dedent_lines(lines): ...
def strip_blank_lines(line): ...

class Reader:
    def __init__(self, data) -> None: ...
    def __getitem__(self, n): ...
    def reset(self) -> None: ...
    def read(self): ...
    def seek_next_non_empty_line(self) -> None: ...
    def eof(self): ...
    def read_to_condition(self, condition_func): ...
    def read_to_next_empty_line(self): ...
    def read_to_next_unindented_line(self): ...
    def peek(self, n: int = ...): ...
    def is_empty(self): ...

class Parameter(NamedTuple):
    name: Any
    type: Any
    desc: Any

class NumpyDocString(Mapping):
    sections: Any
    def __init__(self, docstring) -> None: ...
    def __getitem__(self, key): ...
    def __setitem__(self, key, val) -> None: ...
    def __iter__(self): ...
    def __len__(self): ...
    empty_description: str

class Docstring:
    def __init__(self, docstring) -> None: ...
    def remove_parameters(self, parameters) -> None: ...
    def insert_parameters(self, after, parameters) -> None: ...
    def replace_block(self, block_name, block) -> None: ...
    def extract_parameters(self, parameters, indent: int = ...): ...

def remove_parameters(docstring, parameters): ...
def indent(text, prefix, predicate: Any | None = ...): ...
