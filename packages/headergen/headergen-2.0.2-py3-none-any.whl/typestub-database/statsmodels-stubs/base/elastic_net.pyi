import statsmodels.base.wrapper as wrap
from statsmodels.base.model import Results as Results
from statsmodels.tools.decorators import cache_readonly as cache_readonly
from typing import Any

def fit_elasticnet(model, method: str = ..., maxiter: int = ..., alpha: float = ..., L1_wt: float = ..., start_params: Any | None = ..., cnvrg_tol: float = ..., zero_tol: float = ..., refit: bool = ..., check_step: bool = ..., loglike_kwds: Any | None = ..., score_kwds: Any | None = ..., hess_kwds: Any | None = ...): ...

class RegularizedResults(Results):
    def __init__(self, model, params) -> None: ...
    def fittedvalues(self): ...

class RegularizedResultsWrapper(wrap.ResultsWrapper): ...
