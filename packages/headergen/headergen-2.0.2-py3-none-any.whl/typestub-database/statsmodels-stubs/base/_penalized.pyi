from ._penalties import NonePenalty as NonePenalty
from statsmodels.tools.numdiff import approx_fprime as approx_fprime, approx_fprime_cs as approx_fprime_cs
from typing import Any

class PenalizedMixin:
    penal: Any
    pen_weight: Any
    def __init__(self, *args, **kwds) -> None: ...
    def loglike(self, params, pen_weight: Any | None = ..., **kwds): ...
    def loglikeobs(self, params, pen_weight: Any | None = ..., **kwds): ...
    def score_numdiff(self, params, pen_weight: Any | None = ..., method: str = ..., **kwds): ...
    def score(self, params, pen_weight: Any | None = ..., **kwds): ...
    def score_obs(self, params, pen_weight: Any | None = ..., **kwds): ...
    def hessian_numdiff(self, params, pen_weight: Any | None = ..., **kwds): ...
    def hessian(self, params, pen_weight: Any | None = ..., **kwds): ...
    def fit(self, method: Any | None = ..., trim: Any | None = ..., **kwds): ...
