from typing import Any

LOWER_BOUND: Any

class HoltWintersArgs:
    def __init__(self, xi, p, bounds, y, m, n, transform: bool = ...) -> None: ...
    @property
    def xi(self): ...
    @xi.setter
    def xi(self, value) -> None: ...
    @property
    def p(self): ...
    @property
    def bounds(self): ...
    @property
    def y(self): ...
    @property
    def lvl(self): ...
    @property
    def b(self): ...
    @property
    def s(self): ...
    @property
    def m(self): ...
    @property
    def n(self): ...
    @property
    def transform(self): ...
    @transform.setter
    def transform(self, value) -> None: ...

def to_restricted(p, sel, bounds): ...
def to_unrestricted(p, sel, bounds): ...
def holt_init(x, hw_args: HoltWintersArgs): ...
def holt__(x, hw_args: HoltWintersArgs): ...
def holt_mul_dam(x, hw_args: HoltWintersArgs): ...
def holt_add_dam(x, hw_args: HoltWintersArgs): ...
def holt_win_init(x, hw_args: HoltWintersArgs): ...
def holt_win__mul(x, hw_args: HoltWintersArgs): ...
def holt_win__add(x, hw_args: HoltWintersArgs): ...
def holt_win_add_mul_dam(x, hw_args: HoltWintersArgs): ...
def holt_win_mul_mul_dam(x, hw_args: HoltWintersArgs): ...
def holt_win_add_add_dam(x, hw_args: HoltWintersArgs): ...
def holt_win_mul_add_dam(x, hw_args: HoltWintersArgs): ...
