from typing import Any

doc_params: str

def pdf_kernel_asym(x, sample, bw, kernel_type, weights: Any | None = ..., batch_size: int = ...): ...
def cdf_kernel_asym(x, sample, bw, kernel_type, weights: Any | None = ..., batch_size: int = ...): ...
def kernel_pdf_beta(x, sample, bw): ...
def kernel_cdf_beta(x, sample, bw): ...
def kernel_pdf_beta2(x, sample, bw): ...
def kernel_cdf_beta2(x, sample, bw): ...
def kernel_pdf_gamma(x, sample, bw): ...
def kernel_cdf_gamma(x, sample, bw): ...
def kernel_pdf_gamma2(x, sample, bw): ...
def kernel_cdf_gamma2(x, sample, bw): ...
def kernel_pdf_invgamma(x, sample, bw): ...
def kernel_cdf_invgamma(x, sample, bw): ...
def kernel_pdf_invgauss(x, sample, bw): ...
def kernel_pdf_invgauss_(x, sample, bw): ...
def kernel_cdf_invgauss(x, sample, bw): ...
def kernel_pdf_recipinvgauss(x, sample, bw): ...
def kernel_pdf_recipinvgauss_(x, sample, bw): ...
def kernel_cdf_recipinvgauss(x, sample, bw): ...
def kernel_pdf_bs(x, sample, bw): ...
def kernel_cdf_bs(x, sample, bw): ...
def kernel_pdf_lognorm(x, sample, bw): ...
def kernel_cdf_lognorm(x, sample, bw): ...
def kernel_pdf_lognorm_(x, sample, bw): ...
def kernel_pdf_weibull(x, sample, bw): ...
def kernel_cdf_weibull(x, sample, bw): ...

kernel_dict_cdf: Any
kernel_dict_pdf: Any
