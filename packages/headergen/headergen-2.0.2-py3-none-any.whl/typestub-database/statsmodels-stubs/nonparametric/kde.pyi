from . import bandwidths as bandwidths
from .kdetools import forrt as forrt, revrt as revrt, silverman_transform as silverman_transform
from .linbin import fast_linbin as fast_linbin
from statsmodels.sandbox.nonparametric import kernels as kernels
from statsmodels.tools.decorators import cache_readonly as cache_readonly
from statsmodels.tools.validation import array_like as array_like, float_like as float_like
from typing import Any

kernel_switch: Any

class KDEUnivariate:
    endog: Any
    def __init__(self, endog) -> None: ...
    bw_method: Any
    density: Any
    support: Any
    bw: Any
    kernel: Any
    def fit(self, kernel: str = ..., bw: str = ..., fft: bool = ..., weights: Any | None = ..., gridsize: Any | None = ..., adjust: int = ..., cut: int = ..., clip=...): ...
    def cdf(self): ...
    def cumhazard(self): ...
    def sf(self): ...
    def entropy(self): ...
    def icdf(self): ...
    def evaluate(self, point): ...

def kdensity(x, kernel: str = ..., bw: str = ..., weights: Any | None = ..., gridsize: Any | None = ..., adjust: int = ..., clip=..., cut: int = ..., retgrid: bool = ...): ...
def kdensityfft(x, kernel: str = ..., bw: str = ..., weights: Any | None = ..., gridsize: Any | None = ..., adjust: int = ..., clip=..., cut: int = ..., retgrid: bool = ...): ...
