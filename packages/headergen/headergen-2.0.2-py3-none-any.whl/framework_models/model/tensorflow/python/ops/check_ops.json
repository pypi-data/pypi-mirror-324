{
    "tensorflow.python.ops.check_ops._maybe_constant_value_string": [],
    "tensorflow.python.ops.check_ops._assert_static": [],
    "tensorflow.python.ops.check_ops._shape_and_dtype_str": [],
    "tensorflow.python.ops.check_ops._unary_assert_doc": [],
    "tensorflow.python.ops.check_ops._binary_assert_doc": [],
    "tensorflow.python.ops.check_ops._make_assert_msg_data": [],
    "tensorflow.python.ops.check_ops._pretty_print": [],
    "tensorflow.python.ops.check_ops._binary_assert": [],
    "tensorflow.python.ops.check_ops.assert_proper_iterable": [],
    "tensorflow.python.ops.check_ops.assert_negative_v2": [],
    "tensorflow.python.ops.check_ops.assert_negative": [],
    "tensorflow.python.ops.check_ops.assert_positive_v2": [],
    "tensorflow.python.ops.check_ops.assert_positive": [],
    "tensorflow.python.ops.check_ops.assert_non_negative_v2": [],
    "tensorflow.python.ops.check_ops.assert_non_negative": [],
    "tensorflow.python.ops.check_ops.assert_non_positive_v2": [],
    "tensorflow.python.ops.check_ops.assert_non_positive": [],
    "tensorflow.python.ops.check_ops.assert_equal_v2": [],
    "tensorflow.python.ops.check_ops.assert_equal": [],
    "tensorflow.python.ops.check_ops.assert_none_equal_v2": [],
    "tensorflow.python.ops.check_ops.assert_none_equal": [],
    "tensorflow.python.ops.check_ops.assert_near_v2": [],
    "tensorflow.python.ops.check_ops.assert_near": [],
    "tensorflow.python.ops.check_ops.assert_less_v2": [],
    "tensorflow.python.ops.check_ops.assert_less": [],
    "tensorflow.python.ops.check_ops.assert_less_equal_v2": [],
    "tensorflow.python.ops.check_ops.assert_less_equal": [],
    "tensorflow.python.ops.check_ops.assert_greater_v2": [],
    "tensorflow.python.ops.check_ops.assert_greater": [],
    "tensorflow.python.ops.check_ops.assert_greater_equal_v2": [],
    "tensorflow.python.ops.check_ops.assert_greater_equal": [],
    "tensorflow.python.ops.check_ops._assert_rank_condition": [],
    "tensorflow.python.ops.check_ops.assert_rank_v2": [],
    "tensorflow.python.ops.check_ops.assert_rank": [],
    "tensorflow.python.ops.check_ops.assert_rank_at_least_v2": [],
    "tensorflow.python.ops.check_ops.assert_rank_at_least": [],
    "tensorflow.python.ops.check_ops._static_rank_in": [],
    "tensorflow.python.ops.check_ops._dynamic_rank_in": [],
    "tensorflow.python.ops.check_ops._assert_ranks_condition": [],
    "tensorflow.python.ops.check_ops.assert_rank_in_v2": [],
    "tensorflow.python.ops.check_ops.assert_rank_in": [],
    "tensorflow.python.ops.check_ops.assert_integer_v2": [],
    "tensorflow.python.ops.check_ops.assert_integer": [],
    "tensorflow.python.ops.check_ops.assert_type_v2": [],
    "tensorflow.python.ops.check_ops.assert_type": [],
    "tensorflow.python.ops.check_ops._dimension_sizes": [],
    "tensorflow.python.ops.check_ops._symbolic_dimension_sizes": [],
    "tensorflow.python.ops.check_ops._has_known_value": [],
    "tensorflow.python.ops.check_ops._is_symbol_for_any_size": [],
    "tensorflow.python.ops.check_ops.assert_shapes_v2": [],
    "tensorflow.python.ops.check_ops.assert_shapes": [],
    "tensorflow.python.ops.check_ops._get_diff_for_monotonic_comparison": [],
    "tensorflow.python.ops.check_ops.is_numeric_tensor": [],
    "tensorflow.python.ops.check_ops.is_non_decreasing": [],
    "tensorflow.python.ops.check_ops.is_strictly_increasing": [],
    "tensorflow.python.ops.check_ops._assert_same_base_type": [],
    "tensorflow.python.ops.check_ops.assert_same_float_dtype": [],
    "tensorflow.python.ops.check_ops.assert_scalar_v2": [],
    "tensorflow.python.ops.check_ops.assert_scalar": [],
    "tensorflow.python.ops.check_ops._message_prefix": [],
    "tensorflow.python.ops.check_ops.ensure_shape": [],
    "tensorflow.python.ops.check_ops._ensure_shape_grad": []
}