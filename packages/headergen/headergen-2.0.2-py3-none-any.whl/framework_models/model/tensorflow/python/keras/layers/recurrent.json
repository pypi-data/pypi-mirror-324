{
    "tensorflow.python.keras.layers.recurrent._generate_dropout_mask": [],
    "tensorflow.python.keras.layers.recurrent._standardize_args": [],
    "tensorflow.python.keras.layers.recurrent._is_multiple_state": [],
    "tensorflow.python.keras.layers.recurrent._generate_zero_filled_state_for_cell": [],
    "tensorflow.python.keras.layers.recurrent._generate_zero_filled_state": [],
    "tensorflow.python.keras.layers.recurrent._caching_device": [],
    "tensorflow.python.keras.layers.recurrent._config_for_enable_caching_device": [],
    "tensorflow.python.keras.layers.recurrent.StackedRNNCells.__init__": [],
    "tensorflow.python.keras.layers.recurrent.StackedRNNCells.state_size": [],
    "tensorflow.python.keras.layers.recurrent.StackedRNNCells.output_size": [],
    "tensorflow.python.keras.layers.recurrent.StackedRNNCells.get_initial_state": [],
    "tensorflow.python.keras.layers.recurrent.StackedRNNCells.call": [],
    "tensorflow.python.keras.layers.recurrent.StackedRNNCells.build": [],
    "tensorflow.python.keras.layers.recurrent.StackedRNNCells.get_config": [],
    "tensorflow.python.keras.layers.recurrent.StackedRNNCells.from_config": [],
    "tensorflow.python.keras.layers.recurrent.RNN.__init__": [],
    "tensorflow.python.keras.layers.recurrent.RNN._use_input_spec_as_call_signature": [],
    "tensorflow.python.keras.layers.recurrent.RNN.states": [],
    "tensorflow.python.keras.layers.recurrent.RNN.compute_output_shape": [],
    "tensorflow.python.keras.layers.recurrent.RNN.compute_mask": [],
    "tensorflow.python.keras.layers.recurrent.RNN.build": [],
    "tensorflow.python.keras.layers.recurrent.RNN._validate_state_spec": [],
    "tensorflow.python.keras.layers.recurrent.RNN.get_initial_state": [],
    "tensorflow.python.keras.layers.recurrent.RNN.__call__": [],
    "tensorflow.python.keras.layers.recurrent.RNN.call": [],
    "tensorflow.python.keras.layers.recurrent.RNN._process_inputs": [],
    "tensorflow.python.keras.layers.recurrent.RNN._validate_args_if_ragged": [],
    "tensorflow.python.keras.layers.recurrent.RNN._maybe_reset_cell_dropout_mask": [],
    "tensorflow.python.keras.layers.recurrent.RNN.reset_states": [],
    "tensorflow.python.keras.layers.recurrent.RNN.get_config": [],
    "tensorflow.python.keras.layers.recurrent.RNN.from_config": [],
    "tensorflow.python.keras.layers.recurrent.RNN._trackable_saved_model_saver": [],
    "tensorflow.python.keras.layers.recurrent.AbstractRNNCell.call": [],
    "tensorflow.python.keras.layers.recurrent.AbstractRNNCell.state_size": [],
    "tensorflow.python.keras.layers.recurrent.AbstractRNNCell.output_size": [],
    "tensorflow.python.keras.layers.recurrent.AbstractRNNCell.get_initial_state": [],
    "tensorflow.python.keras.layers.recurrent.DropoutRNNCellMixin.__init__": [],
    "tensorflow.python.keras.layers.recurrent.DropoutRNNCellMixin._create_non_trackable_mask_cache": [],
    "tensorflow.python.keras.layers.recurrent.DropoutRNNCellMixin.reset_dropout_mask": [],
    "tensorflow.python.keras.layers.recurrent.DropoutRNNCellMixin.reset_recurrent_dropout_mask": [],
    "tensorflow.python.keras.layers.recurrent.DropoutRNNCellMixin._create_dropout_mask": [],
    "tensorflow.python.keras.layers.recurrent.DropoutRNNCellMixin._create_recurrent_dropout_mask": [],
    "tensorflow.python.keras.layers.recurrent.DropoutRNNCellMixin.get_dropout_mask_for_cell": [],
    "tensorflow.python.keras.layers.recurrent.DropoutRNNCellMixin.get_recurrent_dropout_mask_for_cell": [],
    "tensorflow.python.keras.layers.recurrent.DropoutRNNCellMixin.__getstate__": [],
    "tensorflow.python.keras.layers.recurrent.DropoutRNNCellMixin.__setstate__": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNNCell.__init__": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNNCell.build": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNNCell.call": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNNCell.get_initial_state": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNNCell.get_config": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNN.__init__": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNN.call": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNN.units": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNN.activation": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNN.use_bias": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNN.kernel_initializer": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNN.recurrent_initializer": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNN.bias_initializer": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNN.kernel_regularizer": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNN.recurrent_regularizer": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNN.bias_regularizer": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNN.kernel_constraint": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNN.recurrent_constraint": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNN.bias_constraint": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNN.dropout": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNN.recurrent_dropout": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNN.get_config": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNN.from_config": [],
    "tensorflow.python.keras.layers.recurrent.GRUCell.__init__": [],
    "tensorflow.python.keras.layers.recurrent.GRUCell.build": [],
    "tensorflow.python.keras.layers.recurrent.GRUCell.call": [],
    "tensorflow.python.keras.layers.recurrent.GRUCell.get_config": [],
    "tensorflow.python.keras.layers.recurrent.GRUCell.get_initial_state": [],
    "tensorflow.python.keras.layers.recurrent.GRU.__init__": [],
    "tensorflow.python.keras.layers.recurrent.GRU.call": [],
    "tensorflow.python.keras.layers.recurrent.GRU.units": [],
    "tensorflow.python.keras.layers.recurrent.GRU.activation": [],
    "tensorflow.python.keras.layers.recurrent.GRU.recurrent_activation": [],
    "tensorflow.python.keras.layers.recurrent.GRU.use_bias": [],
    "tensorflow.python.keras.layers.recurrent.GRU.kernel_initializer": [],
    "tensorflow.python.keras.layers.recurrent.GRU.recurrent_initializer": [],
    "tensorflow.python.keras.layers.recurrent.GRU.bias_initializer": [],
    "tensorflow.python.keras.layers.recurrent.GRU.kernel_regularizer": [],
    "tensorflow.python.keras.layers.recurrent.GRU.recurrent_regularizer": [],
    "tensorflow.python.keras.layers.recurrent.GRU.bias_regularizer": [],
    "tensorflow.python.keras.layers.recurrent.GRU.kernel_constraint": [],
    "tensorflow.python.keras.layers.recurrent.GRU.recurrent_constraint": [],
    "tensorflow.python.keras.layers.recurrent.GRU.bias_constraint": [],
    "tensorflow.python.keras.layers.recurrent.GRU.dropout": [],
    "tensorflow.python.keras.layers.recurrent.GRU.recurrent_dropout": [],
    "tensorflow.python.keras.layers.recurrent.GRU.implementation": [],
    "tensorflow.python.keras.layers.recurrent.GRU.reset_after": [],
    "tensorflow.python.keras.layers.recurrent.GRU.get_config": [],
    "tensorflow.python.keras.layers.recurrent.GRU.from_config": [],
    "tensorflow.python.keras.layers.recurrent.LSTMCell.__init__": [],
    "tensorflow.python.keras.layers.recurrent.LSTMCell.build": [],
    "tensorflow.python.keras.layers.recurrent.LSTMCell._compute_carry_and_output": [],
    "tensorflow.python.keras.layers.recurrent.LSTMCell._compute_carry_and_output_fused": [],
    "tensorflow.python.keras.layers.recurrent.LSTMCell.call": [],
    "tensorflow.python.keras.layers.recurrent.LSTMCell.get_config": [],
    "tensorflow.python.keras.layers.recurrent.LSTMCell.get_initial_state": [],
    "tensorflow.python.keras.layers.recurrent.PeepholeLSTMCell.__init__": [],
    "tensorflow.python.keras.layers.recurrent.PeepholeLSTMCell.build": [],
    "tensorflow.python.keras.layers.recurrent.PeepholeLSTMCell._compute_carry_and_output": [],
    "tensorflow.python.keras.layers.recurrent.PeepholeLSTMCell._compute_carry_and_output_fused": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.__init__": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.call": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.units": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.activation": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.recurrent_activation": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.use_bias": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.kernel_initializer": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.recurrent_initializer": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.bias_initializer": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.unit_forget_bias": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.kernel_regularizer": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.recurrent_regularizer": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.bias_regularizer": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.kernel_constraint": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.recurrent_constraint": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.bias_constraint": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.dropout": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.recurrent_dropout": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.implementation": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.get_config": [],
    "tensorflow.python.keras.layers.recurrent.LSTM.from_config": [],
    "tensorflow.python.keras.layers.recurrent.StackedRNNCells": [],
    "tensorflow.python.keras.layers.recurrent.RNN": [],
    "tensorflow.python.keras.layers.recurrent.AbstractRNNCell": [],
    "tensorflow.python.keras.layers.recurrent.DropoutRNNCellMixin": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNNCell": [],
    "tensorflow.python.keras.layers.recurrent.SimpleRNN": [],
    "tensorflow.python.keras.layers.recurrent.GRUCell": [],
    "tensorflow.python.keras.layers.recurrent.GRU": [],
    "tensorflow.python.keras.layers.recurrent.LSTMCell": [],
    "tensorflow.python.keras.layers.recurrent.PeepholeLSTMCell": [],
    "tensorflow.python.keras.layers.recurrent.LSTM": []
}