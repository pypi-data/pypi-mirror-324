Metadata-Version: 2.2
Name: argovisHelpers
Version: 0.0.33
Summary: Helper functions to consume and parse information from University of Colorado's Argovis API.
Author: Katie Mills
License: Copyright (c) 2023 Argovis
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://argovis.colorado.edu
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests
Requires-Dist: area
Requires-Dist: shapely==1.8.0
Requires-Dist: geopandas

## Build and release

 - Review metadata in `pyproject.toml`; while determining if code is release worthy, append an rc tag to the semantic version, like `major.minor.patch.rcxx`
 - Build a release (image is built off of `Dockerfile-build-env`):
   ```
   docker container run -v $(pwd):/src argovis/argovis_helpers:build-240118 python -m build
   ```
 - Push to testPypi (notice you'll need a file `pypirc` with appropriate API tokens for the pypi servers): 
   ```
   docker container run -v $(pwd):/src -v $(pwd)/pypirc:/root/.pypirc -it argovis/argovis_helpers:build-240118 twine upload -r testpypi dist/<your new rc>
   ```
 - Test install and try: `python -m pip install -i https://test.pypi.org/simple argovis_helpers`
 - If all is well, rebuild without the rc tag and push to pypi: 
   ```
   docker container run -v $(pwd):/src -v $(pwd)/pypirc:/root/.pypirc -it argovis/argovis_helpers:build-240118 twine upload dist/<your new release>
   ```
 - `git add` your new build artifacts under `/dist`
 - Push to github and mint a release matching the version number in `pyproject.toml`.

  
