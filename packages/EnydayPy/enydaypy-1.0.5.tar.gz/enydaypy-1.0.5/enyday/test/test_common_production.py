# coding: utf-8

"""
    Enyday API

    API for Enyday energy services integration

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from enyday.models.common_production import CommonProduction

class TestCommonProduction(unittest.TestCase):
    """CommonProduction unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CommonProduction:
        """Test CommonProduction
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CommonProduction`
        """
        model = CommonProduction()
        if include_optional:
            return CommonProduction(
                submeters = [
                    enyday.models.submeter_detail.SubmeterDetail(
                        submeter_id = 56, 
                        submeter_name = '', 
                        submeter_direction = 56, 
                        submeter_box_external_id = '', 
                        metering_point_id = '', 
                        power_internal = 1.337, 
                        power_external = 1.337, 
                        price_internal = 1.337, 
                        price_external = 1.337, 
                        last_reading_value = 1.337, 
                        last_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        power = 1.337, 
                        consumption_total = 1.337, 
                        internal_percentage = 1.337, 
                        width = 1.337, )
                    ],
                power = 1.337,
                power_internal = 1.337,
                power_external = 1.337,
                price_internal = 1.337,
                price_external = 1.337
            )
        else:
            return CommonProduction(
        )
        """

    def testCommonProduction(self):
        """Test CommonProduction"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
