# coding: utf-8

"""
    Enyday API

    API for Enyday energy services integration

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from enyday.models.user_details import UserDetails

class TestUserDetails(unittest.TestCase):
    """UserDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserDetails:
        """Test UserDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserDetails`
        """
        model = UserDetails()
        if include_optional:
            return UserDetails(
                id = 56,
                email = '',
                name = '',
                account_status = '',
                first_name = '',
                last_name = '',
                last_changed_password = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                complete_profile = True,
                has_user_registered_his_devices = True,
                nr_of_devices = 56,
                roles = [
                    enyday.models.role.Role(
                        name = '', )
                    ],
                eloverblik_customer_key = '',
                user_btms = [
                    enyday.models.user_btm.UserBtm(
                        btm_id = 56, 
                        btm_name = '', 
                        access_address_id = 56, 
                        access_address = '', 
                        use_buildings = 56, 
                        nordpool_area = '', 
                        periods = [
                            enyday.models.period.Period(
                                period_begin = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                period_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        new_price_model = True, )
                    ],
                admin_btms = [
                    enyday.models.admin_btm.AdminBtm(
                        btm_id = 56, 
                        btm_name = '', 
                        access_address_id = 56, 
                        access_address = '', 
                        use_buildings = 56, 
                        nordpool_area = '', 
                        periods = [
                            enyday.models.period.Period(
                                period_begin = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                period_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        new_price_model = True, )
                    ],
                reg_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                post_number = '',
                phone_number = '',
                has_battery = True,
                has_ev = True,
                subscription = True,
                customer_id = '',
                is_bot = True,
                address_id = 56,
                submeter_id = [
                    56
                    ],
                last_login = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                expo_push_token = ''
            )
        else:
            return UserDetails(
        )
        """

    def testUserDetails(self):
        """Test UserDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
