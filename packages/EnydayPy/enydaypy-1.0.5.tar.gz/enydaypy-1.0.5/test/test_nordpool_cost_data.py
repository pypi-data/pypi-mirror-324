# coding: utf-8

"""
    Enyday API

    API for Enyday energy services integration

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from enyday.models.nordpool_cost_data import NordpoolCostData

class TestNordpoolCostData(unittest.TestCase):
    """NordpoolCostData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NordpoolCostData:
        """Test NordpoolCostData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NordpoolCostData`
        """
        model = NordpoolCostData()
        if include_optional:
            return NordpoolCostData(
                areas = [
                    enyday.models.nordpool_area.NordpoolArea(
                        id = 56, 
                        delivery_area = '', 
                        status = '', 
                        currency = '', 
                        hours = [
                            enyday.models.nordpool_hour.NordpoolHour(
                                start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                value = 1.337, )
                            ], )
                    ],
                day_averages = [
                    enyday.models.nordpool_average.NordpoolAverage(
                        delivery_area = '', 
                        status = '', 
                        currency = '', 
                        value = 1.337, 
                        start_time = '', )
                    ],
                month_averages = [
                    enyday.models.nordpool_average.NordpoolAverage(
                        delivery_area = '', 
                        status = '', 
                        currency = '', 
                        value = 1.337, 
                        start_time = '', )
                    ]
            )
        else:
            return NordpoolCostData(
        )
        """

    def testNordpoolCostData(self):
        """Test NordpoolCostData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
