"""Ready to go contexts ready to be imported"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_contexts.ipynb.

# %% auto 0
__all__ = ['ctx_nbclassic_server', 'ctx_docker', 'ctx_fastlite_sqlutils', 'ctx_fasthtml', 'ctx_fastcore', 'ctx_claudette']

# %% ../nbs/01_contexts.ipynb 3
from ContextKit.read import *
from fastcore.all import parallel


# %% ../nbs/01_contexts.ipynb 6
def ctx_nbclassic_server(): 
    return {'nbclassic_server': read_url('https://nbclassic.readthedocs.io/en/latest/nbclassic.html',sel='.bd-article')}

# %% ../nbs/01_contexts.ipynb 9
def ctx_docker():
    ctxs = {'compose_file':'https://docs.docker.com/reference/compose-file/',
            'docker_cli':'https://docs.docker.com/reference/cli/docker/',
            'docker_compose_cli':'https://docs.docker.com/reference/cli/docker/compose/',
            'dockerd':'https://docs.docker.com/reference/cli/dockerd/',}
    ctxs = {k: read_url(v, sel='.prose') for k,v in ctxs.items()}
    
    url = 'https://docker-py.readthedocs.io/en/stable/{}.html'
    page_names = ['client','configs','containers','images','networks','nodes',
                 'plugins','secrets','services','swarm','volumes','api','tls',]
    urls = [url.format(p) for p in page_names]
    pages = parallel(read_url, urls, sel='.body')    
    ctxs = ctxs | {f'py_{n}':p for n,p in zip(page_names,pages)}
    return ctxs

# %% ../nbs/01_contexts.ipynb 12
def ctx_fastlite_sqlutils():
    return {
        'fastlite_index': read_url('https://answerdotai.github.io/fastlite/index.html.md'),
        'fastlite_core': read_url('https://answerdotai.github.io/fastlite/core.html.md'),
        'sqlite_utils_docs': read_url('https://sqlite-utils.datasette.io/en/stable/python-api.html',
                                      sel='#sqlite-utils-python-library')
    }

# %% ../nbs/01_contexts.ipynb 15
def ctx_fasthtml():
    return {
        'fasthtml_llms_ctx': read_url('https://docs.fastht.ml/llms-ctx.txt'),
        'hypermedia_summary': read_gist('https://gist.github.com/jph00/4ad7d35ad79013aded41b5ba535a12a3')
    }

# %% ../nbs/01_contexts.ipynb 18
def ctx_fastcore(): 
    return {'fc_llms_ctx': read_url('https://fastcore.fast.ai/llms-ctx.txt')}

# %% ../nbs/01_contexts.ipynb 21
def ctx_claudette():
    ctxs = {
        'async_docs': 'https://claudette.answer.ai/async.html.md',
        'core_docs': 'https://claudette.answer.ai/core.html.md',
        'toolloop_docs': 'https://claudette.answer.ai/toolloop.html.md'
    }
    return {k: read_url(url) for k, url in ctxs.items()}
