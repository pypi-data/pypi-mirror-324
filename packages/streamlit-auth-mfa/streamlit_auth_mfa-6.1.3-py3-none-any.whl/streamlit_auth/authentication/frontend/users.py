import streamlit as st

from streamlit_auth.config import settings
from streamlit_auth.authentication.backend.models import ROLES
from streamlit_auth.authentication.backend.auth import (
    Authenticate,
)


def pagina_gerenciar_usuarios():
    st.title("游댐 Gerenciar Usu치rios")

    # Obter lista de usu치rios (sem a senha)
    df_usuarios = Authenticate.get_all_users().drop(columns=[
        "password",
        "secret_tfa",
        "reset_token",
        ])

    # Exibir a tabela de usu치rios existentes
    st.subheader("游늶 Lista de Usu치rios")
    if not df_usuarios.empty:
        st.dataframe(df_usuarios, height=300, use_container_width=True)
    else:
        st.info("Nenhum usu치rio encontrado.")

    # Gerenciar Usu치rios
    st.subheader("丘뙖잺 Gerenciar Usu치rio")

    # Dropdown para selecionar usu치rio
    if not df_usuarios.empty:
        selected_user = st.selectbox(
            "Selecione um usu치rio:", df_usuarios["username"], index=0
        )
        df_user = df_usuarios[df_usuarios["username"] == selected_user].copy()
    else:
        st.warning("Nenhum usu치rio dispon칤vel para gerenciar.")
        return

    # A칞칫es dispon칤veis
    actions = [
        "Adicionar Usu치rio",
        "Trocar Senha",
        "Atualizar Dados",
        "Desativar Usu치rio",
        "Ativar Usu치rio",
        "Deletar Usu치rio",
        "Resetar Sess칫es",
        "Resetar 2FA",
    ]
    
    selected_action = st.selectbox("Escolha uma a칞칚o:", actions)

    # Form para cada a칞칚o
    with st.form(key="user_management_form"):
        if selected_action == "Trocar Senha":
            st.write("### Trocar Senha")
            new_password = st.text_input("Nova Senha:", type="password")
            confirmar_senha = st.text_input("Confirmar Nova Senha:", type="password")
            if st.form_submit_button("Atualizar Senha"):
                if new_password == confirmar_senha:
                    try:
                        Authenticate.update_senha(selected_user, new_password)
                        st.success("Senha atualizada com sucesso!")
                        st.rerun()
                    except Exception as e:
                        st.error(f"Erro ao atualizar senha: {str(e)}")
                else:
                    st.error("As senhas n칚o coincidem.")

        elif selected_action == "Atualizar Dados":
            st.write("### Atualizar Dados do Usu치rio")
            new_email = st.text_input("Email:", value=df_user["email"].values[0])
            new_role = st.selectbox(
                "Fun칞칚o:", ROLES, index=ROLES.index(df_user["role"].values[0])
            )
            new_name = st.text_input("Nome Completo:", value=df_user["nome"].values[0])
            if st.form_submit_button("Atualizar Dados"):
                try:
                    Authenticate.update_dados(
                        username=selected_user,
                        new_email=new_email,
                        new_role=new_role,
                        new_name=new_name
                        )
                    st.success("Dados do usu치rio atualizados com sucesso!")
                    st.rerun()
                except Exception as e:
                    st.error(f"Erro ao atualizar dados: {str(e)}")

        elif selected_action == "Adicionar Usu치rio":
            st.write("### Adicionar Novo Usu치rio")
            nome = st.text_input("Nome Completo:")
            username = st.text_input("Nome de Usu치rio:")
            email = st.text_input("Email:")
            role = st.selectbox("Fun칞칚o:", ROLES, index=0)
            password = st.text_input("Senha:", type="password")
            confirmar_senha = st.text_input("Confirmar Senha:", type="password")
            if st.form_submit_button("Adicionar Usu치rio"):
                if password == confirmar_senha:
                    try:
                        Authenticate.insert_user(nome, username, password, email, role)
                        st.success("Usu치rio adicionado com sucesso!")
                        st.rerun()
                    except Exception as e:
                        st.error(f"Erro ao adicionar usu치rio: {str(e)}")
                else:
                    st.error("As senhas n칚o coincidem.")

        elif selected_action == "Desativar Usu치rio":
            st.write("### Desativar Usu치rio")
            if st.form_submit_button("Desativar"):
                try:
                    Authenticate.deactivate_user(selected_user)
                    st.success("Usu치rio desativado com sucesso!")
                    st.rerun()
                except Exception as e:
                    st.error(f"Erro ao desativar usu치rio: {str(e)}")

        elif selected_action == "Ativar Usu치rio":
            st.write("### Ativar Usu치rio")
            if st.form_submit_button("Ativar"):
                try:
                    Authenticate.activate_user(selected_user)
                    st.success("Usu치rio ativado com sucesso!")
                    st.rerun()
                except Exception as e:
                    st.error(f"Erro ao ativar usu치rio: {str(e)}")

        elif selected_action == "Deletar Usu치rio":
            st.write("### Deletar Usu치rio")
            st.warning(f"Voc칡 est치 prestes a deletar o usu치rio **{selected_user}**.")
            if st.form_submit_button("Deletar"):
                try:
                    Authenticate.delete_usuario(selected_user)
                    st.success("Usu치rio deletado com sucesso!")
                    st.rerun()
                except Exception as e:
                    st.error(f"Erro ao deletar usu치rio: {str(e)}")

        elif selected_action == "Resetar 2FA":
            st.write("### Resetar 2FA")
            if st.form_submit_button("Resetar"):
                try:
                    Authenticate.delete_secret(selected_user)
                    st.success("2FA resetado com sucesso!")
                    st.rerun()
                except Exception as e:
                    st.error(f"Erro ao resetar 2FA: {str(e)}")

        elif selected_action == "Resetar Sess칫es":
            st.write("### Resetar Sess칫es")
            if st.form_submit_button("Resetar"):
                try:
                    Authenticate.revoke_session(username=selected_user)
                    st.success("Sess칫es do usu치rio resetadas com sucesso!")
                    st.rerun()
                except Exception as e:
                    st.error(f"Erro ao resetar sess칫es: {str(e)}")
