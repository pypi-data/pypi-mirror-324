# coding: utf-8

"""
    Trieve API

    Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.

    The version of the OpenAPI document: 0.11.8
    Contact: developers@trieve.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from trieve_py_client.models.update_chunk_req_payload import UpdateChunkReqPayload

class TestUpdateChunkReqPayload(unittest.TestCase):
    """UpdateChunkReqPayload unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateChunkReqPayload:
        """Test UpdateChunkReqPayload
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateChunkReqPayload`
        """
        model = UpdateChunkReqPayload()
        if include_optional:
            return UpdateChunkReqPayload(
                chunk_html = '',
                chunk_id = '',
                convert_html_to_text = True,
                fulltext_boost = trieve_py_client.models.full_text_boost.FullTextBoost(
                    boost_factor = 1.337, 
                    phrase = '', ),
                group_ids = [
                    ''
                    ],
                group_tracking_ids = [
                    ''
                    ],
                image_urls = [
                    ''
                    ],
                link = '',
                location = trieve_py_client.models.geo_info.GeoInfo(
                    lat = null, 
                    lon = null, ),
                metadata = None,
                num_value = 1.337,
                semantic_boost = trieve_py_client.models.semantic_boost.SemanticBoost(
                    distance_factor = 1.337, 
                    phrase = '', ),
                tag_set = [
                    ''
                    ],
                time_stamp = '',
                tracking_id = '',
                weight = 1.337
            )
        else:
            return UpdateChunkReqPayload(
        )
        """

    def testUpdateChunkReqPayload(self):
        """Test UpdateChunkReqPayload"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
