# coding: utf-8

"""
    Trieve API

    Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.

    The version of the OpenAPI document: 0.12.0
    Contact: developers@trieve.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from trieve_py_client.models.public_dataset_options import PublicDatasetOptions

class TestPublicDatasetOptions(unittest.TestCase):
    """PublicDatasetOptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PublicDatasetOptions:
        """Test PublicDatasetOptions
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PublicDatasetOptions`
        """
        model = PublicDatasetOptions()
        if include_optional:
            return PublicDatasetOptions(
                enabled = True,
                extra_params = trieve_py_client.models.public_page_parameters.PublicPageParameters(
                    allow_switching_modes = True, 
                    analytics = True, 
                    api_key = '', 
                    base_url = '', 
                    brand_color = '', 
                    brand_logo_img_src_url = '', 
                    brand_name = '', 
                    chat = True, 
                    currency_position = '', 
                    dataset_id = '', 
                    debounce_ms = 56, 
                    default_ai_questions = [
                        ''
                        ], 
                    default_currency = '', 
                    default_search_mode = '', 
                    default_search_queries = [
                        ''
                        ], 
                    placeholder = '', 
                    problem_link = '', 
                    responsive = True, 
                    search_options = null, 
                    suggested_queries = True, 
                    theme = null, 
                    type = '', 
                    use_group_search = True, )
            )
        else:
            return PublicDatasetOptions(
                enabled = True,
        )
        """

    def testPublicDatasetOptions(self):
        """Test PublicDatasetOptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
