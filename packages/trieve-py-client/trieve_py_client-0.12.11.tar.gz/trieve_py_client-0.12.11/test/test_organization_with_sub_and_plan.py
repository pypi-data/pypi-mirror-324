# coding: utf-8

"""
    Trieve API

    Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.

    The version of the OpenAPI document: 0.11.9
    Contact: developers@trieve.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from trieve_py_client.models.organization_with_sub_and_plan import OrganizationWithSubAndPlan

class TestOrganizationWithSubAndPlan(unittest.TestCase):
    """OrganizationWithSubAndPlan unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrganizationWithSubAndPlan:
        """Test OrganizationWithSubAndPlan
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrganizationWithSubAndPlan`
        """
        model = OrganizationWithSubAndPlan()
        if include_optional:
            return OrganizationWithSubAndPlan(
                organization = {"created_at":"2021-01-01 00:00:00.000","id":"e3e3e3e3-e3e3-e3e3-e3e3-e3e3e3e3e3e3","name":"Trieve","registerable":true,"updated_at":"2021-01-01 00:00:00.000"},
                plan = {"amount":1000,"chunk_count":1000,"created_at":"2021-01-01 00:00:00.000","dataset_count":1,"file_storage":512,"id":"e3e3e3e3-e3e3-e3e3-e3e3-e3e3e3e3e3e3","message_count":1000,"name":"Free","stripe_id":"plan_123","updated_at":"2021-01-01 00:00:00.000","user_count":5},
                subscription = {"created_at":"2021-01-01 00:00:00.000","current_period_end":"2021-01-01 00:00:00.000","id":"e3e3e3e3-e3e3-e3e3-e3e3-e3e3e3e3e3e3","organization_id":"e3e3e3e3-e3e3-e3e3-e3e3-e3e3e3e3e3e3","plan_id":"e3e3e3e3-e3e3-e3e3-e3e3-e3e3e3e3e3e3","stripe_id":"sub_123","updated_at":"2021-01-01 00:00:00.000"}
            )
        else:
            return OrganizationWithSubAndPlan(
                organization = {"created_at":"2021-01-01 00:00:00.000","id":"e3e3e3e3-e3e3-e3e3-e3e3-e3e3e3e3e3e3","name":"Trieve","registerable":true,"updated_at":"2021-01-01 00:00:00.000"},
        )
        """

    def testOrganizationWithSubAndPlan(self):
        """Test OrganizationWithSubAndPlan"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
