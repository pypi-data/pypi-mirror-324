# coding: utf-8

"""
    Trieve API

    Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.

    The version of the OpenAPI document: 0.12.0
    Contact: developers@trieve.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from trieve_py_client.models.public_page_parameters import PublicPageParameters

class TestPublicPageParameters(unittest.TestCase):
    """PublicPageParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PublicPageParameters:
        """Test PublicPageParameters
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PublicPageParameters`
        """
        model = PublicPageParameters()
        if include_optional:
            return PublicPageParameters(
                allow_switching_modes = True,
                analytics = True,
                api_key = '',
                base_url = '',
                brand_color = '',
                brand_logo_img_src_url = '',
                brand_name = '',
                chat = True,
                currency_position = '',
                dataset_id = '',
                debounce_ms = 56,
                default_ai_questions = [
                    ''
                    ],
                default_currency = '',
                default_search_mode = '',
                default_search_queries = [
                    ''
                    ],
                placeholder = '',
                problem_link = '',
                responsive = True,
                search_options = {"filters":{"must":[{"field":"num_value","range":{"gt":0.0,"gte":0.0,"lt":1.0,"lte":1.0}}],"must_not":[{"field":"metadata.key3","match":["value5","value6"]}],"should":[{"field":"metadata.key1","match":["value1","value2"]}]},"score_threshold":0.5,"search_type":"semantic"},
                suggested_queries = True,
                theme = 'light',
                type = '',
                use_group_search = True
            )
        else:
            return PublicPageParameters(
        )
        """

    def testPublicPageParameters(self):
        """Test PublicPageParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
