# SPDX-License-Identifier: CC0-1.0
# SPDX-FileCopyrightText: 2022-2025 Anna <cyber@sysrq.in>

[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "gentle-mxml"
authors = [
    {name = "Anna", email = "cyber@sysrq.in"}
]
dynamic = ["version", "description"]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.11"
dependencies = [
    "portage",
    "lxml"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: DFSG approved",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: System :: Software Distribution",
    "Topic :: Utilities",
    "Typing :: Typed"
]
keywords = ["gentoo", "ebuild", "metadata", "upstream", "maintainer"]

[project.optional-dependencies]
# PKG-INFO
pkginfo = ["pkginfo"]
# DOAP
rdf = ["rdflib"]
# Python packaging
wheel = [
    "build[uv]>=1.2.0",
    "pyproject_hooks",
]
# package.yaml, pubspec.yaml, shard.yml
yaml = ["PyYAML"]

docs = [
    "insipid-sphinx-theme",
    "sphinx",
    "sphinx-prompt"
]
test = [
    "pytest",
    "xmldiff"
]

[project.urls]
Home = "https://gentle.sysrq.in"
Source = "https://git.sysrq.in/gentle"
Issues = "https://bugs.sysrq.in/enter_bug.cgi?product=Software&component=gentle"
Changelog = "https://gentle.sysrq.in/release-notes.html"

[project.scripts]
gentle = "gentle.__main__:main"

[project.entry-points."gentle.generators"]
autoconf = "gentle.generators.autoconf:AutoconfGenerator"
bower = "gentle.generators.bower:BowerGenerator"
cargo = "gentle.generators.cargo:CargoGenerator"
composer = "gentle.generators.composer:ComposerGenerator"
cpan = "gentle.generators.cpan:CpanGenerator"
doap = "gentle.generators.doap:DoapGenerator"
gemspec = "gentle.generators.gemspec:GemspecGenerator"
hpack = "gentle.generators.hpack:HpackGenerator"
npm = "gentle.generators.npm:NpmGenerator"
nuspec = "gentle.generators.nuspec:NuspecGenerator"
pear = "gentle.generators.pear:PearGenerator"
pom = "gentle.generators.pom:PomGenerator"
pubspec = "gentle.generators.pubspec:PubspecGenerator"
pkg_info = "gentle.generators.python.pkg_info:PkgInfoGenerator"
pyproject = "gentle.generators.python.pyproject:PyprojectGenerator"
setuptools = "gentle.generators.python.setuptools:SetuptoolsGenerator"
wheel = "gentle.generators.python.wheel:WheelGenerator"
shards = "gentle.generators.shards:ShardsGenerator"

[tool.flit.module]
name = "gentle"

[tool.flit.sdist]
include = [
    "docs/",
    "tests/"
]

[tool.pytest.ini_options]
addopts = "--doctest-modules"

[tool.mypy]
disallow_untyped_defs = true
no_implicit_optional = true
exclude = "setup\\.py$"

[[tool.mypy.overrides]]
module = [
    "tests.*",
]
# requiring explicit types for all test methods would be cumbersome
disallow_untyped_defs = false
check_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "_pytest.*",
    "portage.*",
    "xml.sax._exceptions",
    "xmldiff.*"
]
ignore_missing_imports = true

[tool.bandit]
skips = [
    "B404", # import_subprocess
    "B406", # import_xml_sax
]

[tool.bumpversion]
current_version = "1.0.2"
commit = true
tag = true
tag_name = "{new_version}"
sign_tags = true

[[tool.bumpversion.files]]
filename = "gentle/__init__.py"

[[tool.bumpversion.files]]
filename = "docs/conf.py"

[[tool.bumpversion.files]]
filename = "docs/release-notes.rst"
search = "{current_version}-next"
replace = "{new_version}"

[tool.tox]
requires = ["tox>=4.21"]
min_version = "4.21"
env_list = ["3.11", "3.12", "3.13", "lint"]

[tool.tox.env_run_base]
description = "run the tests + mypy under {base_python}"
ignore_errors = true
deps = [
    "lxml-stubs",
    "mypy",
    "types-PyYAML",
]
extras = [
    "pkginfo",
    "rdf",
    "test",
    "wheel",
    "yaml",
]
commands = [
    ["pytest", "-vv", "{tty:--color=yes}", "{posargs:--net}"],
    ["mypy", "gentle", "tests"],
]

[tool.tox.env.lint]
description = "run the linters"
ignore_errors = true
skip_install = true
deps = [
    "bandit",
    "pycodestyle",
    "pyflakes",
    "reuse",
]
commands = [
    ["reuse", "lint"],
    ["pyflakes", "gentle", "tests"],
    ["pycodestyle", "gentle", "tests"],
    ["bandit", "-c", "pyproject.toml", "-r", "gentle"],
]
