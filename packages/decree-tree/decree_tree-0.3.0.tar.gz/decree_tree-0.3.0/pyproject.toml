[build-system]
requires = ['poetry-core>=2.0']
build-backend = 'poetry.core.masonry.api'

[tool.coverage.run]
branch = true

[tool.mypy]

# globally ignore import errors (better to be specific)
# FIXME read https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
# ignore_missing_imports=true

# TODO set python version - BUT note that we want to support multiple versions with tox!
# FIXME is this needed? will it use current python version if not specified? what about when not tox?
python_version = "3.10"  # minimum version supported

# Configure strictness
# configure maximal strictness
check_untyped_defs = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
implicit_reexport = true # was false in mypy.ini
no_implicit_optional = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true
warn_unused_configs = true

# This may not do anything, since we are more specific above
# strict = true

# Standard formatting
show_column_numbers = true
show_error_codes = true
show_traceback = true

# This option seems to remove change the per-file mypy output in pytest-mypy
# show_absolute_path = true

[project]
name = "decree-tree"
version = "0.3.0"
description = "A minimal way to create nested argparse-based subcommands in scripts."
authors = [{ name = "Jared Ahern", email = "jared.ahern.dev@gmail.com" }]
maintainers = [{ name = "Jared Ahern", email = "jared.ahern.dev@gmail.com" }]
license = { text = "Apache-2.0" }
readme = "README.md"
requires-python = ">=3.10"
keywords = ["command", "cli"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Shells",
    "Typing :: Typed",
]
dependencies = [
    "typing-extensions (>=4.6.0)", # use lowest version possible
]

[project.urls]
homepage = "https://gitlab.com/elasmocalc/decree-tree"
repository = "https://gitlab.com/elasmocalc/decree-tree"
documentation = "https://elasmocalc.net/decree-tree"
issues = "https://gitlab.com/elasmocalc/decree-tree/issues"
pypi = "https://pypi.org/project/decree-tree/"

[tool.poetry]
requires-poetry = ">=2.0"

[tool.poetry.dependencies]
python = ">=3.10,<4" # for locking only

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
coverage = [
    { version = "^7.6.4", python = "<3.11", extras = ["toml"] },
    { version = "^7.6.4", python = ">=3.11" },
]
mypy = "^1.13.0"
pydoclint = "^0.5.3"
pylint = "^3.3.1"
pytest = "^8.3.3"
pytest-cov = "^6.0.0"
pytest-mock = "^3.14.0"
pytest-mypy = "^0.10.3"
pytest-pylint = "^0.21.0"
sphinx = "^8.1.3"
sphinx-autodoc-typehints = "^2.5.0"
sphinx-book-theme = "^1.1.3"
sphinx-copybutton = "^0.5.2"
sphinx-design = "^0.6.1"
sphinxcontrib-shtest = "^0.5.0"

[tool.poetry_package_ideas]
# pytest-sphinx
# doctest-sphinx
# pytest-print
# pytest-randomly
# tox

[tool.pydoclint]
allow-init-docstring = true
arg-type-hints-in-docstring = false
arg-type-hints-in-signature = true  # FIXME this seems to not work for bare `:returns:`
# FIXME fix or, when supported, ignore spurious DOC203 violations for bare `:returns:`
check-class-attributes = false  # FIXME not sure why using `cvar` fails
show-filenames-in-every-violation-message = true
skip-checking-short-docstrings = false
style = 'sphinx'

[tool.pylint.MASTER]
disable = [
    "fixme", # FIXME remove this later
]
# clear-cache-post-run = true
# toggling the above or any other pylint setting forces cache refresh (runs skipped tests)

[tool.pytest.ini_options]
addopts = "--cov=src --cov=test --cov-report html --cov-report term --mypy --pylint --cache-clear"
testpaths = ["docs", "src", "test"]
#filterwarnings = [
#    "ignore::pytest.PytestRemovedIn9Warning:.*pytest_pylint.plugin:",
#    # ignoring doesn't seem to work for the plugin manager, so this is ineffective,
#    # however, the warning is non-breaking
#]
