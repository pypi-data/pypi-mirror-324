# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, papaeye
# This file is distributed under the same license as the gntplib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: gntplib 0.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-04-14 02:01+0900\n"
"PO-Revision-Date: 2012-04-12 23:32+0900\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 0.9.6\n"

# ee748ce4f46f429b86aad5b67c71b10b
#: ../../async.rst:4
msgid "Asynchronous Support"
msgstr "非同期処理のサポート"

# 3a8a123d07ab45cb88c366ec6f697bc8
#: ../../async.rst:8
msgid ""
":mod:`gntplib.async` provides support for asynchronous processing built "
"on Tornado_."
msgstr ":mod:`gntplib.async` は Tornado_ を使った非同期処理をサポートしています。"

# d54f6cd53a514a5d997e87424b556bdf
#: ../../async.rst:14
msgid "Publisher"
msgstr ""

# 0afaded83b654deea319c7ea33561ede
#: ../../async.rst:16
msgid ""
":class:`~gntplib.async.AsyncPublisher` provides asynchronous methods: "
":meth:`~gntplib.async.AsyncPublisher.register()` and "
":meth:`~gntplib.async.AsyncPublisher.publish()`. These methods are "
"inherited from :class:`~gntplib.Publisher` directly."
msgstr ""
":class:`~gntplib.async.AsyncPublisher` は非同期メソッドを提供します。\\ "
":meth:`~gntplib.async.AsyncPublisher.register()` と "
":meth:`~gntplib.async.AsyncPublisher.publish()` です。これらのメソッドは "
":class:`~gntplib.Publisher` からそのまま継承されています。"

# b80e8d89f57f4821ac0193670821a76f
#: ../../async.rst:21
msgid ""
"Note that they are asynchronous methods especially when you use them in a"
" row. :meth:`~gntplib.async.AsyncPublisher.register()` returns regardless"
" of wheather the ``REGISTER`` request has been received by the GNTP "
"server, so successive :meth:`~gntplib.async.AsyncPublisher.publish()` "
"method call is possible to fail due to unregistered application or "
"notification name."
msgstr ""
"特にそれらのメソッドを連続して使うときには非同期メソッドであることに注意してください。\\ ``REGISTER`` リクエストが GNTP "
"サーバに受信されたかどうかに関わらず :meth:`~gntplib.async.AsyncPublisher.register()` "
"は制御を返すので、その次の :meth:`~gntplib.async.AsyncPublisher.publish()` "
"メソッド呼び出しが、未登録のアプリケーションまたは通知タイプ名として失敗する可能性があります。"

# 56455f2aa60c44b5899b80156f252c9e
#: ../../async.rst:27
msgid ""
"To avoid this, pass :meth:`~gntplib.async.AsyncPublisher.publish()` "
"method call to ``callback`` keyword argument as callback function::"
msgstr ""
"これを避けるには、\\ :meth:`~gntplib.async.AsyncPublisher.publish()` "
"メソッド呼び出しをコールバック関数として ``callback`` キーワード引数に渡します。"

# a7b2026a0f8f435bb98cb432945b779c
#: ../../async.rst:35
msgid "Or use Tornado's ``gen.Task`` syntax like this::"
msgstr "または Tornado の ``gen.Task`` 構文を使います。"

# 538657491d4f421588b881b299b4da7b
#: ../../async.rst:45
msgid "Subscriber"
msgstr ""

# d0e7e37efecd4a58b068f6409eb25765
#: ../../async.rst:47
msgid ""
":class:`~gntplib.async.AsyncSubscriber` provides asynchronous method "
":meth:`~gntplib.async.AsyncSubscriber.subscribe()`, which is inherited "
"from :class:`~gntplib.Subscriber` directly."
msgstr ""
":class:`~gntplib.async.AsyncSubscriber` は非同期メソッドの "
":meth:`~gntplib.async.AsyncSubscriber.subscribe()` を提供します。これは "
":class:`~gntplib.Subscriber` からそのまま継承されています。"

# 5bb45213b1544835ba2609b72dea170d
#: ../../async.rst:53
msgid "Resource"
msgstr "リソース"

# c43be061f9414b7a91c5d973a13aefba
#: ../../async.rst:55
msgid ""
":class:`~gntplib.async.AsyncResource` is a lazy resource. Before request "
"dispatching, the resource data is fetched asynchronously from the url "
"passed to the constructor."
msgstr ""
":class:`~gntplib.async.AsyncResource` は遅延リソースです。リクエストを送出する前に、コンストラクタで渡された"
" URL からリソースデータが非同期にフェッチされます。"

# 9a91f583da6e4a08bb607f10211f3b02
#: ../../async.rst:59
msgid ""
"You can use :class:`~gntplib.async.AsyncResource` instead of "
":class:`~gntplib.Resource` in :class:`~gntplib.async.AsyncPublisher` or "
":class:`~gntplib.async.AsyncSubscriber`::"
msgstr ""
":class:`~gntplib.async.AsyncResource` は、\\ "
":class:`~gntplib.async.AsyncPublisher` または :class:`~gntplib.async.AsyncSubscriber` で :class:`~gntplib.Resource` の代わりに使うことができます。"

