# Auto generated by 'inv collect-airflow'
from airfly._vendor.airflow.sensors.base import BaseSensorOperator


class GCSObjectExistenceSensor(BaseSensorOperator):
    bucket: "str"
    object: "str"
    use_glob: "bool"
    google_cloud_conn_id: "str"
    impersonation_chain: "str | Sequence[str] | None"
    retry: "Retry"
    deferrable: "bool"


class GCSObjectExistenceAsyncSensor(GCSObjectExistenceSensor):
    pass


class GCSObjectUpdateSensor(BaseSensorOperator):
    bucket: "str"
    object: "str"
    ts_func: "Callable"
    google_cloud_conn_id: "str"
    impersonation_chain: "str | Sequence[str] | None"
    deferrable: "bool"


class GCSObjectsWithPrefixExistenceSensor(BaseSensorOperator):
    bucket: "str"
    prefix: "str"
    google_cloud_conn_id: "str"
    impersonation_chain: "str | Sequence[str] | None"
    deferrable: "bool"


class GCSUploadSessionCompleteSensor(BaseSensorOperator):
    bucket: "str"
    prefix: "str"
    inactivity_period: "float"
    min_objects: "int"
    previous_objects: "set[str] | None"
    allow_delete: "bool"
    google_cloud_conn_id: "str"
    impersonation_chain: "str | Sequence[str] | None"
    deferrable: "bool"
