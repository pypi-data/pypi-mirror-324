Metadata-Version: 2.2
Name: augini
Version: 0.3.0
Summary: AI-powered Python framework for tabular data enrichment and analysis using LLMs. Features include intelligent feature engineering, natural language data analysis, and AI agents for automated workflows.
Author-email: Vadim Borisov <vadim@tabularis.ai>
License: MIT License
        
        Copyright (c) 2024 Vadim Borisov @ Tabularis AI
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://github.com/tabularis-ai/augini
Project-URL: Bug Tracker, https://github.com/tabularis-ai/augini/issues
Project-URL: Documentation, https://tabularis-ai.github.io/augini
Project-URL: Discord, https://discord.com/channels/1310217643520819251/
Keywords: AI agents,augini,LLM,data analysis,feature engineering,tabular data,data enrichment,natural language,data science,machine learning
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: openai>=1.35.13
Requires-Dist: pandas>=2.0.0
Requires-Dist: numpy<2.0.0
Requires-Dist: tqdm>=4.65.0
Requires-Dist: nest_asyncio>=1.5.6
Requires-Dist: pydantic>=2.0.0
Requires-Dist: PyYAML>=6.0.0
Requires-Dist: python-dotenv>=1.0.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: black>=22.0.0; extra == "dev"
Requires-Dist: isort>=5.0.0; extra == "dev"
Requires-Dist: mypy>=1.0.0; extra == "dev"
Requires-Dist: pylint>=2.17.0; extra == "dev"
Requires-Dist: mkdocs-material>=9.0.0; extra == "dev"
Requires-Dist: mkdocs-minify-plugin>=0.7.0; extra == "dev"

# Augini 🤖

<p align="center">
  <img src="docs/assets/images/logo_augini.png" alt="augini logo" width="200"/>
</p>

<div align="center">
  
[![PyPI version](https://badge.fury.io/py/augini.svg)](https://badge.fury.io/py/augini) 
[![Downloads](https://static.pepy.tech/badge/augini)](https://pepy.tech/project/augini)
[![Documentation](https://img.shields.io/badge/docs-augini-blue)](https://tabularis-ai.github.io/augini/)
[![Discord](https://img.shields.io/discord/1310217643520819251?color=7289da&label=Discord&logo=discord&logoColor=ffffff)](https://discord.com/channels/1310217643520819251/)
[![Twitter Follow](https://img.shields.io/twitter/follow/tabularis_ai?style=social)](https://x.com/tabularis_ai)
![Last Commit](https://img.shields.io/github/last-commit/tabularis-ai/augini)
[![Hugging Face](https://img.shields.io/badge/🤗%20Hugging%20Face-white?style=for-the-badge&logo=huggingface&logoColor=black)](https://huggingface.co/tabularisai)

</div>

## 🎯 What is Augini?

Augini is an AI-powered Python framework for tabular data enrichment and analysis. It leverages Large Language Models (LLMs) to:
- Generate meaningful features from your data
- Provide natural language data analysis
- Create AI agents for automated data workflows

## 🚀 Quick Start

```bash
pip install augini
```

```python
from augini import DataEngineer, DataAnalyzer
import pandas as pd

# Sample customer data
df = pd.DataFrame({
    'CustomerID': ['C001', 'C002'],
    'Age': [25, 45],
    'MonthlyCharges': [50.0, 75.0]
})

# Initialize with your API key (supports OpenAI, OpenRouter, Azure)
engineer = DataEngineer(
    api_key="your-api-key",
    model="gpt-4o-mini",  # Use OpenRouter's GPT-4
    base_url="https://openrouter.ai/api/v1"  # Optional: use OpenRouter
)

# Generate customer insights
df = engineer.generate_features(
    df=df,
    features=[
        {
            'name': 'CustomerSegment',
            'description': 'Classify customer segment based on age and spending',
            'output_type': 'category',
            'constraints': {'categories': ['Premium', 'Regular', 'Budget']}
        },
        {
            'name': 'ChurnRisk',
            'description': 'Calculate churn risk score (0-100)',
            'output_type': 'float',
            'constraints': {'min': 0, 'max': 100}
        }
    ]
)

# Initialize analyzer for natural language insights
analyzer = DataAnalyzer(
    api_key="your-api-key",
    model="gpt-4o-mini",
    enable_memory=True  # Enable conversation context
)

# Fit data and ask questions
analyzer.fit(df)
insights = analyzer.chat("What patterns do you see in customer segments?")
print(insights)
```

## 🎁 Key Features

### 🔄 DataEngineer
- **Feature Generation**: Create meaningful features using AI
- **Data Augmentation**: Enrich datasets with synthetic data
- **Custom Constraints**: Control output formats and ranges
- **Batch Processing**: Handle large datasets efficiently

### 📊 DataAnalyzer
- **Natural Language Analysis**: Ask questions about your data
- **Pattern Detection**: Uncover hidden trends and correlations
- **Memory Context**: Build on previous analysis
- **Visualization Integration**: Generate plots and charts

### 🤖 AI Agents
- **Automated Workflows**: Create agents for repetitive tasks
- **Custom Behaviors**: Define agent goals and constraints
- **Chain Actions**: Connect multiple agents for complex workflows

## 🌐 Provider Agnostic

Augini works with multiple LLM providers:
- OpenAI
- OpenRouter
- Azure OpenAI
- Anthropic (coming soon)


## 🤝 Contributing

We welcome contributions! 

## 📜 License

Augini is released under the [MIT License](LICENSE).
