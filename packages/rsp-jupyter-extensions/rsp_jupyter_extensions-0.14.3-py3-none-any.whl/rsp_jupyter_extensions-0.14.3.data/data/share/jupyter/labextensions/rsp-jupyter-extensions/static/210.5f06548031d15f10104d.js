"use strict";(self.webpackChunkrsp_jupyter_extensions=self.webpackChunkrsp_jupyter_extensions||[]).push([[210],{210:(e,t,n)=>{n.r(t),n.d(t,{default:()=>S});var r=n(144),o=n(434),i=n(75),s=n(4),a=n(651);function u(e,t,n){return a.ServerConnection.makeRequest(e,t,n).then((e=>200!==e.status?e.json().then((t=>{throw new a.ServerConnection.ResponseError(e,t.message)})):e.json()))}var c=n(29),l=n(352);function d(e){return c.createElement(r.TextItem,{source:`${e.source}`,title:`${e.title}`})}class m extends l.VDomRenderer{constructor(e){super(new l.VDomModel),this.props=e}render(){return this.props?c.createElement(d,{source:this.props.source,title:this.props.title}):null}dispose(){super.dispose()}}const g=m;var y;function p(e,t=null,n,...r){e===y.DEBUG&&t&&t.DEBUG||e===y.INFO?console.log(n,...r):e===y.WARNING?console.warn(n,...r):e===y.ERROR&&console.error(n,...r)}!function(e){e.DEBUG="debug",e.INFO="info",e.WARNING="warning",e.ERROR="error"}(y||(y={}));const b="rsp-jupyterlab",E=`${b}:plugin`,v=`${b}:displayversion`;r.IStatusBar;var f,h,I,q,N,R=n(882);async function D(e,t,n,r,o){const{commands:i}=e;i.hasCommand(f.rubinqueryitem)||i.addCommand(f.rubinqueryitem,{label:"Open from your query history...",caption:"Open notebook from supplied query jobref ID or URL",execute:()=>{!async function(e,t,n,r,o){try{const i=await async function(e){const t={title:"Query Jobref ID or URL",body:new O,focusNodeSelector:"input",buttons:[l.Dialog.cancelButton(),l.Dialog.okButton({label:"CREATE"})]};try{const n=await(0,l.showDialog)(t);return n?(p(y.DEBUG,e,`Result from queryDialog: ${n}`),n.value?n.button?"CREATE"===n.button.label?(p(y.DEBUG,e,`Got result ${n.value} from queryDialog: CREATE`),n.value):void p(y.DEBUG,e,"Did not get queryDialog: CREATE"):void p(y.DEBUG,e,"No result.button from queryDialog"):void p(y.DEBUG,e,"No result.value from queryDialog")):void p(y.DEBUG,e,"No result from queryDialog")}catch(e){throw console.error(`Error showing overwrite dialog ${e}`),new Error(`Failed to show overwrite dialog: ${e}`)}}(r);if(p(y.DEBUG,r,`Query URL / ID is ${i}`),!i)return void p(y.WARNING,r,"Query URL was null'");w(e,t,n,r,i,o)}catch(e){throw p(y.ERROR,r,`Error performing query ${e}`),new Error(`Failed to perform query: ${e}`)}}(e,t,n,r,o)}}),i.hasCommand(f.rubinquerynb)||i.addCommand(f.rubinquerynb,{label:"All queries",caption:"Open notebook requesting all query history",execute:()=>{!async function(e,t,n,r){const o=s.PageConfig.getBaseUrl()+"rubin/query/tap/notebooks/query_all";p(y.INFO,r,"Opening query-all notebook");u(o,{method:"GET"},n.serverSettings).then((e=>{const n=e.path;t.open(n)}))}(0,t,n,r)}}),i.hasCommand(f.rubinqueryrefresh)||i.addCommand(f.rubinqueryrefresh,{label:"Refresh query history",caption:"Refresh query history",execute:()=>{D(e,t,n,r,o)}}),o.clearItems();const a={command:f.rubinqueryitem},c={command:f.rubinquerynb},d={command:f.rubinqueryrefresh};o.insertItem(10,a),p(y.DEBUG,r,"inserted query dialog menu"),o.insertItem(20,{type:"separator"}),o.insertItem(30,c),p(y.DEBUG,r,"inserted all-query notebook generator"),o.insertItem(40,{type:"separator"});try{const i=await async function(e,t,n,r,o){p(y.INFO,r,"Retrieving recent query menu");const{commands:i}=e,a=new R.Menu({commands:i});a.title.label="Recent Queries";try{const c=await async function(e,t){const n=s.PageConfig.getBaseUrl()+"rubin/query/tap/history/5",r={method:"GET"};p(y.INFO,t,`About to query TAP history at ${n}`);const o=e.serverSettings,i=[];try{const e=await u(n,r,o);p(y.DEBUG,t,`Got query response ${JSON.stringify(e,void 0,2)}`),e.forEach((e=>{i.push(e)}))}catch(e){throw console.error(`Error showing overwrite dialog ${e}`),new Error(`Failed to show overwrite dialog: ${e}`)}return p(y.DEBUG,t,`rubinqueryrecent history return: ${JSON.stringify(i,void 0,2)}`),i}(n,r);p(y.DEBUG,r,`Recent queries: ${JSON.stringify(c,void 0,2)}`);let l=10;c.forEach((s=>{const u=`q-${s.jobref}`;i.hasCommand(u)||i.addCommand(u,{label:s.text,execute:()=>{w(e,t,n,r,s.jobref,o)}});const c=new R.Menu({commands:i});c.title.label=s.jobref,c.insertItem(0,{type:"command",command:u}),p(y.DEBUG,r,`Added ${u} to submenu for ${s.jobref} => ${c.title.label}`),a.insertItem(l,{type:"submenu",submenu:c}),p(y.DEBUG,r,`Added submenu ${s.jobref} at menuindex ${l} to ${a.title.label}`),l+=10}))}catch(e){throw p(y.ERROR,r,`Error performing recent query history ${e}`),new Error(`Failed to query recent history: ${e}`)}return a}(e,t,n,r,o);p(y.DEBUG,r,"recent query menu retrieved"),p(y.DEBUG,r,"inserting recent querymenu..."),o.insertItem(50,{type:"submenu",submenu:i})}catch(e){throw console.error(`Error getting recent query menu ${e}`),new Error(`Failed to get recent query menu: ${e}`)}p(y.DEBUG,r,"...inserted recent query menu"),o.insertItem(60,{type:"separator"}),o.insertItem(70,d),p(y.DEBUG,r,"inserted query refresh")}!function(e){e.rubinqueryitem="rubinqueryitem",e.rubinhistory="rubinhistory",e.rubinquerynb="rubinquerynb",e.rubinqueryrefresh="rubinqueryrefresh"}(f||(f={}));class O extends R.Widget{constructor(){super({node:h.createQueryNode()}),this.addClass("rubin-qh")}get inputNode(){return this.node.getElementsByTagName("input")[0]}getValue(){return this.inputNode.value}}function w(e,t,n,r,o,i){p(y.INFO,r,`Opening query for ${o}`);const a=JSON.stringify({type:"tap",value:o});u(s.PageConfig.getBaseUrl()+"rubin/query",{method:"POST",body:a},n.serverSettings).then((e=>{const n=e.path;t.open(n)})),D(e,t,n,r,i)}function G(e,t,n,r,o){B(o);const i=Promise.resolve(function(e,t,n,r){const o=[];for(const n of e.shell.widgets("main"))if(n){const e=t.contextForWidget(n);e?(p(y.DEBUG,r,`Saving context for widget: ${{id:n.id}}`),o.push(e.save())):p(y.WARNING,r,`No context for widget: ${{id:n.id}}`)}p(y.DEBUG,r,"Waiting for all save-document promises to resolve.");let i=Promise.resolve(1);return o&&(Promise.all(o),i=o[0]),i}(e,t,0,o));return i.then((t=>U(e,0,0,r,o))),i.catch((e=>{p(y.WARNING,o,`savequit: saveAll failed: ${e.message}`)})),p(y.INFO,o,"savequit: Save and Quit complete."),i}function U(e,t,n,r,o){B(o);let i="/";return r&&(i="/logout"),Promise.resolve(function(e,t){const n=e.serviceManager.serverSettings,r=s.PageConfig.getBaseUrl()+"rubin/hub";return p(y.DEBUG,t,`savequit: hubRequest URL: ${r} | Settings: ${n}`),a.ServerConnection.makeRequest(r,{method:"DELETE"},n)}(e,o).then((()=>{p(y.INFO,o,"Quit complete.")})).then((()=>{window.location.replace(i)})))}function B(e){const t={title:"Redirecting to landing page",body:"JupyterLab cleaning up and redirecting to landing page.",buttons:[l.Dialog.okButton({label:"Got it!"})]};return(0,l.showDialog)(t).then((()=>{p(y.DEBUG,e,"Info dialog panel displayed")}))}o.IMainMenu,i.IDocumentManager,function(e){e.createQueryNode=function(){const e=document.createElement("div"),t=document.createElement("label");t.textContent="Enter Query Jobref ID or URL";const n=document.createElement("input");return e.appendChild(t),e.appendChild(n),e}}(h||(h={})),function(e){e.justQuit="justquit:justquit",e.saveQuit="savequit:savequit",e.saveLogout="savelogout:savelogout"}(I||(I={})),o.IMainMenu,i.IDocumentManager,function(e){e.COPY="copy",e.FETCH="fetch"}(q||(q={})),function(e){e.PROMPT="prompt",e.OVERWRITE="overwrite",e.ABORT="abort"}(N||(N={}));o.IMainMenu,i.IDocumentManager;const S={activate:function(e,t,n,r){p(y.INFO,null,"getting server environment..."),function(e){return u(s.PageConfig.getBaseUrl()+"rubin/environment",{method:"GET"},e.serviceManager.serverSettings).then((e=>e))}(e).then((o=>{p(y.DEBUG,o,`...env: ${JSON.stringify(o,void 0,2)}...`),p(y.INFO,o,"...got server environment"),p(y.INFO,o,"rsp-lab-extension: loading..."),p(y.INFO,o,"...activating displayversion extension..."),function(e,t,n){p(y.INFO,n,"rsp-displayversion: loading...");const r=n.IMAGE_DESCRIPTION||"",o=n.IMAGE_DIGEST,i=n.JUPYTER_IMAGE_SPEC,s=" "+new URL(n.EXTERNAL_INSTANCE_URL||"").hostname,a=n.CONTAINER_SIZE||"";let u="";u=""===a?" ("+n.CPU_LIMIT+" CPU, "+n.MEM_LIMIT+" B)":" "+a;let c="",l="";if(i){const e=i.split("/"),n=e[e.length-1],a=n.split("@");2===a.length?(c=" ["+a[1].substring(7,15)+"...]",l=" ("+a[0]+")"):l=" ("+n+")",""===c&&o&&(c=" ["+o.substring(0,8)+"...]");const d=new g({source:r+c+l+u+s,title:r});t.registerStatusItem(v,{item:d,align:"left",rank:80,isActive:()=>!0})}p(y.INFO,n,"rsp-displayversion: ... loaded")}(0,r,o),p(y.INFO,o,"...activated..."),p(y.INFO,o,"...activating query extension..."),"science"===o.RSP_SITE_TYPE||"staff"===o.RSP_SITE_TYPE?(function(e,t,n,r){p(y.INFO,r,"rsp-query...loading");const o=e.serviceManager,{commands:i}=e,s=new R.Menu({commands:i});t.addMenu(s),s.title.label="Rubin",D(e,n,o,r,s).then((()=>{})),p(y.INFO,r,"rsp-query...loaded")}(e,t,n,o),p(y.INFO,o,"...activated...")):p(y.INFO,o,`...skipping query extension because site type is '${o.RSP_SITE_TYPE}'...`),p(y.INFO,o,"...activating savequit extension..."),function(e,t,n,r){p(y.INFO,null,"rsp-savequit: loading...");e.serviceManager;const{commands:o}=e;o.addCommand(I.justQuit,{label:"Exit Without Saving",caption:"Destroy container",execute:()=>{U(e,0,0,!1,r)}}),o.addCommand(I.saveQuit,{label:"Save All and Exit",caption:"Save open notebooks and destroy container",execute:()=>{G(e,n,0,!1,r)}}),o.addCommand(I.saveLogout,{label:"Save All, Exit, and Log Out",caption:"Save open notebooks, destroy container, and log out",execute:()=>{G(e,n,0,!0,r)}});const i=[{command:I.justQuit},{command:I.saveQuit},{command:I.saveLogout}];t.fileMenu.addGroup(i,150),p(y.INFO,r,"rsp-savequit: ...loaded.")}(e,t,n,o),p(y.INFO,o,"...activated..."),p(y.INFO,o,"...activating tutorials extension..."),p(y.INFO,o,"...skipping tutorials extension because it is globally disabled..."),p(y.INFO,o,"...loaded rsp-lab-extension.")}))},id:E,requires:[o.IMainMenu,i.IDocumentManager,r.IStatusBar],autoStart:!0}}}]);