"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Generated by https://github.com/foxglove/schemas"""

import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class RawImage(google.protobuf.message.Message):
    """A raw image"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIMESTAMP_FIELD_NUMBER: builtins.int
    FRAME_ID_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    ENCODING_FIELD_NUMBER: builtins.int
    STEP_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    frame_id: builtins.str
    """Frame of reference for the image. The origin of the frame is the optical center of the camera. +x points to the right in the image, +y points down, and +z points into the plane of the image."""
    width: builtins.int
    """Image width"""
    height: builtins.int
    """Image height"""
    encoding: builtins.str
    """Encoding of the raw image data

    Supported values: `8UC1`, `8UC3`, `16UC1` (little endian), `32FC1` (little endian), `bayer_bggr8`, `bayer_gbrg8`, `bayer_grbg8`, `bayer_rggb8`, `bgr8`, `bgra8`, `mono8`, `mono16`, `rgb8`, `rgba8`, `uyvy` or `yuv422`, `yuyv` or `yuv422_yuy2`
    """
    step: builtins.int
    """Byte length of a single row"""
    data: builtins.bytes
    """Raw image data"""
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Timestamp of image"""

    def __init__(
        self,
        *,
        timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        frame_id: builtins.str = ...,
        width: builtins.int = ...,
        height: builtins.int = ...,
        encoding: builtins.str = ...,
        step: builtins.int = ...,
        data: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["timestamp", b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "encoding", b"encoding", "frame_id", b"frame_id", "height", b"height", "step", b"step", "timestamp", b"timestamp", "width", b"width"]) -> None: ...

global___RawImage = RawImage
