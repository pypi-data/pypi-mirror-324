"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Generated by https://github.com/foxglove/schemas"""

import builtins
from . import Color_pb2 as foxglove_Color_pb2
from . import Point2_pb2 as foxglove_Point2_pb2
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class TextAnnotation(google.protobuf.message.Message):
    """A text label on a 2D image"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIMESTAMP_FIELD_NUMBER: builtins.int
    POSITION_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    FONT_SIZE_FIELD_NUMBER: builtins.int
    TEXT_COLOR_FIELD_NUMBER: builtins.int
    BACKGROUND_COLOR_FIELD_NUMBER: builtins.int
    text: builtins.str
    """Text to display"""
    font_size: builtins.float
    """Font size in pixels"""
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Timestamp of annotation"""

    @property
    def position(self) -> foxglove_Point2_pb2.Point2:
        """Bottom-left origin of the text label in 2D image coordinates (pixels).
        The coordinate uses the top-left corner of the top-left pixel of the image as the origin.
        """

    @property
    def text_color(self) -> foxglove_Color_pb2.Color:
        """Text color"""

    @property
    def background_color(self) -> foxglove_Color_pb2.Color:
        """Background fill color"""

    def __init__(
        self,
        *,
        timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        position: foxglove_Point2_pb2.Point2 | None = ...,
        text: builtins.str = ...,
        font_size: builtins.float = ...,
        text_color: foxglove_Color_pb2.Color | None = ...,
        background_color: foxglove_Color_pb2.Color | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["background_color", b"background_color", "position", b"position", "text_color", b"text_color", "timestamp", b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["background_color", b"background_color", "font_size", b"font_size", "position", b"position", "text", b"text", "text_color", b"text_color", "timestamp", b"timestamp"]) -> None: ...

global___TextAnnotation = TextAnnotation
