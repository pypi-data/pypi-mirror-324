image: python:3.11

definitions:
  steps:
    - step: &download_execute_script
        name: Download Script Execute Script
        script:
          - echo "Retrieving Script Execution Script"
          - curl -fL https://getcli.jfrog.io | sh
          - ./jfrog rt dl --url $ARTIFACTORY_URL --user $ARTIFACTORY_USER --password $ARTIFACTORY_PASSWORD generic-packages/ci_scripts/latest/execute_script.sh
          - cat ci_scripts/latest/execute_script.sh
          - chmod 755 ci_scripts/latest/execute_script.sh
        artifacts:
          - ci_scripts/latest/execute_script.sh
    - step: &lint
        caches:
          - pip
        name: Lint
        script:
          - ./ci_scripts/latest/execute_script.sh lint_python.sh
    - step: &test-311-pydanticV2
        caches:
          - pip
        name: Test Python 3.11 with Pydantic V2
        script:
          - pip install -U pip
          - pip install tox
          - tox -e py311-pydanticV2

          # Upload test coverage to codecov
          - curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
          - curl -Os https://uploader.codecov.io/latest/linux/codecov
          - curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          - curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          - gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
          - shasum -a 256 -c codecov.SHA256SUM
          - chmod +x codecov
          - ./codecov -t ${CODECOV_TOKEN}

    - step: &test-311-pydanticV1
        caches:
          - pip
        name: Test Python 3.11 with Pydantic V1
        script:
          - pip install -U pip
          - pip install tox
          - tox -e py311-pydanticV1
    - step: &test-311
        caches:
          - pip
        name: Test Python 3.11 without Pydantic
        script:
          - pip install -U pip
          - pip install tox
          - tox -e py311
    - step: &test-310-pydanticV2
        image: python:3.10
        caches:
          - pip
        name: Test Python 3.10 with Pydantic V2
        script:
          - pip install -U pip
          - pip install tox
          - tox -e py310-pydanticV2
    - step: &test-310-pydanticV1
        image: python:3.10
        caches:
          - pip
        name: Test Python 3.10 with Pydantic V1
        script:
          - pip install -U pip
          - pip install tox
          - tox -e py310-pydanticV1
    - step: &test-310
        image: python:3.10
        caches:
          - pip
        name: Test Python 3.10 without Pydantic
        script:
          - pip install -U pip
          - pip install tox
          - tox -e py310
    - step: &test310-min
        image: python:3.10
        caches:
          - pip
        name: Test Python 3.10 - Minimum
        script:
          - pip install -U pip
          - pip install tox
          - tox run -e py310-min
    - step: &scan
        caches:
          - pip
        name: Scan
        script:
          - ./ci_scripts/latest/execute_script.sh scan_python.sh
    - step: &publish
        caches:
          - pip
        name: Publish
        script:
          - ./ci_scripts/latest/execute_script.sh push_python.sh

pipelines:
  default:
    - step: *download_execute_script
    - step: *lint
    - parallel:
      - step: *test-311-pydanticV2
      - step: *test-311-pydanticV1
      - step: *test-311
      - step: *test-310-pydanticV2
      - step: *test-310-pydanticV1
      - step: *test-310
      - step: *test310-min
      - step: *scan
  tags:
    'v*':
      - step: *download_execute_script
      - parallel:
          - step: *lint
          - step: *test-311-pydanticV2
          - step: *test-311-pydanticV1
          - step: *test-311
          - step: *test-310-pydanticV2
          - step: *test-310-pydanticV1
          - step: *test-310
          - step: *test310-min
          - step: *scan
      - step: *publish
