[project]
name = "linkedin_influencer_mcp"
version = "0.1.7"
description = "LinkedIn influencer automation with MCP"
requires-python = ">=3.10"
authors = [
    {name = "Shrey Shah", email = "ssshrey@gmail.com"}
]
readme = "README.md"
license = {text = "MIT"}
keywords = ["linkedin", "automation", "influencer", "mcp"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "openai>=1.0.0",
    "python-dotenv>=1.0.1",
    "requests>=2.31.0",
    "linkedin-api>=2.0.0",
    "fastmcp>=0.4.1",
    "playwright>=1.49.1",
    "beautifulsoup4>=4.12.3",
    "bs4>=0.0.2",
    "lxml>=4.9.0",
    "mcp[cli]>=1.0.0",
    "langchain_groq>=0.1.0",
    "pydantic>=2.10.6",
    "uvicorn>=0.24.0",
    "langchain_google_genai>=0.0.1",
    "langchain_openai>=0.0.1",
    "langchain_core",
    "langchain_community"
]

[project.scripts]
linkedin-influencer-mcp = "linkedin_influencer_mcp.main:main"

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/docs
'''

[tool.pylint.messages_control]
disable = [
    "broad-exception-raised",
    "logging-fstring-interpolation",
    "redefined-builtin",
    "missing-module-docstring",
    "missing-function-docstring",
    "missing-class-docstring",
]

[project.optional-dependencies]
dev = [
    "mypy>=1.7.0",
    "ruff>=0.1.6",
    "black>=24.1.1",
    "flake8>=7.0.0",
    "isort>=5.13.2",
    "pre-commit>=3.6.0"
]
test = [
    "pytest>=8.3.4",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.23.5",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
markers = [
    "asyncio: mark test as async",
] 
