"""Initial schema with all tables and relationships

Revision ID: 4ff8fb67c367
Revises: 
Create Date: 2025-01-25 09:54:01.771600+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4ff8fb67c367'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('flows',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.Column('source_id', sa.String(length=255), nullable=False),
    sa.Column('flow_version', sa.Integer(), nullable=True),
    sa.Column('input_component', sa.String(length=255), nullable=True),
    sa.Column('output_component', sa.String(length=255), nullable=True),
    sa.Column('is_component', sa.Boolean(), nullable=True),
    sa.Column('folder_id', sa.String(length=255), nullable=True),
    sa.Column('folder_name', sa.String(length=255), nullable=True),
    sa.Column('icon', sa.String(length=255), nullable=True),
    sa.Column('icon_bg_color', sa.String(length=50), nullable=True),
    sa.Column('gradient', sa.Boolean(), nullable=True),
    sa.Column('liked', sa.Boolean(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('flow_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('input_data', sa.JSON(), nullable=False),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('error', sa.Text(), nullable=True),
    sa.Column('tries', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('next_retry_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['flow_id'], ['flows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('flow_components',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('flow_id', sa.UUID(), nullable=False),
    sa.Column('component_id', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('template', sa.JSON(), nullable=True),
    sa.Column('tweakable_params', sa.JSON(), nullable=True),
    sa.Column('is_input', sa.Boolean(), nullable=True),
    sa.Column('is_output', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['flow_id'], ['flows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('schedules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('flow_id', sa.UUID(), nullable=False),
    sa.Column('schedule_type', sa.String(length=50), nullable=False),
    sa.Column('schedule_expr', sa.String(length=255), nullable=False),
    sa.Column('flow_params', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('next_run_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['flow_id'], ['flows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('task_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('level', sa.String(length=20), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('component_id', sa.String(length=255), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('workers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('hostname', sa.String(length=255), nullable=False),
    sa.Column('pid', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('current_task_id', sa.UUID(), nullable=True),
    sa.Column('stats', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_heartbeat', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['current_task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workers')
    op.drop_table('task_logs')
    op.drop_table('schedules')
    op.drop_table('flow_components')
    op.drop_table('tasks')
    op.drop_table('flows')
    # ### end Alembic commands ###
