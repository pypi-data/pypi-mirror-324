services:
  # Automagik's PostgreSQL
  automagik-db:
    image: postgres:16
    environment:
      POSTGRES_USER: automagik
      POSTGRES_PASSWORD: automagik
      POSTGRES_DB: automagik
    ports:
      - "15432:5432"
    volumes:
      - automagik-postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U automagik"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - automagik-network

  # Optional LangFlow service
  langflow:
    profiles:
      - langflow
    image: langflowai/langflow:latest
    pull_policy: always
    ports:
      - "17860:7860"
    environment:
      - LANGFLOW_WORKERS=2
    volumes:
      - langflow-data:/data
    networks:
      - automagik-network

  # Automagik API service
  automagik-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: automagik-api:local
    pull_policy: never
    command: python -m automagik api
    env_file: ../.env
    environment:
      DATABASE_URL: postgresql+asyncpg://automagik:automagik@automagik-db:5432/automagik
    ports:
      - "8888:8888"
    volumes:
      - ..:/app
    working_dir: /app
    depends_on:
      automagik-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/health"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - automagik-network

  # Automagik Worker service
  automagik-worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: python -m automagik worker start
    env_file: ../.env
    environment:
      DATABASE_URL: postgresql+asyncpg://automagik:automagik@automagik-db:5432/automagik
    depends_on:
      automagik-db:
        condition: service_healthy
      automagik-api:
        condition: service_healthy
    networks:
      - automagik-network

volumes:
  automagik-postgres:
  langflow-data:

networks:
  automagik-network:
    name: automagik-network
