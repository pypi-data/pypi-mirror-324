[project]
name = "inputtino-web-client"
version = "0.1.0"
description = "A Python library for controlling mouse and keyboard input through the Inputtino HTTP API."
readme = "README.md"
authors = [
    { name = "GesonAnko", email = "59220704+Geson-anko@users.noreply.github.com" }
]
requires-python = ">=3.12"
dependencies = [
    "httpx>=0.28.1",
    "pydantic>=2.10.6",
]
keywords = [
  "control",
  "gui",
  "automation",
  "keyboard",
  "mouse",
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: MIT License",
  "Environment :: X11 Applications",
  "Natural Language :: English",
  "Natural Language :: Japanese",
  "Intended Audience :: Developers",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

[project.optional-dependencies]
cli = [
    "cmd2>=2.5.11",
    "tyro>=0.9.13",
]

[project.scripts]
inputtino-cli = "inputtino_web_client.cli:main"

[project.urls]
Repository = "https://github.com/Geson-anko/inputtino-web-client"
Issues = "https://github.com/Geson-anko/inputtino-web-client/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pre-commit>=4.1.0",
    "pyright>=1.1.393",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
]

[tool.pytest.ini_options]
addopts = [
  "--color=yes",
  "--durations=0",
  "--strict-markers",
  "--doctest-modules",
]
filterwarnings = [
  "ignore::DeprecationWarning",
  "ignore::UserWarning",
]
log_cli = "True"

minversion = "6.0"
testpaths = "tests/"

markers = [
    "practical: tests that interact with actual endpoints",
]

[tool.pyright]
pythonVersion = "3.12"
exclude = [
  "**/node_modules",
  "**/__pycache__",
]
strict = ["./src/"]
reportMissingTypeStubs = false

[tool.ruff]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.12
target-version = "py312"

include = ["*.py"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".ipynb_checkpoints",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "build",
    "dist",
    "node_modules",
    ".venv",
]

# Linter ignore codes
[tool.ruff.lint]

select = [
  "E",
  "F",
  "W",
  "I",
]

ignore = [
  "E203", # Whitespace before ':' (E203)
  "E402", # Module level import not at top of file.
  "E501", # Line too long (82 &gt; 79 characters) (E501)
  "F811", # Redefinition of unused name from line n (F811)
  "E741", # Do not define classes named 'I', 'O', or 'l' (E742)
  "E266", # too many leading '#' for block comment (E266)
  "F401", # Module imported but unused,
]


[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
