name: Python Run Tests Win

on:
  push:
    branches: [main]
    paths:
      - "**"
  pull_request:
    branches: [main]
    paths:
      - "**"
      - "!README.md"
      - "!**/meta.yaml"
      - "!**/pyproject.toml"  

jobs:
  test:
    name: Test Env ${{ matrix.download_name }}-${{ matrix.python-version}}
    runs-on: ${{ matrix.os }}
    env:
        TERM: unknown
        SNOWFLAKE_CONNECTIONS_MYCONNECTION_AUTHENTICATOR: SNOWFLAKE_JWT
        SNOWFLAKE_CONNECTIONS_MYCONNECTION_DATABASE: DEVOPS
        SNOWFLAKE_CONNECTIONS_MYCONNECTION_SCHEMA: TRIAL_SCHEMA
        SNOWFLAKE_CONNECTIONS_MYCONNECTION_WAREHOUSE: COMPUTE_WH
        SNOWFLAKE_CONNECTIONS_MYCONNECTION_ROLE: ACCOUNTADMIN
        SNOWFLAKE_CONNECTIONS_MYCONNECTION_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_CONNECTIONS_MYCONNECTION_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_CONNECTIONS_MYCONNECTION_PRIVATE_KEY_RAW: ${{ secrets.SNOWFLAKE_PRIVATE_KEY_RAW }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows
          - os: windows-latest
            python-version: "3.9"
            cloud-provider: aws
            snow_cli_version: "2.8.2"
            download_name: windows  
          - os: windows-latest
            python-version: "3.10"
            cloud-provider: aws
            snow_cli_version: "3.2.0"
            download_name: windows
          - os: windows-latest
            python-version: "3.11"
            cloud-provider: aws
            snow_cli_version: "3.2.0"
            download_name: windows  
          - os: windows-latest
            python-version: "3.12"
            cloud-provider: aws
            snow_cli_version: "3.2.0"
            download_name: windows   
          

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Print Current Python Env
        run: |
          python --version && pip --version

      - name: Set up Snowflake CLI
        uses: Snowflake-Labs/snowflake-cli-action@main
        with:
          cli-version: ${{ matrix.snow_cli_version }}
          default-config-file-path: ".github/workflows/config/config.toml"

      - name: Execute Snowflake CLI
        run: |
          snow --info   
          snow --version


      - name: Set up key (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $ParentDir = Split-Path -Parent ${{ github.workspace }}
          $PrivateKeyFile = Join-Path $ParentDir '.ssh\key.p8'

          New-Item -ItemType Directory -Force -Path "$ParentDir\.ssh" | Out-Null
          Set-Content -Path $PrivateKeyFile -Value $Env:SNOWFLAKE_CONNECTIONS_MYCONNECTION_PRIVATE_KEY_RAW
          Write-Host "Private key file created at: $PrivateKeyFile"
          
          icacls $PrivateKeyFile /inheritance:r /grant:r "$($Env:USERNAME):(R,W)"
          icacls $PrivateKeyFile /grant:r *S-1-5-32-544:RW     

      - name: Set up Connection Snowflake CLI (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $PARENT_DIR = Split-Path -Parent "${{ github.workspace }}"
          $PRIVATE_KEY_FILE = (Join-Path (Join-Path $PARENT_DIR '.ssh') 'key.p8') -replace '\\', '\\\\'
          $CONFIG_FILE=".github\workflows\config\config.toml"
          $SNOWFLAKE_CONFIG_DIR = "$env:USERPROFILE\.snowflake"
          $SNOWFLAKE_CONFIG_PATH = "$SNOWFLAKE_CONFIG_DIR\config.toml"

          Write-Output "SNOWFLAKE_CONFIG_DIR:  $SNOWFLAKE_CONFIG_DIR"
          Write-Output "SNOWFLAKE_CONFIG_PATH: $SNOWFLAKE_CONFIG_PATH"
          
          New-Item -ItemType Directory -Force -Path $SNOWFLAKE_CONFIG_DIR

          Set-Content -Path $CONFIG_FILE -Value "[connections.myconnection]"
          Add-Content -Path $CONFIG_FILE -Value "authenticator = `"$env:SNOWFLAKE_CONNECTIONS_MYCONNECTION_AUTHENTICATOR`""
          Add-Content -Path $CONFIG_FILE -Value "schema = `"$env:SNOWFLAKE_CONNECTIONS_MYCONNECTION_SCHEMA`""
          Add-Content -Path $CONFIG_FILE -Value "account = `"$env:SNOWFLAKE_CONNECTIONS_MYCONNECTION_ACCOUNT`""
          Add-Content -Path $CONFIG_FILE -Value "user = `"$env:SNOWFLAKE_CONNECTIONS_MYCONNECTION_USER`""
          Add-Content -Path $CONFIG_FILE -Value "database = `"$env:SNOWFLAKE_CONNECTIONS_MYCONNECTION_DATABASE`""
          Add-Content -Path $CONFIG_FILE -Value "warehouse = `"$env:SNOWFLAKE_CONNECTIONS_MYCONNECTION_WAREHOUSE`""
          Add-Content -Path $CONFIG_FILE -Value "role = `"$env:SNOWFLAKE_CONNECTIONS_MYCONNECTION_ROLE`""
          Add-Content -Path $CONFIG_FILE -Value "private_key_file = `"$PRIVATE_KEY_FILE`""

          Copy-Item -Path $CONFIG_FILE -Destination $SNOWFLAKE_CONFIG_PATH
          icacls $PRIVATE_KEY_FILE /inheritance:r /grant:r "$($env:USERNAME):(R)"
          icacls $SNOWFLAKE_CONFIG_PATH /inheritance:r /grant:r "$($env:USERNAME):(R)"

          Write-Output "Snowflake configuration at $SNOWFLAKE_CONFIG_PATH"
          Get-Content $SNOWFLAKE_CONFIG_PATH

      - name: Test Snowflake CLI
        run: |
          snow --info && snow --version
          snow connection test -c myconnection
          snow sql -q " Select current_organization_name(); select current_account_name();" -c myconnection
          snow connection set-default myconnection
          snow connection list
        shell: pwsh
          
      - name: Configure PySpark for Python
        if: runner.os == 'Windows'
        run: |
            echo PYSPARK_PYTHON=$PythonPath >> $GITHUB_ENV
            echo PYSPARK_DRIVER_PYTHON=$PythonPath >> $GITHUB_ENV
      
      - name: Check Python versions
        if: runner.os == 'Windows'
        run: |
          python --version
          echo PYSPARK_PYTHON=%PYSPARK_PYTHON%
          echo PYSPARK_DRIVER_PYTHON=%PYSPARK_DRIVER_PYTHON%
          python -c "import sys; print(sys.version)"

     
     


