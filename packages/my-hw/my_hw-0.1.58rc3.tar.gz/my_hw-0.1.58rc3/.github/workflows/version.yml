name: Bump Version

on:
  workflow_run:
    workflows: ["Release"]
    types:
      - completed

permissions:
  contents: write
  pull-requests: write

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug GitHub Variables
        run: |
          echo "GITHUB_SERVER_URL: ${GITHUB_SERVER_URL}"
          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
          echo "GITHUB_REF: ${GITHUB_REF}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
          echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
        env:
          GITHUB_SERVER_URL: ${{ github.server_url }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_WORKSPACE: ${{ github.workspace }}
          GITHUB_WORKFLOW: ${{ github.workflow }}

      - name: Debug GITHUB_REF
        run: |
          echo "GITHUB_REF: $GITHUB_REF"

      - name: Get Version
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
              VERSION=${GITHUB_REF#refs/tags/}
              VERSION=${VERSION#v}
              echo "version=$VERSION"
          else
              echo "GIT REF is not a tag"
              VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
              VERSION=${VERSION#v}
              echo "version=$VERSION"
          fi

          if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(rc[0-9]+)?$ ]]; then
            echo "Error: Invalid version format ($VERSION)"
            exit 1
          fi

          echo "version=$VERSION" >> $GITHUB_ENV
          echo "VERSION detected: $VERSION"

      - name: Repository Setup
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://__token__:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git config --get remote.origin.url

      - name: Update Version files
        shell: bash
        run: |
          set -e  
          echo "Current directory: $(pwd)"
          echo "Listing files in the workspace:"
          ls -la

          echo "Searching for files to update..."
          find . -name "$META_FILE" -o -name "$FILE_NAME"

          echo "Updating $META_FILE files..."
          find . -name "$META_FILE" -exec sed -i "s/{% set version = \".*\" %}/{% set version = \"${VERSION}\" %}/" {} \;

          echo "Updating $FILE_NAME files..."
          find . -name "$FILE_NAME" -exec sed -i "s/^__version__ = \".*\"/__version__ = \"${VERSION}\"/" {} \;

          echo "Updated files:"
          find . -name "$META_FILE" -exec sh -c 'echo "File: $1" && grep "{% set version = \"" $1' _ {} \;
          find . -name "$FILE_NAME" -exec sh -c 'echo "File: $1" && grep "__version__" $1' _ {} \;
        env:
          VERSION: ${{ env.version }}
          META_FILE: meta.yaml
          FILE_NAME: __version__.py

      - name: Create temporary branch
        id: git_branch
        run: |
          set -e  
          set -o pipefail

          TEMP_BRANCH="bump-version-${VERSION}"

          echo "Checking if branch $TEMP_BRANCH exists..."
          if git ls-remote --heads origin "$TEMP_BRANCH" | grep -q "$TEMP_BRANCH"; then
            echo "Branch $TEMP_BRANCH exists remotely. Deleting..."
            git push origin --delete "$TEMP_BRANCH"
          fi

          if git branch --list | grep -q "$TEMP_BRANCH"; then
            echo "Branch $TEMP_BRANCH exists locally. Deleting..."
            git branch -D "$TEMP_BRANCH" || echo "Branch $TEMP_BRANCH not found locally. Skipping deletion."
          fi

          echo "Creating new branch: $TEMP_BRANCH"
          git checkout -b "$TEMP_BRANCH"
          git status
          echo "TEMP_BRANCH=$TEMP_BRANCH" >> $GITHUB_OUTPUT
        env:
          GITHUB_REF: ${{ github.ref }}
          VERSION: ${{ env.version }}

      - name: Commit and push changes
        shell: bash
        run: |
          set -e
          set -o pipefail

          git add . --verbose
          git status

          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Bump version to ${{ env.version }}"
            git push origin "$TEMP_BRANCH"
            echo "Changes pushed to $TEMP_BRANCH."
            git status
            git log --oneline -1
          fi
        env:
          VERSION: ${{ env.version }}
          TEMP_BRANCH: ${{ steps.git_branch.outputs.TEMP_BRANCH }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REF: ${{ github.ref }}
