# coding: utf-8

"""
    API Alegra Proveedor Electrónico Colombia

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date
from pydantic import BaseModel, ConfigDict, Field, StrictFloat, StrictInt
from typing import Any, ClassVar, Dict, List, Optional, Union
from typing import Optional, Set
from typing_extensions import Self

class CreatePayrollRequestGovernmentDataPeriodo(BaseModel):
    """
    Objeto con la información del periodo de nómina que se desea emitir
    """ # noqa: E501
    fecha_ingreso: date = Field(description="Este dato se debe diligenciar solamente en el registro del mes en que el trabajador o aprendiz presenta ingreso o vinculación a la nómina del reportante. (en caso de tener mas de un ingreso en el mes, se debe reportar la primera fecha en la que se presenta esta novedad en el mes que se esta reportando).", alias="FechaIngreso")
    tiempo_laborado: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="Cantidad de Tiempo en días que lleva laborando el Trabajador en la empresa", alias="TiempoLaborado")
    fecha_retiro: Optional[date] = Field(default=None, description="Este dato se debe diligenciar solamente en el registro del mes en que el trabajador o aprendiz presenta retiro de la nómina del reportante.(en caso de tener mas de un retiro en el mes, se debe reportar la ultima fecha en la que se presenta esta novedad en el mes que se esta reportando).", alias="FechaRetiro")
    fecha_liquidacion_inicio: date = Field(description="Fecha de inicio de Liquidación de Nómina", alias="FechaLiquidacionInicio")
    fecha_liquidacion_fin: date = Field(description="Fecha fin de Liquidación de Nómina", alias="FechaLiquidacionFin")
    __properties: ClassVar[List[str]] = ["FechaIngreso", "TiempoLaborado", "FechaRetiro", "FechaLiquidacionInicio", "FechaLiquidacionFin"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of CreatePayrollRequestGovernmentDataPeriodo from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of CreatePayrollRequestGovernmentDataPeriodo from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "FechaIngreso": obj.get("FechaIngreso"),
            "TiempoLaborado": obj.get("TiempoLaborado"),
            "FechaRetiro": obj.get("FechaRetiro"),
            "FechaLiquidacionInicio": obj.get("FechaLiquidacionInicio"),
            "FechaLiquidacionFin": obj.get("FechaLiquidacionFin")
        })
        return _obj


