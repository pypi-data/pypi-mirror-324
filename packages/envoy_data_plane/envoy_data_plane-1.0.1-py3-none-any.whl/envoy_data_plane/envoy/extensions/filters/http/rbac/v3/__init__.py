# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/rbac/v3/rbac.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "Rbac",
    "RbacPerRoute",
)

from dataclasses import dataclass

import betterproto2

from .......message_pool import default_message_pool

betterproto2.check_compiler_version("0.2.4")


@dataclass(eq=False, repr=False)
class Rbac(betterproto2.Message):
    """
    [#protodoc-title: RBAC]
    Role-Based Access Control :ref:`configuration overview <config_http_filters_rbac>`.
    [#extension: envoy.filters.http.rbac]

    RBAC filter config.
    [#next-free-field: 8]
    """

    rules: "_____config__rbac__v3__.Rbac | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Specify the RBAC rules to be applied globally.
    If absent, no enforcing RBAC policy will be applied.
    If present and empty, DENY.
    If both rules and matcher are configured, rules will be ignored.
    """

    rules_stat_prefix: "str" = betterproto2.field(6, betterproto2.TYPE_STRING)
    """
    If specified, rules will emit stats with the given prefix.
    This is useful to distinguish the stat when there are more than 1 RBAC filter configured with
    rules.
    """

    matcher: "______xds__type__matcher__v3__.Matcher | None" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    The match tree to use when resolving RBAC action for incoming requests. Requests do not
    match any matcher will be denied.
    If absent, no enforcing RBAC matcher will be applied.
    If present and empty, deny all requests.
    """

    shadow_rules: "_____config__rbac__v3__.Rbac | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Shadow rules are not enforced by the filter (i.e., returning a 403)
    but will emit stats and logs and can be used for rule testing.
    If absent, no shadow RBAC policy will be applied.
    If both shadow rules and shadow matcher are configured, shadow rules will be ignored.
    """

    shadow_matcher: "______xds__type__matcher__v3__.Matcher | None" = (
        betterproto2.field(5, betterproto2.TYPE_MESSAGE, optional=True)
    )
    """
    The match tree to use for emitting stats and logs which can be used for rule testing for
    incoming requests.
    If absent, no shadow matcher will be applied.
    """

    shadow_rules_stat_prefix: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)
    """
    If specified, shadow rules will emit stats with the given prefix.
    This is useful to distinguish the stat when there are more than 1 RBAC filter configured with
    shadow rules.
    """

    track_per_rule_stats: "bool" = betterproto2.field(7, betterproto2.TYPE_BOOL)
    """
    If track_per_rule_stats is true, counters will be published for each rule and shadow rule.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.rbac.v3", "RBAC", Rbac
)


@dataclass(eq=False, repr=False)
class RbacPerRoute(betterproto2.Message):
    rbac: "Rbac | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Override the global configuration of the filter with this new config.
    If absent, the global RBAC policy will be disabled for this route.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.rbac.v3", "RBACPerRoute", RbacPerRoute
)


from .......xds.type.matcher import v3 as ______xds__type__matcher__v3__
from ......config.rbac import v3 as _____config__rbac__v3__
