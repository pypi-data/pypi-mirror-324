# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/network/sni_dynamic_forward_proxy/v3/sni_dynamic_forward_proxy.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("FilterConfig",)

from dataclasses import dataclass

import betterproto2

from .......message_pool import default_message_pool

betterproto2.check_compiler_version("0.2.4")


@dataclass(eq=False, repr=False)
class FilterConfig(betterproto2.Message):
    """
    [#protodoc-title: SNI dynamic forward proxy]

    Configuration for the SNI-based dynamic forward proxy filter. See the
    :ref:`architecture overview <arch_overview_http_dynamic_forward_proxy>` for
    more information. Note this filter must be configured along with
    :ref:`TLS inspector listener filter <config_listener_filters_tls_inspector>`
    to work.
    [#extension: envoy.filters.network.sni_dynamic_forward_proxy]

    Oneofs:
        - port_specifier:
    """

    dns_cache_config: "____common__dynamic_forward_proxy__v3__.DnsCacheConfig | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    The DNS cache configuration that the filter will attach to. Note this
    configuration must match that of associated :ref:`dynamic forward proxy
    cluster configuration
    <envoy_v3_api_field_extensions.clusters.dynamic_forward_proxy.v3.ClusterConfig.dns_cache_config>`.
    """

    port_value: "int | None" = betterproto2.field(
        2, betterproto2.TYPE_UINT32, optional=True, group="port_specifier"
    )
    """
    The port number to connect to the upstream.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.network.sni_dynamic_forward_proxy.v3",
    "FilterConfig",
    FilterConfig,
)


from .....common.dynamic_forward_proxy import (
    v3 as ____common__dynamic_forward_proxy__v3__,
)
