# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from .keyframe_sampling_method_enum import KeyframeSamplingMethodEnum

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class DatasetSettings(pydantic.BaseModel):
    """
    Dataset settings to include within a CreateDatasetRequest object
    """

    keyframe_sampling_method: typing.Optional[KeyframeSamplingMethodEnum] = pydantic.Field(
        alias="keyframeSamplingMethod", description="Sampling method to extract keyframes from any videos in dataset"
    )
    keyframe_uniform_fps_sampling_rate: typing.Optional[float] = pydantic.Field(
        alias="keyframeUniformFpsSamplingRate",
        description="Num of keyframes/sec to sample from videos if using uniform sampling method",
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
