# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class PagedPageDetailsResponse(pydantic.BaseModel):
    """
    Pagination metadata
    """

    current_page: int = pydantic.Field(alias="currentPage", description="Current page number")
    last_page: typing.Optional[int] = pydantic.Field(
        alias="lastPage", description="Max page number based on limit and total number of items"
    )
    limit: int = pydantic.Field(description="Number of items to return")
    offset: int = pydantic.Field(description="Starting index to return")
    total: typing.Optional[int] = pydantic.Field(description="Total number of items")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
