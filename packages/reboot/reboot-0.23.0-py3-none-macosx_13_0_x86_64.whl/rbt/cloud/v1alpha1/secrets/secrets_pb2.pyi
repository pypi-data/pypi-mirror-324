"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import rbt.v1alpha1.tasks_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Secret(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___Secret = Secret

@typing_extensions.final
class WriteRequest(google.protobuf.message.Message):
    """/////////////////////////////////////////////////////////////////////"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATA_FIELD_NUMBER: builtins.int
    data: builtins.bytes
    def __init__(
        self,
        *,
        data: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data"]) -> None: ...

global___WriteRequest = WriteRequest

@typing_extensions.final
class WriteResponse(google.protobuf.message.Message):
    """TODO: Our writer methods delegate their side-effects to tasks, which
    makes their return types much more complicated.
      see https://github.com/reboot-dev/mono/issues/2316
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TASK_ID_FIELD_NUMBER: builtins.int
    @property
    def task_id(self) -> rbt.v1alpha1.tasks_pb2.TaskId: ...
    def __init__(
        self,
        *,
        task_id: rbt.v1alpha1.tasks_pb2.TaskId | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["task_id", b"task_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["task_id", b"task_id"]) -> None: ...

global___WriteResponse = WriteResponse

@typing_extensions.final
class WriteTaskResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ERROR_FIELD_NUMBER: builtins.int
    error: builtins.str
    def __init__(
        self,
        *,
        error: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_error", b"_error", "error", b"error"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_error", b"_error", "error", b"error"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_error", b"_error"]) -> typing_extensions.Literal["error"] | None: ...

global___WriteTaskResponse = WriteTaskResponse

@typing_extensions.final
class ReadResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATA_FIELD_NUMBER: builtins.int
    data: builtins.bytes
    def __init__(
        self,
        *,
        data: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data"]) -> None: ...

global___ReadResponse = ReadResponse

@typing_extensions.final
class DeleteResponse(google.protobuf.message.Message):
    """TODO: Our writer methods delegate their side-effects to tasks, which
    makes their return types much more complicated.
      see https://github.com/reboot-dev/mono/issues/2316
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TASK_ID_FIELD_NUMBER: builtins.int
    @property
    def task_id(self) -> rbt.v1alpha1.tasks_pb2.TaskId: ...
    def __init__(
        self,
        *,
        task_id: rbt.v1alpha1.tasks_pb2.TaskId | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["task_id", b"task_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["task_id", b"task_id"]) -> None: ...

global___DeleteResponse = DeleteResponse

@typing_extensions.final
class DeleteTaskResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ERROR_FIELD_NUMBER: builtins.int
    error: builtins.str
    def __init__(
        self,
        *,
        error: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_error", b"_error", "error", b"error"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_error", b"_error", "error", b"error"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_error", b"_error"]) -> typing_extensions.Literal["error"] | None: ...

global___DeleteTaskResponse = DeleteTaskResponse
