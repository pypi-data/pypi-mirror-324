"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from documenso_sdk import utils
from documenso_sdk.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, TypedDict


class TemplateDeleteTemplateDirectLinkRequestBodyTypedDict(TypedDict):
    template_id: float


class TemplateDeleteTemplateDirectLinkRequestBody(BaseModel):
    template_id: Annotated[float, pydantic.Field(alias="templateId")]


class TemplateDeleteTemplateDirectLinkTemplatesDirectLinkIssuesTypedDict(TypedDict):
    message: str


class TemplateDeleteTemplateDirectLinkTemplatesDirectLinkIssues(BaseModel):
    message: str


class TemplateDeleteTemplateDirectLinkTemplatesDirectLinkResponseResponseBodyData(
    BaseModel
):
    message: str

    code: str

    issues: Optional[
        List[TemplateDeleteTemplateDirectLinkTemplatesDirectLinkIssues]
    ] = None


class TemplateDeleteTemplateDirectLinkTemplatesDirectLinkResponseResponseBody(
    Exception
):
    r"""Internal server error"""

    data: TemplateDeleteTemplateDirectLinkTemplatesDirectLinkResponseResponseBodyData

    def __init__(
        self,
        data: TemplateDeleteTemplateDirectLinkTemplatesDirectLinkResponseResponseBodyData,
    ):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data,
            TemplateDeleteTemplateDirectLinkTemplatesDirectLinkResponseResponseBodyData,
        )


class TemplateDeleteTemplateDirectLinkIssuesTypedDict(TypedDict):
    message: str


class TemplateDeleteTemplateDirectLinkIssues(BaseModel):
    message: str


class TemplateDeleteTemplateDirectLinkTemplatesDirectLinkResponseBodyData(BaseModel):
    message: str

    code: str

    issues: Optional[List[TemplateDeleteTemplateDirectLinkIssues]] = None


class TemplateDeleteTemplateDirectLinkTemplatesDirectLinkResponseBody(Exception):
    r"""Invalid input data"""

    data: TemplateDeleteTemplateDirectLinkTemplatesDirectLinkResponseBodyData

    def __init__(
        self, data: TemplateDeleteTemplateDirectLinkTemplatesDirectLinkResponseBodyData
    ):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data,
            TemplateDeleteTemplateDirectLinkTemplatesDirectLinkResponseBodyData,
        )


class TemplateDeleteTemplateDirectLinkResponseBodyTypedDict(TypedDict):
    r"""Successful response"""

    success: bool


class TemplateDeleteTemplateDirectLinkResponseBody(BaseModel):
    r"""Successful response"""

    success: bool
