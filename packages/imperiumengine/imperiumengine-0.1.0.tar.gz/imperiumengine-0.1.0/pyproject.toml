[build-system]  # https://python-poetry.org/docs/pyproject/#poetry-and-pep-517
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project]  # https://packaging.python.org/en/latest/specifications/pyproject-toml/
name = "imperiumengine"
version = "0.1.0"
description = "add"
readme = "README.md"
license-files = ["LICENSE*"]
authors = [
  { name = "luiz correa (zcorrea357)", email = "zcorrea357@gmail.com" },
]
requires-python = ">=3.13,<4.0"
dependencies = [
    "sqlalchemy (>=2.0.37,<3.0.0)",
    "pandas (>=2.2.3,<3.0.0)",
    "numpy (>=2.2.2,<3.0.0)"
]

[project.urls]  # https://packaging.python.org/en/latest/specifications/well-known-project-urls/#well-known-labels
homepage = "https://github.com/ImperiumSyndicate/ImperiumEngine"
source = "https://github.com/ImperiumSyndicate/ImperiumEngine"
changelog = "https://github.com/ImperiumSyndicate/ImperiumEngine/blob/main/CHANGELOG.md"
releasenotes = "https://github.com/ImperiumSyndicate/ImperiumEngine/releases"
documentation = "https://github.com/ImperiumSyndicate/ImperiumEngine"
issues = "https://github.com/ImperiumSyndicate/ImperiumEngine/issues"

[tool.poetry.group.test.dependencies]  # https://python-poetry.org/docs/managing-dependencies#dependency-groups
commitizen = ">=4.1.0"
coverage = { extras = ["toml"], version = ">=7.6.10" }
mypy = ">=1.14.1"
poethepoet = ">=0.32.1"
pre-commit = ">=4.0.1"
pytest = ">=8.3.4"
pytest-mock = ">=3.14.0"
pytest-xdist = ">=3.6.1"
ruff = ">=0.9.2"
shellcheck-py = ">=0.10.0.1"
typeguard = ">=4.4.1"

[tool.poetry.group.dev.dependencies]  # https://python-poetry.org/docs/managing-dependencies#dependency-groups
cruft = ">=2.16.0"
ipykernel = ">=6.29.4"
ipython = ">=8.18.0"
ipywidgets = ">=8.1.2"
pdoc = ">=15.0.1"

[tool.commitizen]  # https://commitizen-tools.github.io/commitizen/config/
bump_message = "bump: v$current_version â†’ v$new_version"
tag_format = "v$version"
update_changelog_on_bump = true
version_provider = "pep621"

[tool.coverage.report]  # https://coverage.readthedocs.io/en/latest/config.html#report
fail_under = 0
precision = 1
show_missing = true
skip_covered = true

[tool.coverage.run]  # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["src"]

[tool.coverage.xml]  # https://coverage.readthedocs.io/en/latest/config.html#xml
output = "reports/coverage.xml"

[tool.mypy]  # https://mypy.readthedocs.io/en/latest/config_file.html
junit_xml = "reports/mypy.xml"
strict = true
disallow_subclassing_any = false
disallow_untyped_decorators = false
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true

[tool.pytest.ini_options]  # https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
addopts = "--color=yes --doctest-modules --exitfirst --failed-first --strict-config --strict-markers --typeguard-packages=imperiumengine --verbosity=2 --junitxml=reports/pytest.xml"
filterwarnings = ["error", "ignore::DeprecationWarning"]
testpaths = ["src", "tests"]
xfail_strict = true

[tool.ruff]  # https://docs.astral.sh/ruff/settings/
fix = true
line-length = 100
src = ["src", "tests"]
target-version = "py313"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["A", "ASYNC", "B", "BLE", "C4", "C90", "D", "DTZ", "E", "EM", "ERA", "F", "FBT", "FLY", "FURB", "G", "I", "ICN", "INP", "INT", "ISC", "LOG", "N", "NPY", "PERF", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "Q", "RET", "RSE", "RUF", "S", "SIM", "SLF", "SLOT", "T10", "T20", "TC", "TID", "TRY", "UP", "W", "YTT"]
ignore = ["D203","D101",'D400','ERA001',"T201","D104", "G004","D100","TRY401","D213", "E501", "RET504", "S101", "S307"]
unfixable = ["ERA001", "F401", "F841", "T201", "T203"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.pycodestyle]
max-doc-length = 300

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.poe.tasks]  # https://github.com/nat-n/poethepoet

  [tool.poe.tasks.docs]
  help = "Generate this package's docs"
  cmd = """
    pdoc
      --docformat $docformat
      --output-directory $outputdirectory
      imperiumengine
    """

    [[tool.poe.tasks.docs.args]]
    help = "The docstring style (default: numpy)"
    name = "docformat"
    options = ["--docformat"]
    default = "numpy"

    [[tool.poe.tasks.docs.args]]
    help = "The output directory (default: docs)"
    name = "outputdirectory"
    options = ["--output-directory"]
    default = "docs"

  [tool.poe.tasks.lint]
  help = "Lint this package"
  cmd = """
    pre-commit run
      --all-files
      --color always
    """

  [tool.poe.tasks.test]
  help = "Test this package"

    [[tool.poe.tasks.test.sequence]]
    cmd = "coverage run"

    [[tool.poe.tasks.test.sequence]]
    cmd = "coverage report"

    [[tool.poe.tasks.test.sequence]]
    cmd = "coverage xml"
