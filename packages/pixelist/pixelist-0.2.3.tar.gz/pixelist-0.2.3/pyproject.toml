# Schema: https://json.schemastore.org/pyproject.json

[project]
name = "pixelist"
version = "0.2.3"
description = "Experiment with image filter workflows, by superpositions."
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [
    { name = "AARMN The Limitless", email = "aarmn80@gmail.com" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "numpy>=2.2.1",
    "pydantic>=2.10.5",
]

[project.urls]
Homepage = "https://github.com/aarmn/pixelist"
Repository = "https://github.com/aarmn/pixelist.git"
Issues = "https://github.com/aarmn/pixelist/issues"
Changelog = "https://github.com/aarmn/pixelist/releases"
Documentation = "https://github.com/aarmn/pixelist#readme"

[project.optional-dependencies]
display = [
    "matplotlib>=3.5.0",
    "opencv-python>=4.5.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-sugar>=0.9.7",
    "coverage[toml]>=7.3.2",
    "ruff>=0.1.9"
]
dev = [
    "build>=1.0.0",
    "twine>=4.0.0",
    "act-cli>=0.2.0",
    "jupyterlab>=4.0.0",
]
all = [
    "pixelist[display,test,dev]"
]

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
extend-select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "W",    # pycodestyle warnings
    "C90",  # mccabe complexity
    "N",    # pep8-naming
    "D",    # pydocstyle
    "UP",   # pyupgrade
    "PL",   # pylint
    "RUF",  # ruff-specific rules
]
ignore = ["E203", "W505", "D212", "D100", "D104"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]  # Disable docstring checks in tests

[tool.pytest.ini_options]
addopts = "-v --cov=pixelist --cov-report=xml --cov-report=html"
testpaths = ["tests"]
python_files = ["test_*.py"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

[tool.coverage.run]
source = ["pixelist"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
