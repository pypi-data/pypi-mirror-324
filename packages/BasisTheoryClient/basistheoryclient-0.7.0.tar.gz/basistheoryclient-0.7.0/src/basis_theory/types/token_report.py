# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .token_metrics import TokenMetrics
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class TokenReport(UniversalBaseModel):
    included_monthly_active_tokens: typing.Optional[int] = None
    monthly_active_tokens: typing.Optional[int] = None
    metrics_by_type: typing.Optional[typing.Dict[str, typing.Optional[TokenMetrics]]] = None
    total_tokens: typing.Optional[int] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
