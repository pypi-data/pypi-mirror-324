name: Publish to PyPI
on:
  pull_request:
  release:
    types: [published]
  push:
    tags: ["v*"]

concurrency:
  group: publish-pypi
  cancel-in-progress: false

jobs:
  publish-pypi-test:
    name: Publish to TestPyPI
    environment:
      name: test
      url: https://test.pypi.org/project/ultraplot/
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
        shell: bash

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Build package
        run: |
          python -m pip install --upgrade pip wheel setuptools setuptools_scm build twine
          python -m build --sdist --wheel . --outdir dist

      - name: CheckFiles
        run: |
          ls dist
        shell: bash

      - name: Test wheels
        run: |
          pushd dist
          python -m pip install ultraplot*.whl

          version=$(python -c "import ultraplot; print(ultraplot.__version__)")
          echo "Version: $version"
          if [[ "$version" == "0."* ]]; then
            echo "Version is not set correctly!"
            exit 1
          fi

          python -m twine check *
          popd
        shell: bash

      - name: Publish to TestPyPI
        if: github.event_name != 'pull_request'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          # releases generate both release and tag events so
          # we get a race condition if we don't skip existing
          skip-existing: ${{ github.event_name == 'release' && 'true' || 'false' }}

  publish-prod:
    name: Publish to PyPI
    needs: publish-pypi-test
    environment:
      name: prod
      url: https://pypi.org/project/ultraplot/
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
        shell: bash

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Build package
        run: |
          python -m pip install --upgrade pip wheel setuptools setuptools_scm build twine
          python -m build --sdist --wheel . --outdir dist

      - name: CheckFiles
        run: |
          ls dist
        shell: bash

      - name: Test wheels
        run: |
          pushd dist
          python -m pip install ultraplot*.whl

          version=$(python -c "import ultraplot; print(ultraplot.__version__)")
          echo "Version: $version"
          if [[ "$version" == "0."* ]]; then
            echo "Version is not set correctly!"
            exit 1
          fi

          python -m twine check *
          popd
        shell: bash

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
