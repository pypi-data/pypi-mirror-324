Metadata-Version: 2.2
Name: redranger
Version: 0.1.1
Summary: A Collection of Machine Learning Algorithms implemented from Scratch
Home-page: https://github.com/username/neuron
Author: Karthikeyan
Author-email: Karthikeyan <karthikkrishna0907@gmail.com>
License: MIT License
        
        Copyright (c) 2025 Karthikeyan
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
Project-URL: Homepage, https://github.com
Project-URL: Issues, https://github.com
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: author
Dynamic: home-page
Dynamic: requires-python


# Py-redranger

redranger is a collection of machine learning models implemented from scratch. This library provides simple and easy-to-use implementations of various machine learning algorithms, including linear regression, multiple regression, logistic regression, k-nearest neighbors (KNN), decision trees,random forests,XGB classifier and SVM.

## Installation

You can install redranger using pip:

```bash
pip install redranger
```

## Usage

Here an examples of how to use the models provided by redranger:

### Linear Regression

```python
from redranger import LinearRegression
import numpy as np

# Example data
X = np.array([[1], [2], [3], [4]])
y = np.array([2, 4, 6, 8])

# Create and train the model
model = LinearRegression(learning_rate=0.01, epochs=1000)
model.fit(X, y)

# Make predictions
predictions = model.predict(X)
print("Predictions:", predictions)

```
similarly implement all other algorithms

## Algorithms

redranger includes the following machine learning algorithms:

Linear Regression - A basic regression model that fits a linear relationship between independent and dependent variables.
Multiple Linear Regression - An extension of linear regression that handles multiple input features.
Logistic Regression - A classification algorithm based on the sigmoid function for binary classification problems.
K-Nearest Neighbors (KNN) - A non-parametric method used for classification and regression based on distance metrics.
Decision Tree - A tree-based model that splits data based on feature importance to make decisions.
Random Forest - An ensemble method using multiple decision trees to improve prediction accuracy and reduce overfitting.
Support Vector Machine (SVM) - A powerful classification algorithm that finds the optimal hyperplane for separating classes.
XGBoost - An optimized gradient boosting algorithm that builds trees sequentially to minimize errors


## Contributing

Contributions are welcome! Please open an issue or submit a pull request on GitHub.

## License

This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for more details.

## Contact

For any questions or feedback, please contact [Karthikeyan](mailto:karthikkrishna0907@gmail.com).
