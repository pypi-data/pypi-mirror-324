# coding: utf-8

"""
    Computebench Service API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.tool_executions_controller_execute_tool_with_version200_response_data import ToolExecutionsControllerExecuteToolWithVersion200ResponseData

class TestToolExecutionsControllerExecuteToolWithVersion200ResponseData(unittest.TestCase):
    """ToolExecutionsControllerExecuteToolWithVersion200ResponseData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ToolExecutionsControllerExecuteToolWithVersion200ResponseData:
        """Test ToolExecutionsControllerExecuteToolWithVersion200ResponseData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ToolExecutionsControllerExecuteToolWithVersion200ResponseData`
        """
        model = ToolExecutionsControllerExecuteToolWithVersion200ResponseData()
        if include_optional:
            return ToolExecutionsControllerExecuteToolWithVersion200ResponseData(
                id = '',
                type = '',
                attributes = do_sdk_platform.models.execute_tool_dto.ExecuteToolDto(
                    inputs = do_sdk_platform.models.inputs.inputs(), 
                    outputs = do_sdk_platform.models.outputs.outputs(), 
                    cluster_id = '', )
            )
        else:
            return ToolExecutionsControllerExecuteToolWithVersion200ResponseData(
                id = '',
                type = '',
                attributes = do_sdk_platform.models.execute_tool_dto.ExecuteToolDto(
                    inputs = do_sdk_platform.models.inputs.inputs(), 
                    outputs = do_sdk_platform.models.outputs.outputs(), 
                    cluster_id = '', ),
        )
        """

    def testToolExecutionsControllerExecuteToolWithVersion200ResponseData(self):
        """Test ToolExecutionsControllerExecuteToolWithVersion200ResponseData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
