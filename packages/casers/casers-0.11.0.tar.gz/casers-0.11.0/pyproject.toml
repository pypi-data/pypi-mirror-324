[build-system]
requires = ["maturin>=1.2,<2.0"]
build-backend = "maturin"

[project]
name = "casers"
version = "0.11.0"
description = "String case converter for Python written in Rust"
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
license = {file = "LICENSE"}
keywords = ["case", "rust", "convert cases"]
readme = "README.md"
authors = [{email = "daxartio@gmail.com"}, {name = "Danil Akhtarov"}]
dependencies = []

[project.optional-dependencies]
pydantic = [
    "pydantic>=2.0.0,<3.0.0",
]

[project.urls]
repository = "https://github.com/daxartio/casers"
homepage = "https://pypi.org/project/casers"
Changelog = "https://github.com/daxartio/casers/blob/main/CHANGELOG.md"

[project.scripts]
casers = 'casers.cli.app:run'

[tool.maturin]
module-name = "casers._casers"
features = ["pyo3/extension-module"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.11.0"
tag_format = "$version"
version_files = [
    "casers/__init__.py",
    "Cargo.toml:version",
    "pyproject.toml:version"
]
bump_message = "chore(release): version $current_version â†’ $new_version"
update_changelog_on_bump = true

[tool.poetry]
name = "casers"
version = "0.11.0"
description = ""
authors = ["Danil Akhtarov <daxartio@gmail.com>"]

[tool.poetry.scripts]
casers = 'casers.cli.app:run'

[tool.poetry.dependencies]
python = "^3.8"
pydantic = {version = "^2", optional = true}

[tool.poetry.group.dev.dependencies]
black = "^24"
maturin = "^1.8.1"
mypy = "^1.14"
pytest = "^8.3"
pytest-benchmark = "^4.0.0"
pytest-cov = "^5.0.0"
pytest-deadfixtures = "^2.2.1"
pytest-mock = "^3.14"

[tool.poetry.group.git.dependencies]
commitizen = "^3.29.1"

[tool.poetry.extras]
pydantic = ["pydantic"]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.coverage.run]
omit = ["tests/*", "**/__main__.py", "**/.venv/*", "**/site-packages/*", "casers/cli/*", "benches/*"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 100

[tool.pytest.ini_options]
addopts = "--strict-markers --showlocals --verbosity 2 --doctest-modules --doctest-continue-on-failure --doctest-glob=README.md"
log_level = "DEBUG"
