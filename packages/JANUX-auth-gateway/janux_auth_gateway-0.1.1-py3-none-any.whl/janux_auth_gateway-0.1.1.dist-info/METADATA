Metadata-Version: 2.3
Name: JANUX-auth-gateway
Version: 0.1.1
Summary: A modular OAuth2 and JWT authentication gateway for FastAPI microservices.
License: Apache-2.0
Author: FOX Techniques
Author-email: ali.nabbi@fox-techniques.com
Requires-Python: >=3.10,<4.0
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: argon2-cffi (>=23.1.0,<24.0.0)
Requires-Dist: bcrypt (>=4.2.1,<5.0.0)
Requires-Dist: beanie (>=1.29.0,<2.0.0)
Requires-Dist: coloredlogs (>=15.0.1,<16.0.0)
Requires-Dist: fastapi[standard] (>=0.115.6,<0.116.0)
Requires-Dist: motor (==3.6.1)
Requires-Dist: passlib[bcrypt] (>=1.7.4,<2.0.0)
Requires-Dist: pyjwt[crypto] (>=2.10.1,<3.0.0)
Requires-Dist: pymongo (==4.9)
Requires-Dist: python-dotenv (>=1.0.1,<2.0.0)
Requires-Dist: python-json-logger (>=3.2.1,<4.0.0)
Requires-Dist: python-multipart (>=0.0.20,<0.0.21)
Requires-Dist: redis (>=5.2.1,<6.0.0)
Requires-Dist: uvicorn (>=0.34.0,<0.35.0)
Project-URL: Homepage, https://github.com/fox-techniques/janux-auth-gateway
Project-URL: Repository, https://github.com/fox-techniques/janux-auth-gateway
Description-Content-Type: text/markdown

# JANUX Authentication Gateway

[![Python](https://img.shields.io/badge/Python-3.10%2B-darkcyan)](https://pypi.org/project/janux-auth-gateway/)
[![License: Apache 2.0](https://img.shields.io/badge/License-Apache2.0-orange.svg)](https://github.com/fox-techniques/janux-auth-gateway/blob/main/LICENSE)
[![GitHub](https://img.shields.io/badge/GitHub-janux--auth--gateway-181717?logo=github)](https://github.com/fox-techniques/janux-auth-gateway)

The JANUX Authentication Gateway is a modular and extensible authentication microservice built using FastAPI. It supports user and admin authentication, JWT management, and MongoDB operations via Beanie ODM. This package is designed for developers seeking a robust and scalable authentication solution for their applications.

## Features

- Secure password hashing and verification using bcrypt.
- JWT-based authentication for users and admins.
- Modular API routing for user, admin, and authentication endpoints.
- Centralized logging and error handling for better maintainability.
- MongoDB integration using Beanie ODM.
- Health check and root endpoint for monitoring.

---

