[tool.poetry]
name = "ampel-ztf"
version = "0.10.3a5"
description = "Zwicky Transient Facility support for the Ampel system"
authors = [
    "Valery Brinnel",
    "Jakob van Santen <jakob.van.santen@desy.de>",
    "Sjoert van Velzen",
    "Jakob Nordin",
]
maintainers = [
    "Jakob van Santen <jakob.van.santen@desy.de>"
]
license = "BSD-3-Clause"
readme = "README.md"
homepage = "https://ampelproject.github.io"
repository = "https://github.com/AmpelProject/Ampel-ZTF"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Typing :: Typed",
]
packages = [
    {include = "ampel"}
]
exclude = ["ampel/py.typed"]
include = [
    'conf/*/*.json',
    'conf/*/*/*.json',
    'conf/*/*.yaml',
    'conf/*/*/*.yaml',
    'conf/*/*.yml',
    'conf/*/*/*.yml',
]


[tool.poetry.dependencies]
python = "^3.10"
astropy = ">=5.0"
matplotlib = "^3.3.4"
backoff = "^2.0.0"
fastavro = "^1.9.2"
requests = "^2.25.1"
requests-toolbelt = "^1.0.0"
confluent-kafka = {version = "^2.0.0", optional = true}
healpy = {version = "^1.15", optional = true}
light-curve = {version = ">=0.10,<0.11", optional = true}
ampel-ztf-archive = {version = "^0.8.0-alpha.0", optional = true}
ampel-core = ">=0.10.4.post0,<0.11"
ampel-alerts = ">=0.10.1,<0.11"
ampel-photometry = ">=0.10.1,<0.11"
ampel-plot = {version = "^0.9.0a2", optional = true}
pandas = {version = ">=1.5", optional = true}
scipy = "^1.9.3"
planobs = {version = "^0.7.0", optional = true}

[tool.poetry.dev-dependencies]
# need to be able to build a config with AmpelExceptionPublisher included
ampel-core = {version = "*", extras = ["slack"]}
pytest = "^8.3.3"
pytest-cov = "^6.0.0"
pytest-mock = "^3.14.0"
mongomock = "^4.3"
mypy = "^1.11.2"
pytest-timeout = "^2.3.1"
pytest-asyncio = "^0.25.0"
types-requests = "^2.25.9"
before_after = "^1.0.1"

[tool.poetry.extras]
archive = ["ampel-ztf-archive"]
healpix = ["healpy"]
light-curve = ["light-curve"]
kafka = ["confluent-kafka"]
plot = ["ampel-plot"]
fp = ["pandas", "planobs"]
bayes = ["pandas", "planobs", "ampel-plot"]

[tool.poetry.group.dev.dependencies]
types-pytz = "^2023.3.1.1"
types-requests = "^2.32.0.20241016"

[build-system]
requires = ["poetry-core>=1.0.0", "setuptools >= 40.6.0", "wheel"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
relative_files = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--showlocals -ra"
filterwarnings = [
    "error",
    # pulled in by matplotlib
    "ignore:datetime.datetime.utcfromtimestamp\\(\\) is deprecated:DeprecationWarning:dateutil",
    # Expected `list[definition-ref]` but got `tuple` - serialized value may not be as expected
    "ignore:Pydantic serializer warnings:UserWarning",
    # UserWarning: Field name "job_sig" shadows an attribute in parent "AbsEventUnit"
    "ignore:Field name \".*\" shadows an attribute in parent:UserWarning",
]

[tool.mypy]
namespace_packages = true
show_error_codes = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
  "astropy.*",
  "confluent_kafka.*",
  #"ampel.ztf.t0.ArchiveUpdater",
  "pandas.*",
  #"matplotlib.*",
  "requests_toolbelt.*",
  "scipy.*",
  #"ztfquery",
  "healpy",
  "light_curve",
  "planobs.*"
]
ignore_missing_imports = true

[tool.black]
line-length = 88

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = [
    "E4",
    "E7",
    "E9",
    "F",
    "I",
    "UP",
    "B",
    "DTZ",
    # "T20",
    "PT",
    "RET",
    "SLF",
    "SIM",
    # # "ARG", # sometimes your arguments have to conform to an interface
    # # "ERA", # seems to prohibit all comments, that's bad
    "PL",
    "PERF",
    "RUF",
]
ignore = [
    "E741", # ambiguous variable name
    "UP009", # UTF-8 encoding declaration is unnecessary
    "PLR09", # too many (arguments|branches)
    "PLR2004", # Magic value used in comparison
    "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["RUF018"] # assignment in assert is just fine in tests

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true
