# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .pipeline_file import PipelineFile
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class PaginatedListPipelineFilesResponse(UniversalBaseModel):
    files: typing.List[PipelineFile] = pydantic.Field()
    """
    The files to list
    """

    limit: int = pydantic.Field()
    """
    The limit of the files
    """

    offset: int = pydantic.Field()
    """
    The offset of the files
    """

    total_count: int = pydantic.Field()
    """
    The total number of files
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
