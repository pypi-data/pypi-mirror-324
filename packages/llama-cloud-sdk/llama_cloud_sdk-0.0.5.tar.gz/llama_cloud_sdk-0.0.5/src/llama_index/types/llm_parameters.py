# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .supported_llm_model_names import SupportedLlmModelNames
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class LlmParameters(UniversalBaseModel):
    model_name: typing.Optional[SupportedLlmModelNames] = pydantic.Field(default=None)
    """
    The name of the model to use for LLM completions.
    """

    system_prompt: typing.Optional[str] = pydantic.Field(default=None)
    """
    The system prompt to use for the completion.
    """

    temperature: typing.Optional[float] = pydantic.Field(default=None)
    """
    The temperature value for the model.
    """

    use_chain_of_thought_reasoning: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether to use chain of thought reasoning.
    """

    class_name: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
