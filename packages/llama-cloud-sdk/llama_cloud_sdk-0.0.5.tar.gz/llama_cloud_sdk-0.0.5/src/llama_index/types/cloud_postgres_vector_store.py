# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class CloudPostgresVectorStore(UniversalBaseModel):
    supports_nested_metadata_filters: typing.Optional[bool] = None
    database: str
    host: str
    password: str
    port: int
    user: str
    table_name: str
    schema_name: str
    embed_dim: int
    hybrid_search: typing.Optional[bool] = None
    perform_setup: typing.Optional[bool] = None
    class_name: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
