# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from .local_eval import LocalEval
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class LocalEvalResults(UniversalBaseModel):
    """
    Schema for the result of a local evaluation.
    """

    project_id: str = pydantic.Field()
    """
    The ID of the project.
    """

    eval_set_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The ID of the local eval result set.
    """

    app_name: str = pydantic.Field()
    """
    The name of the app.
    """

    eval_name: str = pydantic.Field()
    """
    The name of the eval.
    """

    result: LocalEval = pydantic.Field()
    """
    The eval results.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
