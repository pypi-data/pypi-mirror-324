# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
from .report_event_item_event_data import ReportEventItemEventData
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class ReportEventItem(UniversalBaseModel):
    """
    From backend schema
    """

    id: str = pydantic.Field()
    """
    The id of the event
    """

    report_id: str = pydantic.Field()
    """
    The id of the report
    """

    event_type: str = pydantic.Field()
    """
    The type of the event
    """

    event_data: ReportEventItemEventData = pydantic.Field()
    """
    The data for the event
    """

    timestamp: dt.datetime = pydantic.Field()
    """
    The timestamp for the event
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
