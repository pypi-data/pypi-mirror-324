# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
import datetime as dt
from .role import Role
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class UserOrganizationRole(UniversalBaseModel):
    """
    Schema for a user's role in an organization.
    """

    id: str = pydantic.Field()
    """
    Unique identifier
    """

    created_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    Creation datetime
    """

    updated_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    Update datetime
    """

    user_id: str = pydantic.Field()
    """
    The user's ID.
    """

    organization_id: str = pydantic.Field()
    """
    The organization's ID.
    """

    role_id: str = pydantic.Field()
    """
    The role's ID.
    """

    role: Role = pydantic.Field()
    """
    The role.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
