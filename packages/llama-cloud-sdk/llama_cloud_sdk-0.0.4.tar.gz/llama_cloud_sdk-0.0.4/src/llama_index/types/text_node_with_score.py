# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .text_node import TextNode
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class TextNodeWithScore(UniversalBaseModel):
    """
    Same as NodeWithScore but type for node is a TextNode instead of BaseNode.
    FastAPI doesn't accept abstract classes like BaseNode.
    """

    node: TextNode
    score: typing.Optional[float] = None
    class_name: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
