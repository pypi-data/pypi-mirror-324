# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class PipelineDataSourceCreate(UniversalBaseModel):
    """
    Schema for creating an association between a data source and a pipeline.
    """

    data_source_id: str = pydantic.Field()
    """
    The ID of the data source.
    """

    sync_interval: typing.Optional[float] = pydantic.Field(default=None)
    """
    The interval at which the data source should be synced.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
