# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from .report_state import ReportState
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ReportMetadata(UniversalBaseModel):
    """
    Used to update the metadata of a report.
    """

    id: str = pydantic.Field()
    """
    The id of the report
    """

    name: str = pydantic.Field()
    """
    The name of the report
    """

    report_metadata: typing.Dict[str, typing.Optional[typing.Any]] = pydantic.Field()
    """
    The metadata for the report
    """

    state: ReportState = pydantic.Field()
    """
    The state of the report
    """

    input_files: typing.Optional[typing.List[str]] = None
    template_file: typing.Optional[str] = None
    template_text: typing.Optional[str] = None
    template_instructions: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
