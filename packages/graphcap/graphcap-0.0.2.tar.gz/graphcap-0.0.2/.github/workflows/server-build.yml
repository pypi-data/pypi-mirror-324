# SPDX-License-Identifier: Apache-2.0
name: GraphCap Server CI/CD

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - 'server/**'
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]
    paths:
      - 'server/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/server

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install Ruff
        run: pip install ruff
      - name: Run Ruff
        run: |
          ruff check ./server --output-format=github
          ruff format --check ./server

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build test container
        uses: docker/build-push-action@v6
        with:
          context: ./server
          file: ./server/Dockerfile.server
          load: true
          tags: graphcap-server:test
          target: test
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Run tests
        run: |
          docker run --rm graphcap-server:test pytest tests/ -v -m "server"

  deploy:
    needs: test
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=sha,prefix=,suffix=,format=short

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./server
          file: ./server/Dockerfile.server
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max