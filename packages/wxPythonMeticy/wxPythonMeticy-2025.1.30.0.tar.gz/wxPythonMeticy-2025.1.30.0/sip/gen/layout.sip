//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

enum wxEdge
{
    wxLeft,
    wxTop,
    wxRight,
    wxBottom,
    wxWidth,
    wxHeight,
    wxCentre,
    wxCenter,
    wxCentreX,
    wxCentreY
};

enum wxRelationship
{
    wxUnconstrained,
    wxAsIs,
    wxPercentOf,
    wxAbove,
    wxBelow,
    wxLeftOf,
    wxRightOf,
    wxSameAs,
    wxAbsolute
};

const int wxLAYOUT_DEFAULT_MARGIN;

class wxIndividualLayoutConstraint : wxObject
{
    %Docstring
        IndividualLayoutConstraint() -> None
    %End
    %TypeHeaderCode
        #include <wx/layout.h>
    %End

public:
    wxIndividualLayoutConstraint();

    virtual
    ~wxIndividualLayoutConstraint();

    void Set(
        wxRelationship rel,
        wxWindow * otherW,
        wxEdge otherE,
        int val = 0,
        int margin = wxLAYOUT_DEFAULT_MARGIN
    );
    %Docstring
        Set(rel : Relationship, otherW : Window, otherE : Edge, val: int=0, margin: int=LAYOUT_DEFAULT_MARGIN) -> None
    %End

    void LeftOf(
        wxWindow * sibling,
        int margin = wxLAYOUT_DEFAULT_MARGIN
    );
    %Docstring
        LeftOf(sibling : Window, margin: int=LAYOUT_DEFAULT_MARGIN) -> None
    %End

    void RightOf(
        wxWindow * sibling,
        int margin = wxLAYOUT_DEFAULT_MARGIN
    );
    %Docstring
        RightOf(sibling : Window, margin: int=LAYOUT_DEFAULT_MARGIN) -> None
    %End

    void Above(
        wxWindow * sibling,
        int margin = wxLAYOUT_DEFAULT_MARGIN
    );
    %Docstring
        Above(sibling : Window, margin: int=LAYOUT_DEFAULT_MARGIN) -> None
    %End

    void Below(
        wxWindow * sibling,
        int margin = wxLAYOUT_DEFAULT_MARGIN
    );
    %Docstring
        Below(sibling : Window, margin: int=LAYOUT_DEFAULT_MARGIN) -> None
    %End

    void SameAs(
        wxWindow * otherW,
        wxEdge edge,
        int margin = wxLAYOUT_DEFAULT_MARGIN
    );
    %Docstring
        SameAs(otherW : Window, edge : Edge, margin: int=LAYOUT_DEFAULT_MARGIN) -> None
    %End

    void PercentOf(
        wxWindow * otherW,
        wxEdge wh,
        int per
    );
    %Docstring
        PercentOf(otherW : Window, wh : Edge, per : int) -> None
    %End

    void Absolute(
        int val
    );
    %Docstring
        Absolute(val : int) -> None
    %End

    void Unconstrained();
    %Docstring
        Unconstrained() -> None
    %End

    void AsIs();
    %Docstring
        AsIs() -> None
    %End

    wxWindow * GetOtherWindow();
    %Docstring
        GetOtherWindow() -> Window
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxIndividualLayoutConstraint_GetOtherWindow(sipCpp);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    wxWindow * _wxIndividualLayoutConstraint_GetOtherWindow(wxIndividualLayoutConstraint* self)
    {
        return (wxWindow*)self->GetOtherWindow();
    }
    %End

    wxEdge GetMyEdge() const;
    %Docstring
        GetMyEdge() -> Edge
    %End

    void SetEdge(
        wxEdge which
    );
    %Docstring
        SetEdge(which : Edge) -> None
    %End

    void SetValue(
        int v
    );
    %Docstring
        SetValue(v : int) -> None
    %End

    int GetMargin() const;
    %Docstring
        GetMargin() -> int
    %End

    void SetMargin(
        int m
    );
    %Docstring
        SetMargin(m : int) -> None
    %End

    int GetValue() const;
    %Docstring
        GetValue() -> int
    %End

    int GetPercent() const;
    %Docstring
        GetPercent() -> int
    %End

    int GetOtherEdge() const;
    %Docstring
        GetOtherEdge() -> int
    %End

    bool GetDone() const;
    %Docstring
        GetDone() -> bool
    %End

    void SetDone(
        bool d
    );
    %Docstring
        SetDone(d : bool) -> None
    %End

    wxRelationship GetRelationship() const;
    %Docstring
        GetRelationship() -> Relationship
    %End

    void SetRelationship(
        wxRelationship r
    );
    %Docstring
        SetRelationship(r : Relationship) -> None
    %End

    bool ResetIfWin(
        wxWindow * otherW
    );
    %Docstring
        ResetIfWin(otherW : Window) -> bool
    %End

    bool SatisfyConstraint(
        wxLayoutConstraints * constraints,
        wxWindow * win
    );
    %Docstring
        SatisfyConstraint(raints : LayoutConstraints, win : Window) -> bool
    %End

    int GetEdge(
        wxEdge which,
        wxWindow * thisWin,
        wxWindow * other
    ) const;
    %Docstring
        GetEdge(which : Edge, thisWin : Window, other : Window) -> int
    %End

    %Property(name=Done, get=GetDone, set=SetDone)
    %Property(name=Margin, get=GetMargin, set=SetMargin)
    %Property(name=MyEdge, get=GetMyEdge)
    %Property(name=OtherEdge, get=GetOtherEdge)
    %Property(name=OtherWindow, get=GetOtherWindow)
    %Property(name=Percent, get=GetPercent)
    %Property(name=Relationship, get=GetRelationship, set=SetRelationship)
    %Property(name=Value, get=GetValue, set=SetValue)
};  // end of class wxIndividualLayoutConstraint


class wxLayoutConstraints : wxObject
{
    %Docstring
        LayoutConstraints() -> None
    %End
    %TypeHeaderCode
        #include <wx/layout.h>
    %End

public:
    wxLayoutConstraints();

    virtual
    ~wxLayoutConstraints();

    wxIndividualLayoutConstraint left;

    wxIndividualLayoutConstraint top;

    wxIndividualLayoutConstraint right;

    wxIndividualLayoutConstraint bottom;

    wxIndividualLayoutConstraint width;

    wxIndividualLayoutConstraint height;

    wxIndividualLayoutConstraint centreX;

    wxIndividualLayoutConstraint centreY;

    bool SatisfyConstraints(
        wxWindow * win,
        int * noChanges
    );
    %Docstring
        SatisfyConstraints(win : Window, noChanges : int) -> bool
    %End

    bool AreSatisfied() const;
    %Docstring
        AreSatisfied() -> bool
    %End

};  // end of class wxLayoutConstraints



//---------------------------------------------------------------------------

